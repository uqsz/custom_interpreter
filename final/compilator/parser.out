Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression instruction
Rule 2     expression -> instruction
Rule 3     instruction -> LCURLY expression RCURLY
Rule 4     instruction -> line SEMICOLON
Rule 5     instruction -> for_state
Rule 6     instruction -> ifelse_state
Rule 7     instruction -> while_state
Rule 8     line -> assign
Rule 9     line -> PRINT print_state
Rule 10    line -> BREAK
Rule 11    line -> CONTINUE
Rule 12    line -> RETURN print_state
Rule 13    line -> RETURN
Rule 14    print_state -> operation COMMA print_state
Rule 15    print_state -> operation
Rule 16    assign -> object ASSIGN operation
Rule 17    assign -> object ADDASSIGN operation
Rule 18    assign -> object SUBASSIGN operation
Rule 19    assign -> object MULASSIGN operation
Rule 20    assign -> object DIVASSIGN operation
Rule 21    operation -> LPAREN operation RPAREN
Rule 22    operation -> operation PLUS operation
Rule 23    operation -> operation MINUS operation
Rule 24    operation -> operation TIMES operation
Rule 25    operation -> operation DIVIDE operation
Rule 26    operation -> operation DOTADD operation
Rule 27    operation -> operation DOTSUB operation
Rule 28    operation -> operation DOTMUL operation
Rule 29    operation -> operation DOTDIV operation
Rule 30    operation -> MINUS operation
Rule 31    operation -> operation TRANSPOSE
Rule 32    operation -> EYE LPAREN operation RPAREN
Rule 33    operation -> ZEROS LPAREN operation RPAREN
Rule 34    operation -> ONES LPAREN operation RPAREN
Rule 35    operation -> object
Rule 36    operation -> number
Rule 37    operation -> matrix
Rule 38    bool -> LPAREN bool RPAREN
Rule 39    bool -> operation MORE operation
Rule 40    bool -> operation LESS operation
Rule 41    bool -> operation MOREOREQ operation
Rule 42    bool -> operation LESSOREQ operation
Rule 43    bool -> operation EQUALS operation
Rule 44    bool -> operation NOTEQUALS operation
Rule 45    object -> ID vector
Rule 46    object -> ID
Rule 47    ifelse_state -> IF LPAREN bool RPAREN instruction
Rule 48    ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction
Rule 49    while_state -> WHILE LPAREN bool RPAREN instruction
Rule 50    for_state -> FOR ID ASSIGN operation COLON operation instruction
Rule 51    matrix -> LSQUAR row RSQUAR
Rule 52    row -> row COMMA vector
Rule 53    row -> vector
Rule 54    vector -> LSQUAR elem RSQUAR
Rule 55    elem -> elem COMMA number
Rule 56    elem -> number
Rule 57    number -> INT
Rule 58    number -> FLOAT
Rule 59    number -> STRING

Terminals, with rules where they appear

ADDASSIGN            : 17
ASSIGN               : 16 50
BREAK                : 10
COLON                : 50
COMMA                : 14 52 55
CONTINUE             : 11
DIVASSIGN            : 20
DIVIDE               : 25
DOTADD               : 26
DOTDIV               : 29
DOTMUL               : 28
DOTSUB               : 27
ELSE                 : 48
EQUALS               : 43
EYE                  : 32
FLOAT                : 58
FOR                  : 50
ID                   : 45 46 50
IF                   : 47 48
INT                  : 57
LCURLY               : 3
LESS                 : 40
LESSOREQ             : 42
LPAREN               : 21 32 33 34 38 47 48 49
LSQUAR               : 51 54
MINUS                : 23 30
MORE                 : 39
MOREOREQ             : 41
MULASSIGN            : 19
NOTEQUALS            : 44
ONES                 : 34
PLUS                 : 22
PRINT                : 9
RCURLY               : 3
RETURN               : 12 13
RPAREN               : 21 32 33 34 38 47 48 49
RSQUAR               : 51 54
SEMICOLON            : 4
STRING               : 59
SUBASSIGN            : 18
TIMES                : 24
TRANSPOSE            : 31
WHILE                : 49
ZEROS                : 33
error                : 

Nonterminals, with rules where they appear

assign               : 8
bool                 : 38 47 48 49
elem                 : 54 55
expression           : 1 3 0
for_state            : 5
ifelse_state         : 6
instruction          : 1 2 47 48 48 49 50
line                 : 4
matrix               : 37
number               : 36 55 56
object               : 16 17 18 19 20 35
operation            : 14 15 16 17 18 19 20 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 31 32 33 34 39 39 40 40 41 41 42 42 43 43 44 44 50 50
print_state          : 9 12 14
row                  : 51 52
vector               : 45 52 53
while_state          : 7

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression instruction
    (2) expression -> . instruction
    (3) instruction -> . LCURLY expression RCURLY
    (4) instruction -> . line SEMICOLON
    (5) instruction -> . for_state
    (6) instruction -> . ifelse_state
    (7) instruction -> . while_state
    (8) line -> . assign
    (9) line -> . PRINT print_state
    (10) line -> . BREAK
    (11) line -> . CONTINUE
    (12) line -> . RETURN print_state
    (13) line -> . RETURN
    (50) for_state -> . FOR ID ASSIGN operation COLON operation instruction
    (47) ifelse_state -> . IF LPAREN bool RPAREN instruction
    (48) ifelse_state -> . IF LPAREN bool RPAREN instruction ELSE instruction
    (49) while_state -> . WHILE LPAREN bool RPAREN instruction
    (16) assign -> . object ASSIGN operation
    (17) assign -> . object ADDASSIGN operation
    (18) assign -> . object SUBASSIGN operation
    (19) assign -> . object MULASSIGN operation
    (20) assign -> . object DIVASSIGN operation
    (45) object -> . ID vector
    (46) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    expression                     shift and go to state 1
    instruction                    shift and go to state 2
    line                           shift and go to state 4
    for_state                      shift and go to state 5
    ifelse_state                   shift and go to state 6
    while_state                    shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 1

    (0) S' -> expression .
    (1) expression -> expression . instruction
    (3) instruction -> . LCURLY expression RCURLY
    (4) instruction -> . line SEMICOLON
    (5) instruction -> . for_state
    (6) instruction -> . ifelse_state
    (7) instruction -> . while_state
    (8) line -> . assign
    (9) line -> . PRINT print_state
    (10) line -> . BREAK
    (11) line -> . CONTINUE
    (12) line -> . RETURN print_state
    (13) line -> . RETURN
    (50) for_state -> . FOR ID ASSIGN operation COLON operation instruction
    (47) ifelse_state -> . IF LPAREN bool RPAREN instruction
    (48) ifelse_state -> . IF LPAREN bool RPAREN instruction ELSE instruction
    (49) while_state -> . WHILE LPAREN bool RPAREN instruction
    (16) assign -> . object ASSIGN operation
    (17) assign -> . object ADDASSIGN operation
    (18) assign -> . object SUBASSIGN operation
    (19) assign -> . object MULASSIGN operation
    (20) assign -> . object DIVASSIGN operation
    (45) object -> . ID vector
    (46) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    instruction                    shift and go to state 18
    line                           shift and go to state 4
    for_state                      shift and go to state 5
    ifelse_state                   shift and go to state 6
    while_state                    shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 2

    (2) expression -> instruction .

    LCURLY          reduce using rule 2 (expression -> instruction .)
    PRINT           reduce using rule 2 (expression -> instruction .)
    BREAK           reduce using rule 2 (expression -> instruction .)
    CONTINUE        reduce using rule 2 (expression -> instruction .)
    RETURN          reduce using rule 2 (expression -> instruction .)
    FOR             reduce using rule 2 (expression -> instruction .)
    IF              reduce using rule 2 (expression -> instruction .)
    WHILE           reduce using rule 2 (expression -> instruction .)
    ID              reduce using rule 2 (expression -> instruction .)
    $end            reduce using rule 2 (expression -> instruction .)
    RCURLY          reduce using rule 2 (expression -> instruction .)


state 3

    (3) instruction -> LCURLY . expression RCURLY
    (1) expression -> . expression instruction
    (2) expression -> . instruction
    (3) instruction -> . LCURLY expression RCURLY
    (4) instruction -> . line SEMICOLON
    (5) instruction -> . for_state
    (6) instruction -> . ifelse_state
    (7) instruction -> . while_state
    (8) line -> . assign
    (9) line -> . PRINT print_state
    (10) line -> . BREAK
    (11) line -> . CONTINUE
    (12) line -> . RETURN print_state
    (13) line -> . RETURN
    (50) for_state -> . FOR ID ASSIGN operation COLON operation instruction
    (47) ifelse_state -> . IF LPAREN bool RPAREN instruction
    (48) ifelse_state -> . IF LPAREN bool RPAREN instruction ELSE instruction
    (49) while_state -> . WHILE LPAREN bool RPAREN instruction
    (16) assign -> . object ASSIGN operation
    (17) assign -> . object ADDASSIGN operation
    (18) assign -> . object SUBASSIGN operation
    (19) assign -> . object MULASSIGN operation
    (20) assign -> . object DIVASSIGN operation
    (45) object -> . ID vector
    (46) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    expression                     shift and go to state 19
    instruction                    shift and go to state 2
    line                           shift and go to state 4
    for_state                      shift and go to state 5
    ifelse_state                   shift and go to state 6
    while_state                    shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 4

    (4) instruction -> line . SEMICOLON

    SEMICOLON       shift and go to state 20


state 5

    (5) instruction -> for_state .

    LCURLY          reduce using rule 5 (instruction -> for_state .)
    PRINT           reduce using rule 5 (instruction -> for_state .)
    BREAK           reduce using rule 5 (instruction -> for_state .)
    CONTINUE        reduce using rule 5 (instruction -> for_state .)
    RETURN          reduce using rule 5 (instruction -> for_state .)
    FOR             reduce using rule 5 (instruction -> for_state .)
    IF              reduce using rule 5 (instruction -> for_state .)
    WHILE           reduce using rule 5 (instruction -> for_state .)
    ID              reduce using rule 5 (instruction -> for_state .)
    $end            reduce using rule 5 (instruction -> for_state .)
    RCURLY          reduce using rule 5 (instruction -> for_state .)
    ELSE            reduce using rule 5 (instruction -> for_state .)


state 6

    (6) instruction -> ifelse_state .

    LCURLY          reduce using rule 6 (instruction -> ifelse_state .)
    PRINT           reduce using rule 6 (instruction -> ifelse_state .)
    BREAK           reduce using rule 6 (instruction -> ifelse_state .)
    CONTINUE        reduce using rule 6 (instruction -> ifelse_state .)
    RETURN          reduce using rule 6 (instruction -> ifelse_state .)
    FOR             reduce using rule 6 (instruction -> ifelse_state .)
    IF              reduce using rule 6 (instruction -> ifelse_state .)
    WHILE           reduce using rule 6 (instruction -> ifelse_state .)
    ID              reduce using rule 6 (instruction -> ifelse_state .)
    $end            reduce using rule 6 (instruction -> ifelse_state .)
    RCURLY          reduce using rule 6 (instruction -> ifelse_state .)
    ELSE            reduce using rule 6 (instruction -> ifelse_state .)


state 7

    (7) instruction -> while_state .

    LCURLY          reduce using rule 7 (instruction -> while_state .)
    PRINT           reduce using rule 7 (instruction -> while_state .)
    BREAK           reduce using rule 7 (instruction -> while_state .)
    CONTINUE        reduce using rule 7 (instruction -> while_state .)
    RETURN          reduce using rule 7 (instruction -> while_state .)
    FOR             reduce using rule 7 (instruction -> while_state .)
    IF              reduce using rule 7 (instruction -> while_state .)
    WHILE           reduce using rule 7 (instruction -> while_state .)
    ID              reduce using rule 7 (instruction -> while_state .)
    $end            reduce using rule 7 (instruction -> while_state .)
    RCURLY          reduce using rule 7 (instruction -> while_state .)
    ELSE            reduce using rule 7 (instruction -> while_state .)


state 8

    (8) line -> assign .

    SEMICOLON       reduce using rule 8 (line -> assign .)


state 9

    (9) line -> PRINT . print_state
    (14) print_state -> . operation COMMA print_state
    (15) print_state -> . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    print_state                    shift and go to state 21
    operation                      shift and go to state 22
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 10

    (10) line -> BREAK .

    SEMICOLON       reduce using rule 10 (line -> BREAK .)


state 11

    (11) line -> CONTINUE .

    SEMICOLON       reduce using rule 11 (line -> CONTINUE .)


state 12

    (12) line -> RETURN . print_state
    (13) line -> RETURN .
    (14) print_state -> . operation COMMA print_state
    (15) print_state -> . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    SEMICOLON       reduce using rule 13 (line -> RETURN .)
    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    print_state                    shift and go to state 35
    operation                      shift and go to state 22
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 13

    (50) for_state -> FOR . ID ASSIGN operation COLON operation instruction

    ID              shift and go to state 36


state 14

    (45) object -> ID . vector
    (46) object -> ID .
    (54) vector -> . LSQUAR elem RSQUAR

    ASSIGN          reduce using rule 46 (object -> ID .)
    ADDASSIGN       reduce using rule 46 (object -> ID .)
    SUBASSIGN       reduce using rule 46 (object -> ID .)
    MULASSIGN       reduce using rule 46 (object -> ID .)
    DIVASSIGN       reduce using rule 46 (object -> ID .)
    COMMA           reduce using rule 46 (object -> ID .)
    PLUS            reduce using rule 46 (object -> ID .)
    MINUS           reduce using rule 46 (object -> ID .)
    TIMES           reduce using rule 46 (object -> ID .)
    DIVIDE          reduce using rule 46 (object -> ID .)
    DOTADD          reduce using rule 46 (object -> ID .)
    DOTSUB          reduce using rule 46 (object -> ID .)
    DOTMUL          reduce using rule 46 (object -> ID .)
    DOTDIV          reduce using rule 46 (object -> ID .)
    TRANSPOSE       reduce using rule 46 (object -> ID .)
    SEMICOLON       reduce using rule 46 (object -> ID .)
    RPAREN          reduce using rule 46 (object -> ID .)
    MORE            reduce using rule 46 (object -> ID .)
    LESS            reduce using rule 46 (object -> ID .)
    MOREOREQ        reduce using rule 46 (object -> ID .)
    LESSOREQ        reduce using rule 46 (object -> ID .)
    EQUALS          reduce using rule 46 (object -> ID .)
    NOTEQUALS       reduce using rule 46 (object -> ID .)
    COLON           reduce using rule 46 (object -> ID .)
    LCURLY          reduce using rule 46 (object -> ID .)
    PRINT           reduce using rule 46 (object -> ID .)
    BREAK           reduce using rule 46 (object -> ID .)
    CONTINUE        reduce using rule 46 (object -> ID .)
    RETURN          reduce using rule 46 (object -> ID .)
    FOR             reduce using rule 46 (object -> ID .)
    IF              reduce using rule 46 (object -> ID .)
    WHILE           reduce using rule 46 (object -> ID .)
    ID              reduce using rule 46 (object -> ID .)
    LSQUAR          shift and go to state 38

    vector                         shift and go to state 37

state 15

    (47) ifelse_state -> IF . LPAREN bool RPAREN instruction
    (48) ifelse_state -> IF . LPAREN bool RPAREN instruction ELSE instruction

    LPAREN          shift and go to state 39


state 16

    (49) while_state -> WHILE . LPAREN bool RPAREN instruction

    LPAREN          shift and go to state 40


state 17

    (16) assign -> object . ASSIGN operation
    (17) assign -> object . ADDASSIGN operation
    (18) assign -> object . SUBASSIGN operation
    (19) assign -> object . MULASSIGN operation
    (20) assign -> object . DIVASSIGN operation

    ASSIGN          shift and go to state 41
    ADDASSIGN       shift and go to state 42
    SUBASSIGN       shift and go to state 43
    MULASSIGN       shift and go to state 44
    DIVASSIGN       shift and go to state 45


state 18

    (1) expression -> expression instruction .

    LCURLY          reduce using rule 1 (expression -> expression instruction .)
    PRINT           reduce using rule 1 (expression -> expression instruction .)
    BREAK           reduce using rule 1 (expression -> expression instruction .)
    CONTINUE        reduce using rule 1 (expression -> expression instruction .)
    RETURN          reduce using rule 1 (expression -> expression instruction .)
    FOR             reduce using rule 1 (expression -> expression instruction .)
    IF              reduce using rule 1 (expression -> expression instruction .)
    WHILE           reduce using rule 1 (expression -> expression instruction .)
    ID              reduce using rule 1 (expression -> expression instruction .)
    $end            reduce using rule 1 (expression -> expression instruction .)
    RCURLY          reduce using rule 1 (expression -> expression instruction .)


state 19

    (3) instruction -> LCURLY expression . RCURLY
    (1) expression -> expression . instruction
    (3) instruction -> . LCURLY expression RCURLY
    (4) instruction -> . line SEMICOLON
    (5) instruction -> . for_state
    (6) instruction -> . ifelse_state
    (7) instruction -> . while_state
    (8) line -> . assign
    (9) line -> . PRINT print_state
    (10) line -> . BREAK
    (11) line -> . CONTINUE
    (12) line -> . RETURN print_state
    (13) line -> . RETURN
    (50) for_state -> . FOR ID ASSIGN operation COLON operation instruction
    (47) ifelse_state -> . IF LPAREN bool RPAREN instruction
    (48) ifelse_state -> . IF LPAREN bool RPAREN instruction ELSE instruction
    (49) while_state -> . WHILE LPAREN bool RPAREN instruction
    (16) assign -> . object ASSIGN operation
    (17) assign -> . object ADDASSIGN operation
    (18) assign -> . object SUBASSIGN operation
    (19) assign -> . object MULASSIGN operation
    (20) assign -> . object DIVASSIGN operation
    (45) object -> . ID vector
    (46) object -> . ID

    RCURLY          shift and go to state 46
    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    instruction                    shift and go to state 18
    line                           shift and go to state 4
    for_state                      shift and go to state 5
    ifelse_state                   shift and go to state 6
    while_state                    shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 20

    (4) instruction -> line SEMICOLON .

    LCURLY          reduce using rule 4 (instruction -> line SEMICOLON .)
    PRINT           reduce using rule 4 (instruction -> line SEMICOLON .)
    BREAK           reduce using rule 4 (instruction -> line SEMICOLON .)
    CONTINUE        reduce using rule 4 (instruction -> line SEMICOLON .)
    RETURN          reduce using rule 4 (instruction -> line SEMICOLON .)
    FOR             reduce using rule 4 (instruction -> line SEMICOLON .)
    IF              reduce using rule 4 (instruction -> line SEMICOLON .)
    WHILE           reduce using rule 4 (instruction -> line SEMICOLON .)
    ID              reduce using rule 4 (instruction -> line SEMICOLON .)
    $end            reduce using rule 4 (instruction -> line SEMICOLON .)
    RCURLY          reduce using rule 4 (instruction -> line SEMICOLON .)
    ELSE            reduce using rule 4 (instruction -> line SEMICOLON .)


state 21

    (9) line -> PRINT print_state .

    SEMICOLON       reduce using rule 9 (line -> PRINT print_state .)


state 22

    (14) print_state -> operation . COMMA print_state
    (15) print_state -> operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    COMMA           shift and go to state 47
    SEMICOLON       reduce using rule 15 (print_state -> operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 23

    (21) operation -> LPAREN . operation RPAREN
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 57
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 24

    (30) operation -> MINUS . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 58
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 25

    (32) operation -> EYE . LPAREN operation RPAREN

    LPAREN          shift and go to state 59


state 26

    (33) operation -> ZEROS . LPAREN operation RPAREN

    LPAREN          shift and go to state 60


state 27

    (34) operation -> ONES . LPAREN operation RPAREN

    LPAREN          shift and go to state 61


state 28

    (35) operation -> object .

    COMMA           reduce using rule 35 (operation -> object .)
    PLUS            reduce using rule 35 (operation -> object .)
    MINUS           reduce using rule 35 (operation -> object .)
    TIMES           reduce using rule 35 (operation -> object .)
    DIVIDE          reduce using rule 35 (operation -> object .)
    DOTADD          reduce using rule 35 (operation -> object .)
    DOTSUB          reduce using rule 35 (operation -> object .)
    DOTMUL          reduce using rule 35 (operation -> object .)
    DOTDIV          reduce using rule 35 (operation -> object .)
    TRANSPOSE       reduce using rule 35 (operation -> object .)
    SEMICOLON       reduce using rule 35 (operation -> object .)
    RPAREN          reduce using rule 35 (operation -> object .)
    MORE            reduce using rule 35 (operation -> object .)
    LESS            reduce using rule 35 (operation -> object .)
    MOREOREQ        reduce using rule 35 (operation -> object .)
    LESSOREQ        reduce using rule 35 (operation -> object .)
    EQUALS          reduce using rule 35 (operation -> object .)
    NOTEQUALS       reduce using rule 35 (operation -> object .)
    COLON           reduce using rule 35 (operation -> object .)
    LCURLY          reduce using rule 35 (operation -> object .)
    PRINT           reduce using rule 35 (operation -> object .)
    BREAK           reduce using rule 35 (operation -> object .)
    CONTINUE        reduce using rule 35 (operation -> object .)
    RETURN          reduce using rule 35 (operation -> object .)
    FOR             reduce using rule 35 (operation -> object .)
    IF              reduce using rule 35 (operation -> object .)
    WHILE           reduce using rule 35 (operation -> object .)
    ID              reduce using rule 35 (operation -> object .)


state 29

    (36) operation -> number .

    COMMA           reduce using rule 36 (operation -> number .)
    PLUS            reduce using rule 36 (operation -> number .)
    MINUS           reduce using rule 36 (operation -> number .)
    TIMES           reduce using rule 36 (operation -> number .)
    DIVIDE          reduce using rule 36 (operation -> number .)
    DOTADD          reduce using rule 36 (operation -> number .)
    DOTSUB          reduce using rule 36 (operation -> number .)
    DOTMUL          reduce using rule 36 (operation -> number .)
    DOTDIV          reduce using rule 36 (operation -> number .)
    TRANSPOSE       reduce using rule 36 (operation -> number .)
    SEMICOLON       reduce using rule 36 (operation -> number .)
    RPAREN          reduce using rule 36 (operation -> number .)
    MORE            reduce using rule 36 (operation -> number .)
    LESS            reduce using rule 36 (operation -> number .)
    MOREOREQ        reduce using rule 36 (operation -> number .)
    LESSOREQ        reduce using rule 36 (operation -> number .)
    EQUALS          reduce using rule 36 (operation -> number .)
    NOTEQUALS       reduce using rule 36 (operation -> number .)
    COLON           reduce using rule 36 (operation -> number .)
    LCURLY          reduce using rule 36 (operation -> number .)
    PRINT           reduce using rule 36 (operation -> number .)
    BREAK           reduce using rule 36 (operation -> number .)
    CONTINUE        reduce using rule 36 (operation -> number .)
    RETURN          reduce using rule 36 (operation -> number .)
    FOR             reduce using rule 36 (operation -> number .)
    IF              reduce using rule 36 (operation -> number .)
    WHILE           reduce using rule 36 (operation -> number .)
    ID              reduce using rule 36 (operation -> number .)


state 30

    (37) operation -> matrix .

    COMMA           reduce using rule 37 (operation -> matrix .)
    PLUS            reduce using rule 37 (operation -> matrix .)
    MINUS           reduce using rule 37 (operation -> matrix .)
    TIMES           reduce using rule 37 (operation -> matrix .)
    DIVIDE          reduce using rule 37 (operation -> matrix .)
    DOTADD          reduce using rule 37 (operation -> matrix .)
    DOTSUB          reduce using rule 37 (operation -> matrix .)
    DOTMUL          reduce using rule 37 (operation -> matrix .)
    DOTDIV          reduce using rule 37 (operation -> matrix .)
    TRANSPOSE       reduce using rule 37 (operation -> matrix .)
    SEMICOLON       reduce using rule 37 (operation -> matrix .)
    RPAREN          reduce using rule 37 (operation -> matrix .)
    MORE            reduce using rule 37 (operation -> matrix .)
    LESS            reduce using rule 37 (operation -> matrix .)
    MOREOREQ        reduce using rule 37 (operation -> matrix .)
    LESSOREQ        reduce using rule 37 (operation -> matrix .)
    EQUALS          reduce using rule 37 (operation -> matrix .)
    NOTEQUALS       reduce using rule 37 (operation -> matrix .)
    COLON           reduce using rule 37 (operation -> matrix .)
    LCURLY          reduce using rule 37 (operation -> matrix .)
    PRINT           reduce using rule 37 (operation -> matrix .)
    BREAK           reduce using rule 37 (operation -> matrix .)
    CONTINUE        reduce using rule 37 (operation -> matrix .)
    RETURN          reduce using rule 37 (operation -> matrix .)
    FOR             reduce using rule 37 (operation -> matrix .)
    IF              reduce using rule 37 (operation -> matrix .)
    WHILE           reduce using rule 37 (operation -> matrix .)
    ID              reduce using rule 37 (operation -> matrix .)


state 31

    (57) number -> INT .

    COMMA           reduce using rule 57 (number -> INT .)
    PLUS            reduce using rule 57 (number -> INT .)
    MINUS           reduce using rule 57 (number -> INT .)
    TIMES           reduce using rule 57 (number -> INT .)
    DIVIDE          reduce using rule 57 (number -> INT .)
    DOTADD          reduce using rule 57 (number -> INT .)
    DOTSUB          reduce using rule 57 (number -> INT .)
    DOTMUL          reduce using rule 57 (number -> INT .)
    DOTDIV          reduce using rule 57 (number -> INT .)
    TRANSPOSE       reduce using rule 57 (number -> INT .)
    SEMICOLON       reduce using rule 57 (number -> INT .)
    RPAREN          reduce using rule 57 (number -> INT .)
    MORE            reduce using rule 57 (number -> INT .)
    LESS            reduce using rule 57 (number -> INT .)
    MOREOREQ        reduce using rule 57 (number -> INT .)
    LESSOREQ        reduce using rule 57 (number -> INT .)
    EQUALS          reduce using rule 57 (number -> INT .)
    NOTEQUALS       reduce using rule 57 (number -> INT .)
    COLON           reduce using rule 57 (number -> INT .)
    LCURLY          reduce using rule 57 (number -> INT .)
    PRINT           reduce using rule 57 (number -> INT .)
    BREAK           reduce using rule 57 (number -> INT .)
    CONTINUE        reduce using rule 57 (number -> INT .)
    RETURN          reduce using rule 57 (number -> INT .)
    FOR             reduce using rule 57 (number -> INT .)
    IF              reduce using rule 57 (number -> INT .)
    WHILE           reduce using rule 57 (number -> INT .)
    ID              reduce using rule 57 (number -> INT .)
    RSQUAR          reduce using rule 57 (number -> INT .)


state 32

    (58) number -> FLOAT .

    COMMA           reduce using rule 58 (number -> FLOAT .)
    PLUS            reduce using rule 58 (number -> FLOAT .)
    MINUS           reduce using rule 58 (number -> FLOAT .)
    TIMES           reduce using rule 58 (number -> FLOAT .)
    DIVIDE          reduce using rule 58 (number -> FLOAT .)
    DOTADD          reduce using rule 58 (number -> FLOAT .)
    DOTSUB          reduce using rule 58 (number -> FLOAT .)
    DOTMUL          reduce using rule 58 (number -> FLOAT .)
    DOTDIV          reduce using rule 58 (number -> FLOAT .)
    TRANSPOSE       reduce using rule 58 (number -> FLOAT .)
    SEMICOLON       reduce using rule 58 (number -> FLOAT .)
    RPAREN          reduce using rule 58 (number -> FLOAT .)
    MORE            reduce using rule 58 (number -> FLOAT .)
    LESS            reduce using rule 58 (number -> FLOAT .)
    MOREOREQ        reduce using rule 58 (number -> FLOAT .)
    LESSOREQ        reduce using rule 58 (number -> FLOAT .)
    EQUALS          reduce using rule 58 (number -> FLOAT .)
    NOTEQUALS       reduce using rule 58 (number -> FLOAT .)
    COLON           reduce using rule 58 (number -> FLOAT .)
    LCURLY          reduce using rule 58 (number -> FLOAT .)
    PRINT           reduce using rule 58 (number -> FLOAT .)
    BREAK           reduce using rule 58 (number -> FLOAT .)
    CONTINUE        reduce using rule 58 (number -> FLOAT .)
    RETURN          reduce using rule 58 (number -> FLOAT .)
    FOR             reduce using rule 58 (number -> FLOAT .)
    IF              reduce using rule 58 (number -> FLOAT .)
    WHILE           reduce using rule 58 (number -> FLOAT .)
    ID              reduce using rule 58 (number -> FLOAT .)
    RSQUAR          reduce using rule 58 (number -> FLOAT .)


state 33

    (59) number -> STRING .

    COMMA           reduce using rule 59 (number -> STRING .)
    PLUS            reduce using rule 59 (number -> STRING .)
    MINUS           reduce using rule 59 (number -> STRING .)
    TIMES           reduce using rule 59 (number -> STRING .)
    DIVIDE          reduce using rule 59 (number -> STRING .)
    DOTADD          reduce using rule 59 (number -> STRING .)
    DOTSUB          reduce using rule 59 (number -> STRING .)
    DOTMUL          reduce using rule 59 (number -> STRING .)
    DOTDIV          reduce using rule 59 (number -> STRING .)
    TRANSPOSE       reduce using rule 59 (number -> STRING .)
    SEMICOLON       reduce using rule 59 (number -> STRING .)
    RPAREN          reduce using rule 59 (number -> STRING .)
    MORE            reduce using rule 59 (number -> STRING .)
    LESS            reduce using rule 59 (number -> STRING .)
    MOREOREQ        reduce using rule 59 (number -> STRING .)
    LESSOREQ        reduce using rule 59 (number -> STRING .)
    EQUALS          reduce using rule 59 (number -> STRING .)
    NOTEQUALS       reduce using rule 59 (number -> STRING .)
    COLON           reduce using rule 59 (number -> STRING .)
    LCURLY          reduce using rule 59 (number -> STRING .)
    PRINT           reduce using rule 59 (number -> STRING .)
    BREAK           reduce using rule 59 (number -> STRING .)
    CONTINUE        reduce using rule 59 (number -> STRING .)
    RETURN          reduce using rule 59 (number -> STRING .)
    FOR             reduce using rule 59 (number -> STRING .)
    IF              reduce using rule 59 (number -> STRING .)
    WHILE           reduce using rule 59 (number -> STRING .)
    ID              reduce using rule 59 (number -> STRING .)
    RSQUAR          reduce using rule 59 (number -> STRING .)


state 34

    (51) matrix -> LSQUAR . row RSQUAR
    (52) row -> . row COMMA vector
    (53) row -> . vector
    (54) vector -> . LSQUAR elem RSQUAR

    LSQUAR          shift and go to state 38

    row                            shift and go to state 62
    vector                         shift and go to state 63

state 35

    (12) line -> RETURN print_state .

    SEMICOLON       reduce using rule 12 (line -> RETURN print_state .)


state 36

    (50) for_state -> FOR ID . ASSIGN operation COLON operation instruction

    ASSIGN          shift and go to state 64


state 37

    (45) object -> ID vector .

    ASSIGN          reduce using rule 45 (object -> ID vector .)
    ADDASSIGN       reduce using rule 45 (object -> ID vector .)
    SUBASSIGN       reduce using rule 45 (object -> ID vector .)
    MULASSIGN       reduce using rule 45 (object -> ID vector .)
    DIVASSIGN       reduce using rule 45 (object -> ID vector .)
    COMMA           reduce using rule 45 (object -> ID vector .)
    PLUS            reduce using rule 45 (object -> ID vector .)
    MINUS           reduce using rule 45 (object -> ID vector .)
    TIMES           reduce using rule 45 (object -> ID vector .)
    DIVIDE          reduce using rule 45 (object -> ID vector .)
    DOTADD          reduce using rule 45 (object -> ID vector .)
    DOTSUB          reduce using rule 45 (object -> ID vector .)
    DOTMUL          reduce using rule 45 (object -> ID vector .)
    DOTDIV          reduce using rule 45 (object -> ID vector .)
    TRANSPOSE       reduce using rule 45 (object -> ID vector .)
    SEMICOLON       reduce using rule 45 (object -> ID vector .)
    RPAREN          reduce using rule 45 (object -> ID vector .)
    MORE            reduce using rule 45 (object -> ID vector .)
    LESS            reduce using rule 45 (object -> ID vector .)
    MOREOREQ        reduce using rule 45 (object -> ID vector .)
    LESSOREQ        reduce using rule 45 (object -> ID vector .)
    EQUALS          reduce using rule 45 (object -> ID vector .)
    NOTEQUALS       reduce using rule 45 (object -> ID vector .)
    COLON           reduce using rule 45 (object -> ID vector .)
    LCURLY          reduce using rule 45 (object -> ID vector .)
    PRINT           reduce using rule 45 (object -> ID vector .)
    BREAK           reduce using rule 45 (object -> ID vector .)
    CONTINUE        reduce using rule 45 (object -> ID vector .)
    RETURN          reduce using rule 45 (object -> ID vector .)
    FOR             reduce using rule 45 (object -> ID vector .)
    IF              reduce using rule 45 (object -> ID vector .)
    WHILE           reduce using rule 45 (object -> ID vector .)
    ID              reduce using rule 45 (object -> ID vector .)


state 38

    (54) vector -> LSQUAR . elem RSQUAR
    (55) elem -> . elem COMMA number
    (56) elem -> . number
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING

    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    elem                           shift and go to state 65
    number                         shift and go to state 66

state 39

    (47) ifelse_state -> IF LPAREN . bool RPAREN instruction
    (48) ifelse_state -> IF LPAREN . bool RPAREN instruction ELSE instruction
    (38) bool -> . LPAREN bool RPAREN
    (39) bool -> . operation MORE operation
    (40) bool -> . operation LESS operation
    (41) bool -> . operation MOREOREQ operation
    (42) bool -> . operation LESSOREQ operation
    (43) bool -> . operation EQUALS operation
    (44) bool -> . operation NOTEQUALS operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 67
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    bool                           shift and go to state 68
    operation                      shift and go to state 69
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 40

    (49) while_state -> WHILE LPAREN . bool RPAREN instruction
    (38) bool -> . LPAREN bool RPAREN
    (39) bool -> . operation MORE operation
    (40) bool -> . operation LESS operation
    (41) bool -> . operation MOREOREQ operation
    (42) bool -> . operation LESSOREQ operation
    (43) bool -> . operation EQUALS operation
    (44) bool -> . operation NOTEQUALS operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 67
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    bool                           shift and go to state 70
    operation                      shift and go to state 69
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 41

    (16) assign -> object ASSIGN . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    object                         shift and go to state 28
    operation                      shift and go to state 71
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 42

    (17) assign -> object ADDASSIGN . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    object                         shift and go to state 28
    operation                      shift and go to state 72
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 43

    (18) assign -> object SUBASSIGN . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    object                         shift and go to state 28
    operation                      shift and go to state 73
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 44

    (19) assign -> object MULASSIGN . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    object                         shift and go to state 28
    operation                      shift and go to state 74
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 45

    (20) assign -> object DIVASSIGN . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    object                         shift and go to state 28
    operation                      shift and go to state 75
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 46

    (3) instruction -> LCURLY expression RCURLY .

    LCURLY          reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    PRINT           reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    BREAK           reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    CONTINUE        reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    RETURN          reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    FOR             reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    IF              reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    WHILE           reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    ID              reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    $end            reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    RCURLY          reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    ELSE            reduce using rule 3 (instruction -> LCURLY expression RCURLY .)


state 47

    (14) print_state -> operation COMMA . print_state
    (14) print_state -> . operation COMMA print_state
    (15) print_state -> . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 22
    print_state                    shift and go to state 76
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 48

    (22) operation -> operation PLUS . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 77
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 49

    (23) operation -> operation MINUS . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 78
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 50

    (24) operation -> operation TIMES . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 79
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 51

    (25) operation -> operation DIVIDE . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 80
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 52

    (26) operation -> operation DOTADD . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 81
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 53

    (27) operation -> operation DOTSUB . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 82
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 54

    (28) operation -> operation DOTMUL . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 83
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 55

    (29) operation -> operation DOTDIV . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 84
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 56

    (31) operation -> operation TRANSPOSE .

    COMMA           reduce using rule 31 (operation -> operation TRANSPOSE .)
    PLUS            reduce using rule 31 (operation -> operation TRANSPOSE .)
    MINUS           reduce using rule 31 (operation -> operation TRANSPOSE .)
    TIMES           reduce using rule 31 (operation -> operation TRANSPOSE .)
    DIVIDE          reduce using rule 31 (operation -> operation TRANSPOSE .)
    DOTADD          reduce using rule 31 (operation -> operation TRANSPOSE .)
    DOTSUB          reduce using rule 31 (operation -> operation TRANSPOSE .)
    DOTMUL          reduce using rule 31 (operation -> operation TRANSPOSE .)
    DOTDIV          reduce using rule 31 (operation -> operation TRANSPOSE .)
    TRANSPOSE       reduce using rule 31 (operation -> operation TRANSPOSE .)
    SEMICOLON       reduce using rule 31 (operation -> operation TRANSPOSE .)
    RPAREN          reduce using rule 31 (operation -> operation TRANSPOSE .)
    MORE            reduce using rule 31 (operation -> operation TRANSPOSE .)
    LESS            reduce using rule 31 (operation -> operation TRANSPOSE .)
    MOREOREQ        reduce using rule 31 (operation -> operation TRANSPOSE .)
    LESSOREQ        reduce using rule 31 (operation -> operation TRANSPOSE .)
    EQUALS          reduce using rule 31 (operation -> operation TRANSPOSE .)
    NOTEQUALS       reduce using rule 31 (operation -> operation TRANSPOSE .)
    COLON           reduce using rule 31 (operation -> operation TRANSPOSE .)
    LCURLY          reduce using rule 31 (operation -> operation TRANSPOSE .)
    PRINT           reduce using rule 31 (operation -> operation TRANSPOSE .)
    BREAK           reduce using rule 31 (operation -> operation TRANSPOSE .)
    CONTINUE        reduce using rule 31 (operation -> operation TRANSPOSE .)
    RETURN          reduce using rule 31 (operation -> operation TRANSPOSE .)
    FOR             reduce using rule 31 (operation -> operation TRANSPOSE .)
    IF              reduce using rule 31 (operation -> operation TRANSPOSE .)
    WHILE           reduce using rule 31 (operation -> operation TRANSPOSE .)
    ID              reduce using rule 31 (operation -> operation TRANSPOSE .)


state 57

    (21) operation -> LPAREN operation . RPAREN
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    RPAREN          shift and go to state 85
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 58

    (30) operation -> MINUS operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    COMMA           reduce using rule 30 (operation -> MINUS operation .)
    PLUS            reduce using rule 30 (operation -> MINUS operation .)
    MINUS           reduce using rule 30 (operation -> MINUS operation .)
    DOTADD          reduce using rule 30 (operation -> MINUS operation .)
    DOTSUB          reduce using rule 30 (operation -> MINUS operation .)
    SEMICOLON       reduce using rule 30 (operation -> MINUS operation .)
    RPAREN          reduce using rule 30 (operation -> MINUS operation .)
    MORE            reduce using rule 30 (operation -> MINUS operation .)
    LESS            reduce using rule 30 (operation -> MINUS operation .)
    MOREOREQ        reduce using rule 30 (operation -> MINUS operation .)
    LESSOREQ        reduce using rule 30 (operation -> MINUS operation .)
    EQUALS          reduce using rule 30 (operation -> MINUS operation .)
    NOTEQUALS       reduce using rule 30 (operation -> MINUS operation .)
    COLON           reduce using rule 30 (operation -> MINUS operation .)
    LCURLY          reduce using rule 30 (operation -> MINUS operation .)
    PRINT           reduce using rule 30 (operation -> MINUS operation .)
    BREAK           reduce using rule 30 (operation -> MINUS operation .)
    CONTINUE        reduce using rule 30 (operation -> MINUS operation .)
    RETURN          reduce using rule 30 (operation -> MINUS operation .)
    FOR             reduce using rule 30 (operation -> MINUS operation .)
    IF              reduce using rule 30 (operation -> MINUS operation .)
    WHILE           reduce using rule 30 (operation -> MINUS operation .)
    ID              reduce using rule 30 (operation -> MINUS operation .)
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56

  ! TIMES           [ reduce using rule 30 (operation -> MINUS operation .) ]
  ! DIVIDE          [ reduce using rule 30 (operation -> MINUS operation .) ]
  ! DOTMUL          [ reduce using rule 30 (operation -> MINUS operation .) ]
  ! DOTDIV          [ reduce using rule 30 (operation -> MINUS operation .) ]
  ! TRANSPOSE       [ reduce using rule 30 (operation -> MINUS operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]


state 59

    (32) operation -> EYE LPAREN . operation RPAREN
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 86
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 60

    (33) operation -> ZEROS LPAREN . operation RPAREN
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 87
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 61

    (34) operation -> ONES LPAREN . operation RPAREN
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 88
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 62

    (51) matrix -> LSQUAR row . RSQUAR
    (52) row -> row . COMMA vector

    RSQUAR          shift and go to state 89
    COMMA           shift and go to state 90


state 63

    (53) row -> vector .

    RSQUAR          reduce using rule 53 (row -> vector .)
    COMMA           reduce using rule 53 (row -> vector .)


state 64

    (50) for_state -> FOR ID ASSIGN . operation COLON operation instruction
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 91
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 65

    (54) vector -> LSQUAR elem . RSQUAR
    (55) elem -> elem . COMMA number

    RSQUAR          shift and go to state 92
    COMMA           shift and go to state 93


state 66

    (56) elem -> number .

    RSQUAR          reduce using rule 56 (elem -> number .)
    COMMA           reduce using rule 56 (elem -> number .)


state 67

    (38) bool -> LPAREN . bool RPAREN
    (21) operation -> LPAREN . operation RPAREN
    (38) bool -> . LPAREN bool RPAREN
    (39) bool -> . operation MORE operation
    (40) bool -> . operation LESS operation
    (41) bool -> . operation MOREOREQ operation
    (42) bool -> . operation LESSOREQ operation
    (43) bool -> . operation EQUALS operation
    (44) bool -> . operation NOTEQUALS operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 67
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    bool                           shift and go to state 94
    operation                      shift and go to state 95
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 68

    (47) ifelse_state -> IF LPAREN bool . RPAREN instruction
    (48) ifelse_state -> IF LPAREN bool . RPAREN instruction ELSE instruction

    RPAREN          shift and go to state 96


state 69

    (39) bool -> operation . MORE operation
    (40) bool -> operation . LESS operation
    (41) bool -> operation . MOREOREQ operation
    (42) bool -> operation . LESSOREQ operation
    (43) bool -> operation . EQUALS operation
    (44) bool -> operation . NOTEQUALS operation
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    MORE            shift and go to state 97
    LESS            shift and go to state 98
    MOREOREQ        shift and go to state 99
    LESSOREQ        shift and go to state 100
    EQUALS          shift and go to state 101
    NOTEQUALS       shift and go to state 102
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 70

    (49) while_state -> WHILE LPAREN bool . RPAREN instruction

    RPAREN          shift and go to state 103


state 71

    (16) assign -> object ASSIGN operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 16 (assign -> object ASSIGN operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 72

    (17) assign -> object ADDASSIGN operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 17 (assign -> object ADDASSIGN operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 73

    (18) assign -> object SUBASSIGN operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 18 (assign -> object SUBASSIGN operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 74

    (19) assign -> object MULASSIGN operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 19 (assign -> object MULASSIGN operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 75

    (20) assign -> object DIVASSIGN operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 20 (assign -> object DIVASSIGN operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 76

    (14) print_state -> operation COMMA print_state .

    SEMICOLON       reduce using rule 14 (print_state -> operation COMMA print_state .)


state 77

    (22) operation -> operation PLUS operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    COMMA           reduce using rule 22 (operation -> operation PLUS operation .)
    PLUS            reduce using rule 22 (operation -> operation PLUS operation .)
    MINUS           reduce using rule 22 (operation -> operation PLUS operation .)
    DOTADD          reduce using rule 22 (operation -> operation PLUS operation .)
    DOTSUB          reduce using rule 22 (operation -> operation PLUS operation .)
    SEMICOLON       reduce using rule 22 (operation -> operation PLUS operation .)
    RPAREN          reduce using rule 22 (operation -> operation PLUS operation .)
    MORE            reduce using rule 22 (operation -> operation PLUS operation .)
    LESS            reduce using rule 22 (operation -> operation PLUS operation .)
    MOREOREQ        reduce using rule 22 (operation -> operation PLUS operation .)
    LESSOREQ        reduce using rule 22 (operation -> operation PLUS operation .)
    EQUALS          reduce using rule 22 (operation -> operation PLUS operation .)
    NOTEQUALS       reduce using rule 22 (operation -> operation PLUS operation .)
    COLON           reduce using rule 22 (operation -> operation PLUS operation .)
    LCURLY          reduce using rule 22 (operation -> operation PLUS operation .)
    PRINT           reduce using rule 22 (operation -> operation PLUS operation .)
    BREAK           reduce using rule 22 (operation -> operation PLUS operation .)
    CONTINUE        reduce using rule 22 (operation -> operation PLUS operation .)
    RETURN          reduce using rule 22 (operation -> operation PLUS operation .)
    FOR             reduce using rule 22 (operation -> operation PLUS operation .)
    IF              reduce using rule 22 (operation -> operation PLUS operation .)
    WHILE           reduce using rule 22 (operation -> operation PLUS operation .)
    ID              reduce using rule 22 (operation -> operation PLUS operation .)
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56

  ! TIMES           [ reduce using rule 22 (operation -> operation PLUS operation .) ]
  ! DIVIDE          [ reduce using rule 22 (operation -> operation PLUS operation .) ]
  ! DOTMUL          [ reduce using rule 22 (operation -> operation PLUS operation .) ]
  ! DOTDIV          [ reduce using rule 22 (operation -> operation PLUS operation .) ]
  ! TRANSPOSE       [ reduce using rule 22 (operation -> operation PLUS operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]


state 78

    (23) operation -> operation MINUS operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    COMMA           reduce using rule 23 (operation -> operation MINUS operation .)
    PLUS            reduce using rule 23 (operation -> operation MINUS operation .)
    MINUS           reduce using rule 23 (operation -> operation MINUS operation .)
    DOTADD          reduce using rule 23 (operation -> operation MINUS operation .)
    DOTSUB          reduce using rule 23 (operation -> operation MINUS operation .)
    SEMICOLON       reduce using rule 23 (operation -> operation MINUS operation .)
    RPAREN          reduce using rule 23 (operation -> operation MINUS operation .)
    MORE            reduce using rule 23 (operation -> operation MINUS operation .)
    LESS            reduce using rule 23 (operation -> operation MINUS operation .)
    MOREOREQ        reduce using rule 23 (operation -> operation MINUS operation .)
    LESSOREQ        reduce using rule 23 (operation -> operation MINUS operation .)
    EQUALS          reduce using rule 23 (operation -> operation MINUS operation .)
    NOTEQUALS       reduce using rule 23 (operation -> operation MINUS operation .)
    COLON           reduce using rule 23 (operation -> operation MINUS operation .)
    LCURLY          reduce using rule 23 (operation -> operation MINUS operation .)
    PRINT           reduce using rule 23 (operation -> operation MINUS operation .)
    BREAK           reduce using rule 23 (operation -> operation MINUS operation .)
    CONTINUE        reduce using rule 23 (operation -> operation MINUS operation .)
    RETURN          reduce using rule 23 (operation -> operation MINUS operation .)
    FOR             reduce using rule 23 (operation -> operation MINUS operation .)
    IF              reduce using rule 23 (operation -> operation MINUS operation .)
    WHILE           reduce using rule 23 (operation -> operation MINUS operation .)
    ID              reduce using rule 23 (operation -> operation MINUS operation .)
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56

  ! TIMES           [ reduce using rule 23 (operation -> operation MINUS operation .) ]
  ! DIVIDE          [ reduce using rule 23 (operation -> operation MINUS operation .) ]
  ! DOTMUL          [ reduce using rule 23 (operation -> operation MINUS operation .) ]
  ! DOTDIV          [ reduce using rule 23 (operation -> operation MINUS operation .) ]
  ! TRANSPOSE       [ reduce using rule 23 (operation -> operation MINUS operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]


state 79

    (24) operation -> operation TIMES operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    COMMA           reduce using rule 24 (operation -> operation TIMES operation .)
    PLUS            reduce using rule 24 (operation -> operation TIMES operation .)
    MINUS           reduce using rule 24 (operation -> operation TIMES operation .)
    TIMES           reduce using rule 24 (operation -> operation TIMES operation .)
    DIVIDE          reduce using rule 24 (operation -> operation TIMES operation .)
    DOTADD          reduce using rule 24 (operation -> operation TIMES operation .)
    DOTSUB          reduce using rule 24 (operation -> operation TIMES operation .)
    DOTMUL          reduce using rule 24 (operation -> operation TIMES operation .)
    DOTDIV          reduce using rule 24 (operation -> operation TIMES operation .)
    SEMICOLON       reduce using rule 24 (operation -> operation TIMES operation .)
    RPAREN          reduce using rule 24 (operation -> operation TIMES operation .)
    MORE            reduce using rule 24 (operation -> operation TIMES operation .)
    LESS            reduce using rule 24 (operation -> operation TIMES operation .)
    MOREOREQ        reduce using rule 24 (operation -> operation TIMES operation .)
    LESSOREQ        reduce using rule 24 (operation -> operation TIMES operation .)
    EQUALS          reduce using rule 24 (operation -> operation TIMES operation .)
    NOTEQUALS       reduce using rule 24 (operation -> operation TIMES operation .)
    COLON           reduce using rule 24 (operation -> operation TIMES operation .)
    LCURLY          reduce using rule 24 (operation -> operation TIMES operation .)
    PRINT           reduce using rule 24 (operation -> operation TIMES operation .)
    BREAK           reduce using rule 24 (operation -> operation TIMES operation .)
    CONTINUE        reduce using rule 24 (operation -> operation TIMES operation .)
    RETURN          reduce using rule 24 (operation -> operation TIMES operation .)
    FOR             reduce using rule 24 (operation -> operation TIMES operation .)
    IF              reduce using rule 24 (operation -> operation TIMES operation .)
    WHILE           reduce using rule 24 (operation -> operation TIMES operation .)
    ID              reduce using rule 24 (operation -> operation TIMES operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 24 (operation -> operation TIMES operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 80

    (25) operation -> operation DIVIDE operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    COMMA           reduce using rule 25 (operation -> operation DIVIDE operation .)
    PLUS            reduce using rule 25 (operation -> operation DIVIDE operation .)
    MINUS           reduce using rule 25 (operation -> operation DIVIDE operation .)
    TIMES           reduce using rule 25 (operation -> operation DIVIDE operation .)
    DIVIDE          reduce using rule 25 (operation -> operation DIVIDE operation .)
    DOTADD          reduce using rule 25 (operation -> operation DIVIDE operation .)
    DOTSUB          reduce using rule 25 (operation -> operation DIVIDE operation .)
    DOTMUL          reduce using rule 25 (operation -> operation DIVIDE operation .)
    DOTDIV          reduce using rule 25 (operation -> operation DIVIDE operation .)
    SEMICOLON       reduce using rule 25 (operation -> operation DIVIDE operation .)
    RPAREN          reduce using rule 25 (operation -> operation DIVIDE operation .)
    MORE            reduce using rule 25 (operation -> operation DIVIDE operation .)
    LESS            reduce using rule 25 (operation -> operation DIVIDE operation .)
    MOREOREQ        reduce using rule 25 (operation -> operation DIVIDE operation .)
    LESSOREQ        reduce using rule 25 (operation -> operation DIVIDE operation .)
    EQUALS          reduce using rule 25 (operation -> operation DIVIDE operation .)
    NOTEQUALS       reduce using rule 25 (operation -> operation DIVIDE operation .)
    COLON           reduce using rule 25 (operation -> operation DIVIDE operation .)
    LCURLY          reduce using rule 25 (operation -> operation DIVIDE operation .)
    PRINT           reduce using rule 25 (operation -> operation DIVIDE operation .)
    BREAK           reduce using rule 25 (operation -> operation DIVIDE operation .)
    CONTINUE        reduce using rule 25 (operation -> operation DIVIDE operation .)
    RETURN          reduce using rule 25 (operation -> operation DIVIDE operation .)
    FOR             reduce using rule 25 (operation -> operation DIVIDE operation .)
    IF              reduce using rule 25 (operation -> operation DIVIDE operation .)
    WHILE           reduce using rule 25 (operation -> operation DIVIDE operation .)
    ID              reduce using rule 25 (operation -> operation DIVIDE operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 25 (operation -> operation DIVIDE operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 81

    (26) operation -> operation DOTADD operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    COMMA           reduce using rule 26 (operation -> operation DOTADD operation .)
    PLUS            reduce using rule 26 (operation -> operation DOTADD operation .)
    MINUS           reduce using rule 26 (operation -> operation DOTADD operation .)
    DOTADD          reduce using rule 26 (operation -> operation DOTADD operation .)
    DOTSUB          reduce using rule 26 (operation -> operation DOTADD operation .)
    SEMICOLON       reduce using rule 26 (operation -> operation DOTADD operation .)
    RPAREN          reduce using rule 26 (operation -> operation DOTADD operation .)
    MORE            reduce using rule 26 (operation -> operation DOTADD operation .)
    LESS            reduce using rule 26 (operation -> operation DOTADD operation .)
    MOREOREQ        reduce using rule 26 (operation -> operation DOTADD operation .)
    LESSOREQ        reduce using rule 26 (operation -> operation DOTADD operation .)
    EQUALS          reduce using rule 26 (operation -> operation DOTADD operation .)
    NOTEQUALS       reduce using rule 26 (operation -> operation DOTADD operation .)
    COLON           reduce using rule 26 (operation -> operation DOTADD operation .)
    LCURLY          reduce using rule 26 (operation -> operation DOTADD operation .)
    PRINT           reduce using rule 26 (operation -> operation DOTADD operation .)
    BREAK           reduce using rule 26 (operation -> operation DOTADD operation .)
    CONTINUE        reduce using rule 26 (operation -> operation DOTADD operation .)
    RETURN          reduce using rule 26 (operation -> operation DOTADD operation .)
    FOR             reduce using rule 26 (operation -> operation DOTADD operation .)
    IF              reduce using rule 26 (operation -> operation DOTADD operation .)
    WHILE           reduce using rule 26 (operation -> operation DOTADD operation .)
    ID              reduce using rule 26 (operation -> operation DOTADD operation .)
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56

  ! TIMES           [ reduce using rule 26 (operation -> operation DOTADD operation .) ]
  ! DIVIDE          [ reduce using rule 26 (operation -> operation DOTADD operation .) ]
  ! DOTMUL          [ reduce using rule 26 (operation -> operation DOTADD operation .) ]
  ! DOTDIV          [ reduce using rule 26 (operation -> operation DOTADD operation .) ]
  ! TRANSPOSE       [ reduce using rule 26 (operation -> operation DOTADD operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]


state 82

    (27) operation -> operation DOTSUB operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    COMMA           reduce using rule 27 (operation -> operation DOTSUB operation .)
    PLUS            reduce using rule 27 (operation -> operation DOTSUB operation .)
    MINUS           reduce using rule 27 (operation -> operation DOTSUB operation .)
    DOTADD          reduce using rule 27 (operation -> operation DOTSUB operation .)
    DOTSUB          reduce using rule 27 (operation -> operation DOTSUB operation .)
    SEMICOLON       reduce using rule 27 (operation -> operation DOTSUB operation .)
    RPAREN          reduce using rule 27 (operation -> operation DOTSUB operation .)
    MORE            reduce using rule 27 (operation -> operation DOTSUB operation .)
    LESS            reduce using rule 27 (operation -> operation DOTSUB operation .)
    MOREOREQ        reduce using rule 27 (operation -> operation DOTSUB operation .)
    LESSOREQ        reduce using rule 27 (operation -> operation DOTSUB operation .)
    EQUALS          reduce using rule 27 (operation -> operation DOTSUB operation .)
    NOTEQUALS       reduce using rule 27 (operation -> operation DOTSUB operation .)
    COLON           reduce using rule 27 (operation -> operation DOTSUB operation .)
    LCURLY          reduce using rule 27 (operation -> operation DOTSUB operation .)
    PRINT           reduce using rule 27 (operation -> operation DOTSUB operation .)
    BREAK           reduce using rule 27 (operation -> operation DOTSUB operation .)
    CONTINUE        reduce using rule 27 (operation -> operation DOTSUB operation .)
    RETURN          reduce using rule 27 (operation -> operation DOTSUB operation .)
    FOR             reduce using rule 27 (operation -> operation DOTSUB operation .)
    IF              reduce using rule 27 (operation -> operation DOTSUB operation .)
    WHILE           reduce using rule 27 (operation -> operation DOTSUB operation .)
    ID              reduce using rule 27 (operation -> operation DOTSUB operation .)
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56

  ! TIMES           [ reduce using rule 27 (operation -> operation DOTSUB operation .) ]
  ! DIVIDE          [ reduce using rule 27 (operation -> operation DOTSUB operation .) ]
  ! DOTMUL          [ reduce using rule 27 (operation -> operation DOTSUB operation .) ]
  ! DOTDIV          [ reduce using rule 27 (operation -> operation DOTSUB operation .) ]
  ! TRANSPOSE       [ reduce using rule 27 (operation -> operation DOTSUB operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]


state 83

    (28) operation -> operation DOTMUL operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    COMMA           reduce using rule 28 (operation -> operation DOTMUL operation .)
    PLUS            reduce using rule 28 (operation -> operation DOTMUL operation .)
    MINUS           reduce using rule 28 (operation -> operation DOTMUL operation .)
    TIMES           reduce using rule 28 (operation -> operation DOTMUL operation .)
    DIVIDE          reduce using rule 28 (operation -> operation DOTMUL operation .)
    DOTADD          reduce using rule 28 (operation -> operation DOTMUL operation .)
    DOTSUB          reduce using rule 28 (operation -> operation DOTMUL operation .)
    DOTMUL          reduce using rule 28 (operation -> operation DOTMUL operation .)
    DOTDIV          reduce using rule 28 (operation -> operation DOTMUL operation .)
    SEMICOLON       reduce using rule 28 (operation -> operation DOTMUL operation .)
    RPAREN          reduce using rule 28 (operation -> operation DOTMUL operation .)
    MORE            reduce using rule 28 (operation -> operation DOTMUL operation .)
    LESS            reduce using rule 28 (operation -> operation DOTMUL operation .)
    MOREOREQ        reduce using rule 28 (operation -> operation DOTMUL operation .)
    LESSOREQ        reduce using rule 28 (operation -> operation DOTMUL operation .)
    EQUALS          reduce using rule 28 (operation -> operation DOTMUL operation .)
    NOTEQUALS       reduce using rule 28 (operation -> operation DOTMUL operation .)
    COLON           reduce using rule 28 (operation -> operation DOTMUL operation .)
    LCURLY          reduce using rule 28 (operation -> operation DOTMUL operation .)
    PRINT           reduce using rule 28 (operation -> operation DOTMUL operation .)
    BREAK           reduce using rule 28 (operation -> operation DOTMUL operation .)
    CONTINUE        reduce using rule 28 (operation -> operation DOTMUL operation .)
    RETURN          reduce using rule 28 (operation -> operation DOTMUL operation .)
    FOR             reduce using rule 28 (operation -> operation DOTMUL operation .)
    IF              reduce using rule 28 (operation -> operation DOTMUL operation .)
    WHILE           reduce using rule 28 (operation -> operation DOTMUL operation .)
    ID              reduce using rule 28 (operation -> operation DOTMUL operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 28 (operation -> operation DOTMUL operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 84

    (29) operation -> operation DOTDIV operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    COMMA           reduce using rule 29 (operation -> operation DOTDIV operation .)
    PLUS            reduce using rule 29 (operation -> operation DOTDIV operation .)
    MINUS           reduce using rule 29 (operation -> operation DOTDIV operation .)
    TIMES           reduce using rule 29 (operation -> operation DOTDIV operation .)
    DIVIDE          reduce using rule 29 (operation -> operation DOTDIV operation .)
    DOTADD          reduce using rule 29 (operation -> operation DOTDIV operation .)
    DOTSUB          reduce using rule 29 (operation -> operation DOTDIV operation .)
    DOTMUL          reduce using rule 29 (operation -> operation DOTDIV operation .)
    DOTDIV          reduce using rule 29 (operation -> operation DOTDIV operation .)
    SEMICOLON       reduce using rule 29 (operation -> operation DOTDIV operation .)
    RPAREN          reduce using rule 29 (operation -> operation DOTDIV operation .)
    MORE            reduce using rule 29 (operation -> operation DOTDIV operation .)
    LESS            reduce using rule 29 (operation -> operation DOTDIV operation .)
    MOREOREQ        reduce using rule 29 (operation -> operation DOTDIV operation .)
    LESSOREQ        reduce using rule 29 (operation -> operation DOTDIV operation .)
    EQUALS          reduce using rule 29 (operation -> operation DOTDIV operation .)
    NOTEQUALS       reduce using rule 29 (operation -> operation DOTDIV operation .)
    COLON           reduce using rule 29 (operation -> operation DOTDIV operation .)
    LCURLY          reduce using rule 29 (operation -> operation DOTDIV operation .)
    PRINT           reduce using rule 29 (operation -> operation DOTDIV operation .)
    BREAK           reduce using rule 29 (operation -> operation DOTDIV operation .)
    CONTINUE        reduce using rule 29 (operation -> operation DOTDIV operation .)
    RETURN          reduce using rule 29 (operation -> operation DOTDIV operation .)
    FOR             reduce using rule 29 (operation -> operation DOTDIV operation .)
    IF              reduce using rule 29 (operation -> operation DOTDIV operation .)
    WHILE           reduce using rule 29 (operation -> operation DOTDIV operation .)
    ID              reduce using rule 29 (operation -> operation DOTDIV operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 29 (operation -> operation DOTDIV operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 85

    (21) operation -> LPAREN operation RPAREN .

    COMMA           reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    PLUS            reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    MINUS           reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    TIMES           reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    DIVIDE          reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    DOTADD          reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    DOTSUB          reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    DOTMUL          reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    DOTDIV          reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    TRANSPOSE       reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    SEMICOLON       reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    RPAREN          reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    MORE            reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    LESS            reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    MOREOREQ        reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    LESSOREQ        reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    EQUALS          reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    NOTEQUALS       reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    COLON           reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    LCURLY          reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    PRINT           reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    BREAK           reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    CONTINUE        reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    RETURN          reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    FOR             reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    IF              reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    WHILE           reduce using rule 21 (operation -> LPAREN operation RPAREN .)
    ID              reduce using rule 21 (operation -> LPAREN operation RPAREN .)


state 86

    (32) operation -> EYE LPAREN operation . RPAREN
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    RPAREN          shift and go to state 104
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 87

    (33) operation -> ZEROS LPAREN operation . RPAREN
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    RPAREN          shift and go to state 105
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 88

    (34) operation -> ONES LPAREN operation . RPAREN
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    RPAREN          shift and go to state 106
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 89

    (51) matrix -> LSQUAR row RSQUAR .

    COMMA           reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    PLUS            reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    MINUS           reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    TIMES           reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    DIVIDE          reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    DOTADD          reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    DOTSUB          reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    DOTMUL          reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    DOTDIV          reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    TRANSPOSE       reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    SEMICOLON       reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    RPAREN          reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    MORE            reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    LESS            reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    MOREOREQ        reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    LESSOREQ        reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    EQUALS          reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    NOTEQUALS       reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    COLON           reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    LCURLY          reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    PRINT           reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    BREAK           reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    CONTINUE        reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    RETURN          reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    FOR             reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    IF              reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    WHILE           reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)
    ID              reduce using rule 51 (matrix -> LSQUAR row RSQUAR .)


state 90

    (52) row -> row COMMA . vector
    (54) vector -> . LSQUAR elem RSQUAR

    LSQUAR          shift and go to state 38

    vector                         shift and go to state 107

state 91

    (50) for_state -> FOR ID ASSIGN operation . COLON operation instruction
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    COLON           shift and go to state 108
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 92

    (54) vector -> LSQUAR elem RSQUAR .

    ASSIGN          reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    ADDASSIGN       reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    SUBASSIGN       reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    MULASSIGN       reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    DIVASSIGN       reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    COMMA           reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    PLUS            reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    MINUS           reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    TIMES           reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    DIVIDE          reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    DOTADD          reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    DOTSUB          reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    DOTMUL          reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    DOTDIV          reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    TRANSPOSE       reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    SEMICOLON       reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    RPAREN          reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    MORE            reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    LESS            reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    MOREOREQ        reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    LESSOREQ        reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    EQUALS          reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    NOTEQUALS       reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    COLON           reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    LCURLY          reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    PRINT           reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    BREAK           reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    CONTINUE        reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    RETURN          reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    FOR             reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    IF              reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    WHILE           reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    ID              reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)
    RSQUAR          reduce using rule 54 (vector -> LSQUAR elem RSQUAR .)


state 93

    (55) elem -> elem COMMA . number
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING

    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    number                         shift and go to state 109

state 94

    (38) bool -> LPAREN bool . RPAREN

    RPAREN          shift and go to state 110


state 95

    (21) operation -> LPAREN operation . RPAREN
    (39) bool -> operation . MORE operation
    (40) bool -> operation . LESS operation
    (41) bool -> operation . MOREOREQ operation
    (42) bool -> operation . LESSOREQ operation
    (43) bool -> operation . EQUALS operation
    (44) bool -> operation . NOTEQUALS operation
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    RPAREN          shift and go to state 85
    MORE            shift and go to state 97
    LESS            shift and go to state 98
    MOREOREQ        shift and go to state 99
    LESSOREQ        shift and go to state 100
    EQUALS          shift and go to state 101
    NOTEQUALS       shift and go to state 102
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 96

    (47) ifelse_state -> IF LPAREN bool RPAREN . instruction
    (48) ifelse_state -> IF LPAREN bool RPAREN . instruction ELSE instruction
    (3) instruction -> . LCURLY expression RCURLY
    (4) instruction -> . line SEMICOLON
    (5) instruction -> . for_state
    (6) instruction -> . ifelse_state
    (7) instruction -> . while_state
    (8) line -> . assign
    (9) line -> . PRINT print_state
    (10) line -> . BREAK
    (11) line -> . CONTINUE
    (12) line -> . RETURN print_state
    (13) line -> . RETURN
    (50) for_state -> . FOR ID ASSIGN operation COLON operation instruction
    (47) ifelse_state -> . IF LPAREN bool RPAREN instruction
    (48) ifelse_state -> . IF LPAREN bool RPAREN instruction ELSE instruction
    (49) while_state -> . WHILE LPAREN bool RPAREN instruction
    (16) assign -> . object ASSIGN operation
    (17) assign -> . object ADDASSIGN operation
    (18) assign -> . object SUBASSIGN operation
    (19) assign -> . object MULASSIGN operation
    (20) assign -> . object DIVASSIGN operation
    (45) object -> . ID vector
    (46) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    instruction                    shift and go to state 111
    line                           shift and go to state 4
    for_state                      shift and go to state 5
    ifelse_state                   shift and go to state 6
    while_state                    shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 97

    (39) bool -> operation MORE . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 112
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 98

    (40) bool -> operation LESS . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 113
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 99

    (41) bool -> operation MOREOREQ . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 114
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 100

    (42) bool -> operation LESSOREQ . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 115
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 101

    (43) bool -> operation EQUALS . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 116
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 102

    (44) bool -> operation NOTEQUALS . operation
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 117
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 103

    (49) while_state -> WHILE LPAREN bool RPAREN . instruction
    (3) instruction -> . LCURLY expression RCURLY
    (4) instruction -> . line SEMICOLON
    (5) instruction -> . for_state
    (6) instruction -> . ifelse_state
    (7) instruction -> . while_state
    (8) line -> . assign
    (9) line -> . PRINT print_state
    (10) line -> . BREAK
    (11) line -> . CONTINUE
    (12) line -> . RETURN print_state
    (13) line -> . RETURN
    (50) for_state -> . FOR ID ASSIGN operation COLON operation instruction
    (47) ifelse_state -> . IF LPAREN bool RPAREN instruction
    (48) ifelse_state -> . IF LPAREN bool RPAREN instruction ELSE instruction
    (49) while_state -> . WHILE LPAREN bool RPAREN instruction
    (16) assign -> . object ASSIGN operation
    (17) assign -> . object ADDASSIGN operation
    (18) assign -> . object SUBASSIGN operation
    (19) assign -> . object MULASSIGN operation
    (20) assign -> . object DIVASSIGN operation
    (45) object -> . ID vector
    (46) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    instruction                    shift and go to state 118
    line                           shift and go to state 4
    for_state                      shift and go to state 5
    ifelse_state                   shift and go to state 6
    while_state                    shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 104

    (32) operation -> EYE LPAREN operation RPAREN .

    COMMA           reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    PLUS            reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    MINUS           reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    TIMES           reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    DIVIDE          reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    DOTADD          reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    DOTSUB          reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    DOTMUL          reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    DOTDIV          reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    TRANSPOSE       reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    SEMICOLON       reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    RPAREN          reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    MORE            reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    LESS            reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    MOREOREQ        reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    LESSOREQ        reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    EQUALS          reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    NOTEQUALS       reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    COLON           reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    LCURLY          reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    PRINT           reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    BREAK           reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    CONTINUE        reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    RETURN          reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    FOR             reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    IF              reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    WHILE           reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)
    ID              reduce using rule 32 (operation -> EYE LPAREN operation RPAREN .)


state 105

    (33) operation -> ZEROS LPAREN operation RPAREN .

    COMMA           reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    PLUS            reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    MINUS           reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    TIMES           reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    DIVIDE          reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    DOTADD          reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    DOTSUB          reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    DOTMUL          reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    DOTDIV          reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    TRANSPOSE       reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    SEMICOLON       reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    RPAREN          reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    MORE            reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    LESS            reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    MOREOREQ        reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    LESSOREQ        reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    EQUALS          reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    NOTEQUALS       reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    COLON           reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    LCURLY          reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    PRINT           reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    BREAK           reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    CONTINUE        reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    RETURN          reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    FOR             reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    IF              reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    WHILE           reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)
    ID              reduce using rule 33 (operation -> ZEROS LPAREN operation RPAREN .)


state 106

    (34) operation -> ONES LPAREN operation RPAREN .

    COMMA           reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    PLUS            reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    MINUS           reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    TIMES           reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    DIVIDE          reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    DOTADD          reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    DOTSUB          reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    DOTMUL          reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    DOTDIV          reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    TRANSPOSE       reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    SEMICOLON       reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    RPAREN          reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    MORE            reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    LESS            reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    MOREOREQ        reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    LESSOREQ        reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    EQUALS          reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    NOTEQUALS       reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    COLON           reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    LCURLY          reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    PRINT           reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    BREAK           reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    CONTINUE        reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    RETURN          reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    FOR             reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    IF              reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    WHILE           reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)
    ID              reduce using rule 34 (operation -> ONES LPAREN operation RPAREN .)


state 107

    (52) row -> row COMMA vector .

    RSQUAR          reduce using rule 52 (row -> row COMMA vector .)
    COMMA           reduce using rule 52 (row -> row COMMA vector .)


state 108

    (50) for_state -> FOR ID ASSIGN operation COLON . operation instruction
    (21) operation -> . LPAREN operation RPAREN
    (22) operation -> . operation PLUS operation
    (23) operation -> . operation MINUS operation
    (24) operation -> . operation TIMES operation
    (25) operation -> . operation DIVIDE operation
    (26) operation -> . operation DOTADD operation
    (27) operation -> . operation DOTSUB operation
    (28) operation -> . operation DOTMUL operation
    (29) operation -> . operation DOTDIV operation
    (30) operation -> . MINUS operation
    (31) operation -> . operation TRANSPOSE
    (32) operation -> . EYE LPAREN operation RPAREN
    (33) operation -> . ZEROS LPAREN operation RPAREN
    (34) operation -> . ONES LPAREN operation RPAREN
    (35) operation -> . object
    (36) operation -> . number
    (37) operation -> . matrix
    (45) object -> . ID vector
    (46) object -> . ID
    (57) number -> . INT
    (58) number -> . FLOAT
    (59) number -> . STRING
    (51) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ZEROS           shift and go to state 26
    ONES            shift and go to state 27
    ID              shift and go to state 14
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 119
    object                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 30

state 109

    (55) elem -> elem COMMA number .

    RSQUAR          reduce using rule 55 (elem -> elem COMMA number .)
    COMMA           reduce using rule 55 (elem -> elem COMMA number .)


state 110

    (38) bool -> LPAREN bool RPAREN .

    RPAREN          reduce using rule 38 (bool -> LPAREN bool RPAREN .)


state 111

    (47) ifelse_state -> IF LPAREN bool RPAREN instruction .
    (48) ifelse_state -> IF LPAREN bool RPAREN instruction . ELSE instruction

  ! shift/reduce conflict for ELSE resolved as shift
    LCURLY          reduce using rule 47 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    PRINT           reduce using rule 47 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    BREAK           reduce using rule 47 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    CONTINUE        reduce using rule 47 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    RETURN          reduce using rule 47 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    FOR             reduce using rule 47 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    IF              reduce using rule 47 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    WHILE           reduce using rule 47 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    ID              reduce using rule 47 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    $end            reduce using rule 47 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    RCURLY          reduce using rule 47 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    ELSE            shift and go to state 120

  ! ELSE            [ reduce using rule 47 (ifelse_state -> IF LPAREN bool RPAREN instruction .) ]


state 112

    (39) bool -> operation MORE operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 39 (bool -> operation MORE operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 113

    (40) bool -> operation LESS operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 40 (bool -> operation LESS operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 114

    (41) bool -> operation MOREOREQ operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 41 (bool -> operation MOREOREQ operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 115

    (42) bool -> operation LESSOREQ operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 42 (bool -> operation LESSOREQ operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 116

    (43) bool -> operation EQUALS operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 43 (bool -> operation EQUALS operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 117

    (44) bool -> operation NOTEQUALS operation .
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 44 (bool -> operation NOTEQUALS operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 118

    (49) while_state -> WHILE LPAREN bool RPAREN instruction .

    LCURLY          reduce using rule 49 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    PRINT           reduce using rule 49 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    BREAK           reduce using rule 49 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    CONTINUE        reduce using rule 49 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    RETURN          reduce using rule 49 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    FOR             reduce using rule 49 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    IF              reduce using rule 49 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    WHILE           reduce using rule 49 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    ID              reduce using rule 49 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    $end            reduce using rule 49 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    RCURLY          reduce using rule 49 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    ELSE            reduce using rule 49 (while_state -> WHILE LPAREN bool RPAREN instruction .)


state 119

    (50) for_state -> FOR ID ASSIGN operation COLON operation . instruction
    (22) operation -> operation . PLUS operation
    (23) operation -> operation . MINUS operation
    (24) operation -> operation . TIMES operation
    (25) operation -> operation . DIVIDE operation
    (26) operation -> operation . DOTADD operation
    (27) operation -> operation . DOTSUB operation
    (28) operation -> operation . DOTMUL operation
    (29) operation -> operation . DOTDIV operation
    (31) operation -> operation . TRANSPOSE
    (3) instruction -> . LCURLY expression RCURLY
    (4) instruction -> . line SEMICOLON
    (5) instruction -> . for_state
    (6) instruction -> . ifelse_state
    (7) instruction -> . while_state
    (8) line -> . assign
    (9) line -> . PRINT print_state
    (10) line -> . BREAK
    (11) line -> . CONTINUE
    (12) line -> . RETURN print_state
    (13) line -> . RETURN
    (50) for_state -> . FOR ID ASSIGN operation COLON operation instruction
    (47) ifelse_state -> . IF LPAREN bool RPAREN instruction
    (48) ifelse_state -> . IF LPAREN bool RPAREN instruction ELSE instruction
    (49) while_state -> . WHILE LPAREN bool RPAREN instruction
    (16) assign -> . object ASSIGN operation
    (17) assign -> . object ADDASSIGN operation
    (18) assign -> . object SUBASSIGN operation
    (19) assign -> . object MULASSIGN operation
    (20) assign -> . object DIVASSIGN operation
    (45) object -> . ID vector
    (46) object -> . ID

    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56
    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    instruction                    shift and go to state 121
    line                           shift and go to state 4
    for_state                      shift and go to state 5
    ifelse_state                   shift and go to state 6
    while_state                    shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 120

    (48) ifelse_state -> IF LPAREN bool RPAREN instruction ELSE . instruction
    (3) instruction -> . LCURLY expression RCURLY
    (4) instruction -> . line SEMICOLON
    (5) instruction -> . for_state
    (6) instruction -> . ifelse_state
    (7) instruction -> . while_state
    (8) line -> . assign
    (9) line -> . PRINT print_state
    (10) line -> . BREAK
    (11) line -> . CONTINUE
    (12) line -> . RETURN print_state
    (13) line -> . RETURN
    (50) for_state -> . FOR ID ASSIGN operation COLON operation instruction
    (47) ifelse_state -> . IF LPAREN bool RPAREN instruction
    (48) ifelse_state -> . IF LPAREN bool RPAREN instruction ELSE instruction
    (49) while_state -> . WHILE LPAREN bool RPAREN instruction
    (16) assign -> . object ASSIGN operation
    (17) assign -> . object ADDASSIGN operation
    (18) assign -> . object SUBASSIGN operation
    (19) assign -> . object MULASSIGN operation
    (20) assign -> . object DIVASSIGN operation
    (45) object -> . ID vector
    (46) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    instruction                    shift and go to state 122
    line                           shift and go to state 4
    for_state                      shift and go to state 5
    ifelse_state                   shift and go to state 6
    while_state                    shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 121

    (50) for_state -> FOR ID ASSIGN operation COLON operation instruction .

    LCURLY          reduce using rule 50 (for_state -> FOR ID ASSIGN operation COLON operation instruction .)
    PRINT           reduce using rule 50 (for_state -> FOR ID ASSIGN operation COLON operation instruction .)
    BREAK           reduce using rule 50 (for_state -> FOR ID ASSIGN operation COLON operation instruction .)
    CONTINUE        reduce using rule 50 (for_state -> FOR ID ASSIGN operation COLON operation instruction .)
    RETURN          reduce using rule 50 (for_state -> FOR ID ASSIGN operation COLON operation instruction .)
    FOR             reduce using rule 50 (for_state -> FOR ID ASSIGN operation COLON operation instruction .)
    IF              reduce using rule 50 (for_state -> FOR ID ASSIGN operation COLON operation instruction .)
    WHILE           reduce using rule 50 (for_state -> FOR ID ASSIGN operation COLON operation instruction .)
    ID              reduce using rule 50 (for_state -> FOR ID ASSIGN operation COLON operation instruction .)
    $end            reduce using rule 50 (for_state -> FOR ID ASSIGN operation COLON operation instruction .)
    RCURLY          reduce using rule 50 (for_state -> FOR ID ASSIGN operation COLON operation instruction .)
    ELSE            reduce using rule 50 (for_state -> FOR ID ASSIGN operation COLON operation instruction .)


state 122

    (48) ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .

    LCURLY          reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    PRINT           reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    BREAK           reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    CONTINUE        reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    RETURN          reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    FOR             reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    IF              reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    WHILE           reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    ID              reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    $end            reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    RCURLY          reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    ELSE            reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 111 resolved as shift
