Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression expression
Rule 2     expression -> pexpression
Rule 3     pexpression -> LCURLY pexpression RCURLY
Rule 4     pexpression -> LCURLY expression RCURLY
Rule 5     pexpression -> line SEMICOLON
Rule 6     pexpression -> for
Rule 7     pexpression -> ifelse
Rule 8     pexpression -> while
Rule 9     object -> ID vector
Rule 10    object -> ID
Rule 11    line -> assign
Rule 12    line -> PRINT printable
Rule 13    line -> BREAK
Rule 14    line -> CONTINUE
Rule 15    line -> RETURN printable
Rule 16    line -> RETURN
Rule 17    for -> FOR ID ASSIGN forable COLON forable pexpression
Rule 18    printable -> printable COMMA printable
Rule 19    printable -> operation
Rule 20    printable -> STRING
Rule 21    forable -> object
Rule 22    forable -> INT
Rule 23    bool -> LPAREN bool RPAREN
Rule 24    bool -> operation MORE operation
Rule 25    bool -> operation LESS operation
Rule 26    bool -> operation MOREOREQ operation
Rule 27    bool -> operation LESSOREQ operation
Rule 28    bool -> operation EQUALS operation
Rule 29    bool -> operation NOTEQUALS operation
Rule 30    assign -> object ASSIGN operation
Rule 31    assign -> object ADDASSIGN operation
Rule 32    assign -> object SUBASSIGN operation
Rule 33    assign -> object MULASSIGN operation
Rule 34    assign -> object DIVASSIGN operation
Rule 35    operation -> operation PLUS operation
Rule 36    operation -> operation MINUS operation
Rule 37    operation -> operation TIMES operation
Rule 38    operation -> operation DIVIDE operation
Rule 39    operation -> operation DOTADD operation
Rule 40    operation -> operation DOTSUB operation
Rule 41    operation -> operation DOTMUL operation
Rule 42    operation -> operation DOTDIV operation
Rule 43    operation -> MINUS operation
Rule 44    operation -> operation TRANSPOSE
Rule 45    operation -> EYE LPAREN operation RPAREN
Rule 46    operation -> ZEROS LPAREN operation RPAREN
Rule 47    operation -> ONES LPAREN operation RPAREN
Rule 48    operation -> object
Rule 49    operation -> FLOAT
Rule 50    operation -> INT
Rule 51    operation -> matrix
Rule 52    ifelse -> IF LPAREN bool RPAREN pexpression
Rule 53    ifelse -> IF LPAREN bool RPAREN pexpression elif
Rule 54    elif -> ELSE IF LPAREN bool RPAREN pexpression elif
Rule 55    elif -> ELSE IF LPAREN bool RPAREN pexpression
Rule 56    elif -> ELSE pexpression
Rule 57    while -> WHILE LPAREN bool RPAREN pexpression
Rule 58    matrix -> LSQUAR row RSQUAR
Rule 59    row -> row COMMA vector
Rule 60    row -> vector
Rule 61    vector -> LSQUAR elem RSQUAR
Rule 62    elem -> elem COMMA num
Rule 63    elem -> num
Rule 64    num -> INT
Rule 65    num -> FLOAT

Terminals, with rules where they appear

ADDASSIGN            : 31
ASSIGN               : 17 30
BREAK                : 13
COLON                : 17
COMMA                : 18 59 62
CONTINUE             : 14
DIVASSIGN            : 34
DIVIDE               : 38
DOTADD               : 39
DOTDIV               : 42
DOTMUL               : 41
DOTSUB               : 40
ELSE                 : 54 55 56
EQUALS               : 28
EYE                  : 45
FLOAT                : 49 65
FOR                  : 17
ID                   : 9 10 17
IF                   : 52 53 54 55
INT                  : 22 50 64
LCURLY               : 3 4
LESS                 : 25
LESSOREQ             : 27
LPAREN               : 23 45 46 47 52 53 54 55 57
LSQUAR               : 58 61
MINUS                : 36 43
MORE                 : 24
MOREOREQ             : 26
MULASSIGN            : 33
NOTEQUALS            : 29
ONES                 : 47
PLUS                 : 35
PRINT                : 12
RCURLY               : 3 4
RETURN               : 15 16
RPAREN               : 23 45 46 47 52 53 54 55 57
RSQUAR               : 58 61
SEMICOLON            : 5
STRING               : 20
SUBASSIGN            : 32
TIMES                : 37
TRANSPOSE            : 44
WHILE                : 57
ZEROS                : 46
error                : 

Nonterminals, with rules where they appear

assign               : 11
bool                 : 23 52 53 54 55 57
elem                 : 61 62
elif                 : 53 54
expression           : 1 1 4 0
for                  : 6
forable              : 17 17
ifelse               : 7
line                 : 5
matrix               : 51
num                  : 62 63
object               : 21 30 31 32 33 34 48
operation            : 19 24 24 25 25 26 26 27 27 28 28 29 29 30 31 32 33 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 44 45 46 47
pexpression          : 2 3 17 52 53 54 55 56 57
printable            : 12 15 18 18
row                  : 58 59
vector               : 9 59 60
while                : 8

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression expression
    (2) expression -> . pexpression
    (3) pexpression -> . LCURLY pexpression RCURLY
    (4) pexpression -> . LCURLY expression RCURLY
    (5) pexpression -> . line SEMICOLON
    (6) pexpression -> . for
    (7) pexpression -> . ifelse
    (8) pexpression -> . while
    (11) line -> . assign
    (12) line -> . PRINT printable
    (13) line -> . BREAK
    (14) line -> . CONTINUE
    (15) line -> . RETURN printable
    (16) line -> . RETURN
    (17) for -> . FOR ID ASSIGN forable COLON forable pexpression
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression elif
    (57) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (9) object -> . ID vector
    (10) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    expression                     shift and go to state 1
    pexpression                    shift and go to state 2
    line                           shift and go to state 4
    for                            shift and go to state 5
    ifelse                         shift and go to state 6
    while                          shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 1

    (0) S' -> expression .
    (1) expression -> expression . expression
    (1) expression -> . expression expression
    (2) expression -> . pexpression
    (3) pexpression -> . LCURLY pexpression RCURLY
    (4) pexpression -> . LCURLY expression RCURLY
    (5) pexpression -> . line SEMICOLON
    (6) pexpression -> . for
    (7) pexpression -> . ifelse
    (8) pexpression -> . while
    (11) line -> . assign
    (12) line -> . PRINT printable
    (13) line -> . BREAK
    (14) line -> . CONTINUE
    (15) line -> . RETURN printable
    (16) line -> . RETURN
    (17) for -> . FOR ID ASSIGN forable COLON forable pexpression
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression elif
    (57) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (9) object -> . ID vector
    (10) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    expression                     shift and go to state 18
    pexpression                    shift and go to state 2
    line                           shift and go to state 4
    for                            shift and go to state 5
    ifelse                         shift and go to state 6
    while                          shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 2

    (2) expression -> pexpression .

    LCURLY          reduce using rule 2 (expression -> pexpression .)
    PRINT           reduce using rule 2 (expression -> pexpression .)
    BREAK           reduce using rule 2 (expression -> pexpression .)
    CONTINUE        reduce using rule 2 (expression -> pexpression .)
    RETURN          reduce using rule 2 (expression -> pexpression .)
    FOR             reduce using rule 2 (expression -> pexpression .)
    IF              reduce using rule 2 (expression -> pexpression .)
    WHILE           reduce using rule 2 (expression -> pexpression .)
    ID              reduce using rule 2 (expression -> pexpression .)
    $end            reduce using rule 2 (expression -> pexpression .)
    RCURLY          reduce using rule 2 (expression -> pexpression .)


state 3

    (3) pexpression -> LCURLY . pexpression RCURLY
    (4) pexpression -> LCURLY . expression RCURLY
    (3) pexpression -> . LCURLY pexpression RCURLY
    (4) pexpression -> . LCURLY expression RCURLY
    (5) pexpression -> . line SEMICOLON
    (6) pexpression -> . for
    (7) pexpression -> . ifelse
    (8) pexpression -> . while
    (1) expression -> . expression expression
    (2) expression -> . pexpression
    (11) line -> . assign
    (12) line -> . PRINT printable
    (13) line -> . BREAK
    (14) line -> . CONTINUE
    (15) line -> . RETURN printable
    (16) line -> . RETURN
    (17) for -> . FOR ID ASSIGN forable COLON forable pexpression
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression elif
    (57) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (9) object -> . ID vector
    (10) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    pexpression                    shift and go to state 19
    expression                     shift and go to state 20
    line                           shift and go to state 4
    for                            shift and go to state 5
    ifelse                         shift and go to state 6
    while                          shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 4

    (5) pexpression -> line . SEMICOLON

    SEMICOLON       shift and go to state 21


state 5

    (6) pexpression -> for .

    LCURLY          reduce using rule 6 (pexpression -> for .)
    PRINT           reduce using rule 6 (pexpression -> for .)
    BREAK           reduce using rule 6 (pexpression -> for .)
    CONTINUE        reduce using rule 6 (pexpression -> for .)
    RETURN          reduce using rule 6 (pexpression -> for .)
    FOR             reduce using rule 6 (pexpression -> for .)
    IF              reduce using rule 6 (pexpression -> for .)
    WHILE           reduce using rule 6 (pexpression -> for .)
    ID              reduce using rule 6 (pexpression -> for .)
    $end            reduce using rule 6 (pexpression -> for .)
    RCURLY          reduce using rule 6 (pexpression -> for .)
    ELSE            reduce using rule 6 (pexpression -> for .)


state 6

    (7) pexpression -> ifelse .

    LCURLY          reduce using rule 7 (pexpression -> ifelse .)
    PRINT           reduce using rule 7 (pexpression -> ifelse .)
    BREAK           reduce using rule 7 (pexpression -> ifelse .)
    CONTINUE        reduce using rule 7 (pexpression -> ifelse .)
    RETURN          reduce using rule 7 (pexpression -> ifelse .)
    FOR             reduce using rule 7 (pexpression -> ifelse .)
    IF              reduce using rule 7 (pexpression -> ifelse .)
    WHILE           reduce using rule 7 (pexpression -> ifelse .)
    ID              reduce using rule 7 (pexpression -> ifelse .)
    $end            reduce using rule 7 (pexpression -> ifelse .)
    RCURLY          reduce using rule 7 (pexpression -> ifelse .)
    ELSE            reduce using rule 7 (pexpression -> ifelse .)


state 7

    (8) pexpression -> while .

    LCURLY          reduce using rule 8 (pexpression -> while .)
    PRINT           reduce using rule 8 (pexpression -> while .)
    BREAK           reduce using rule 8 (pexpression -> while .)
    CONTINUE        reduce using rule 8 (pexpression -> while .)
    RETURN          reduce using rule 8 (pexpression -> while .)
    FOR             reduce using rule 8 (pexpression -> while .)
    IF              reduce using rule 8 (pexpression -> while .)
    WHILE           reduce using rule 8 (pexpression -> while .)
    ID              reduce using rule 8 (pexpression -> while .)
    $end            reduce using rule 8 (pexpression -> while .)
    RCURLY          reduce using rule 8 (pexpression -> while .)
    ELSE            reduce using rule 8 (pexpression -> while .)


state 8

    (11) line -> assign .

    SEMICOLON       reduce using rule 11 (line -> assign .)


state 9

    (12) line -> PRINT . printable
    (18) printable -> . printable COMMA printable
    (19) printable -> . operation
    (20) printable -> . STRING
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    STRING          shift and go to state 24
    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    printable                      shift and go to state 22
    operation                      shift and go to state 23
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 10

    (13) line -> BREAK .

    SEMICOLON       reduce using rule 13 (line -> BREAK .)


state 11

    (14) line -> CONTINUE .

    SEMICOLON       reduce using rule 14 (line -> CONTINUE .)


state 12

    (15) line -> RETURN . printable
    (16) line -> RETURN .
    (18) printable -> . printable COMMA printable
    (19) printable -> . operation
    (20) printable -> . STRING
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    SEMICOLON       reduce using rule 16 (line -> RETURN .)
    STRING          shift and go to state 24
    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    printable                      shift and go to state 34
    operation                      shift and go to state 23
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 13

    (17) for -> FOR . ID ASSIGN forable COLON forable pexpression

    ID              shift and go to state 35


state 14

    (9) object -> ID . vector
    (10) object -> ID .
    (61) vector -> . LSQUAR elem RSQUAR

    ASSIGN          reduce using rule 10 (object -> ID .)
    ADDASSIGN       reduce using rule 10 (object -> ID .)
    SUBASSIGN       reduce using rule 10 (object -> ID .)
    MULASSIGN       reduce using rule 10 (object -> ID .)
    DIVASSIGN       reduce using rule 10 (object -> ID .)
    PLUS            reduce using rule 10 (object -> ID .)
    MINUS           reduce using rule 10 (object -> ID .)
    TIMES           reduce using rule 10 (object -> ID .)
    DIVIDE          reduce using rule 10 (object -> ID .)
    DOTADD          reduce using rule 10 (object -> ID .)
    DOTSUB          reduce using rule 10 (object -> ID .)
    DOTMUL          reduce using rule 10 (object -> ID .)
    DOTDIV          reduce using rule 10 (object -> ID .)
    TRANSPOSE       reduce using rule 10 (object -> ID .)
    COMMA           reduce using rule 10 (object -> ID .)
    SEMICOLON       reduce using rule 10 (object -> ID .)
    MORE            reduce using rule 10 (object -> ID .)
    LESS            reduce using rule 10 (object -> ID .)
    MOREOREQ        reduce using rule 10 (object -> ID .)
    LESSOREQ        reduce using rule 10 (object -> ID .)
    EQUALS          reduce using rule 10 (object -> ID .)
    NOTEQUALS       reduce using rule 10 (object -> ID .)
    RPAREN          reduce using rule 10 (object -> ID .)
    COLON           reduce using rule 10 (object -> ID .)
    LCURLY          reduce using rule 10 (object -> ID .)
    PRINT           reduce using rule 10 (object -> ID .)
    BREAK           reduce using rule 10 (object -> ID .)
    CONTINUE        reduce using rule 10 (object -> ID .)
    RETURN          reduce using rule 10 (object -> ID .)
    FOR             reduce using rule 10 (object -> ID .)
    IF              reduce using rule 10 (object -> ID .)
    WHILE           reduce using rule 10 (object -> ID .)
    ID              reduce using rule 10 (object -> ID .)
    LSQUAR          shift and go to state 37

    vector                         shift and go to state 36

state 15

    (52) ifelse -> IF . LPAREN bool RPAREN pexpression
    (53) ifelse -> IF . LPAREN bool RPAREN pexpression elif

    LPAREN          shift and go to state 38


state 16

    (57) while -> WHILE . LPAREN bool RPAREN pexpression

    LPAREN          shift and go to state 39


state 17

    (30) assign -> object . ASSIGN operation
    (31) assign -> object . ADDASSIGN operation
    (32) assign -> object . SUBASSIGN operation
    (33) assign -> object . MULASSIGN operation
    (34) assign -> object . DIVASSIGN operation

    ASSIGN          shift and go to state 40
    ADDASSIGN       shift and go to state 41
    SUBASSIGN       shift and go to state 42
    MULASSIGN       shift and go to state 43
    DIVASSIGN       shift and go to state 44


state 18

    (1) expression -> expression expression .
    (1) expression -> expression . expression
    (1) expression -> . expression expression
    (2) expression -> . pexpression
    (3) pexpression -> . LCURLY pexpression RCURLY
    (4) pexpression -> . LCURLY expression RCURLY
    (5) pexpression -> . line SEMICOLON
    (6) pexpression -> . for
    (7) pexpression -> . ifelse
    (8) pexpression -> . while
    (11) line -> . assign
    (12) line -> . PRINT printable
    (13) line -> . BREAK
    (14) line -> . CONTINUE
    (15) line -> . RETURN printable
    (16) line -> . RETURN
    (17) for -> . FOR ID ASSIGN forable COLON forable pexpression
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression elif
    (57) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (9) object -> . ID vector
    (10) object -> . ID

  ! shift/reduce conflict for LCURLY resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    $end            reduce using rule 1 (expression -> expression expression .)
    RCURLY          reduce using rule 1 (expression -> expression expression .)
    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

  ! LCURLY          [ reduce using rule 1 (expression -> expression expression .) ]
  ! PRINT           [ reduce using rule 1 (expression -> expression expression .) ]
  ! BREAK           [ reduce using rule 1 (expression -> expression expression .) ]
  ! CONTINUE        [ reduce using rule 1 (expression -> expression expression .) ]
  ! RETURN          [ reduce using rule 1 (expression -> expression expression .) ]
  ! FOR             [ reduce using rule 1 (expression -> expression expression .) ]
  ! IF              [ reduce using rule 1 (expression -> expression expression .) ]
  ! WHILE           [ reduce using rule 1 (expression -> expression expression .) ]
  ! ID              [ reduce using rule 1 (expression -> expression expression .) ]

    expression                     shift and go to state 18
    pexpression                    shift and go to state 2
    line                           shift and go to state 4
    for                            shift and go to state 5
    ifelse                         shift and go to state 6
    while                          shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 19

    (3) pexpression -> LCURLY pexpression . RCURLY
    (2) expression -> pexpression .

  ! shift/reduce conflict for RCURLY resolved as shift
    RCURLY          shift and go to state 45
    LCURLY          reduce using rule 2 (expression -> pexpression .)
    PRINT           reduce using rule 2 (expression -> pexpression .)
    BREAK           reduce using rule 2 (expression -> pexpression .)
    CONTINUE        reduce using rule 2 (expression -> pexpression .)
    RETURN          reduce using rule 2 (expression -> pexpression .)
    FOR             reduce using rule 2 (expression -> pexpression .)
    IF              reduce using rule 2 (expression -> pexpression .)
    WHILE           reduce using rule 2 (expression -> pexpression .)
    ID              reduce using rule 2 (expression -> pexpression .)

  ! RCURLY          [ reduce using rule 2 (expression -> pexpression .) ]


state 20

    (4) pexpression -> LCURLY expression . RCURLY
    (1) expression -> expression . expression
    (1) expression -> . expression expression
    (2) expression -> . pexpression
    (3) pexpression -> . LCURLY pexpression RCURLY
    (4) pexpression -> . LCURLY expression RCURLY
    (5) pexpression -> . line SEMICOLON
    (6) pexpression -> . for
    (7) pexpression -> . ifelse
    (8) pexpression -> . while
    (11) line -> . assign
    (12) line -> . PRINT printable
    (13) line -> . BREAK
    (14) line -> . CONTINUE
    (15) line -> . RETURN printable
    (16) line -> . RETURN
    (17) for -> . FOR ID ASSIGN forable COLON forable pexpression
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression elif
    (57) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (9) object -> . ID vector
    (10) object -> . ID

    RCURLY          shift and go to state 46
    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    expression                     shift and go to state 18
    pexpression                    shift and go to state 2
    line                           shift and go to state 4
    for                            shift and go to state 5
    ifelse                         shift and go to state 6
    while                          shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 21

    (5) pexpression -> line SEMICOLON .

    LCURLY          reduce using rule 5 (pexpression -> line SEMICOLON .)
    PRINT           reduce using rule 5 (pexpression -> line SEMICOLON .)
    BREAK           reduce using rule 5 (pexpression -> line SEMICOLON .)
    CONTINUE        reduce using rule 5 (pexpression -> line SEMICOLON .)
    RETURN          reduce using rule 5 (pexpression -> line SEMICOLON .)
    FOR             reduce using rule 5 (pexpression -> line SEMICOLON .)
    IF              reduce using rule 5 (pexpression -> line SEMICOLON .)
    WHILE           reduce using rule 5 (pexpression -> line SEMICOLON .)
    ID              reduce using rule 5 (pexpression -> line SEMICOLON .)
    $end            reduce using rule 5 (pexpression -> line SEMICOLON .)
    RCURLY          reduce using rule 5 (pexpression -> line SEMICOLON .)
    ELSE            reduce using rule 5 (pexpression -> line SEMICOLON .)


state 22

    (12) line -> PRINT printable .
    (18) printable -> printable . COMMA printable

    SEMICOLON       reduce using rule 12 (line -> PRINT printable .)
    COMMA           shift and go to state 47


state 23

    (19) printable -> operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    COMMA           reduce using rule 19 (printable -> operation .)
    SEMICOLON       reduce using rule 19 (printable -> operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 24

    (20) printable -> STRING .

    COMMA           reduce using rule 20 (printable -> STRING .)
    SEMICOLON       reduce using rule 20 (printable -> STRING .)


state 25

    (43) operation -> MINUS . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 57
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 26

    (45) operation -> EYE . LPAREN operation RPAREN

    LPAREN          shift and go to state 58


state 27

    (46) operation -> ZEROS . LPAREN operation RPAREN

    LPAREN          shift and go to state 59


state 28

    (47) operation -> ONES . LPAREN operation RPAREN

    LPAREN          shift and go to state 60


state 29

    (48) operation -> object .

    PLUS            reduce using rule 48 (operation -> object .)
    MINUS           reduce using rule 48 (operation -> object .)
    TIMES           reduce using rule 48 (operation -> object .)
    DIVIDE          reduce using rule 48 (operation -> object .)
    DOTADD          reduce using rule 48 (operation -> object .)
    DOTSUB          reduce using rule 48 (operation -> object .)
    DOTMUL          reduce using rule 48 (operation -> object .)
    DOTDIV          reduce using rule 48 (operation -> object .)
    TRANSPOSE       reduce using rule 48 (operation -> object .)
    COMMA           reduce using rule 48 (operation -> object .)
    SEMICOLON       reduce using rule 48 (operation -> object .)
    MORE            reduce using rule 48 (operation -> object .)
    LESS            reduce using rule 48 (operation -> object .)
    MOREOREQ        reduce using rule 48 (operation -> object .)
    LESSOREQ        reduce using rule 48 (operation -> object .)
    EQUALS          reduce using rule 48 (operation -> object .)
    NOTEQUALS       reduce using rule 48 (operation -> object .)
    RPAREN          reduce using rule 48 (operation -> object .)


state 30

    (49) operation -> FLOAT .

    PLUS            reduce using rule 49 (operation -> FLOAT .)
    MINUS           reduce using rule 49 (operation -> FLOAT .)
    TIMES           reduce using rule 49 (operation -> FLOAT .)
    DIVIDE          reduce using rule 49 (operation -> FLOAT .)
    DOTADD          reduce using rule 49 (operation -> FLOAT .)
    DOTSUB          reduce using rule 49 (operation -> FLOAT .)
    DOTMUL          reduce using rule 49 (operation -> FLOAT .)
    DOTDIV          reduce using rule 49 (operation -> FLOAT .)
    TRANSPOSE       reduce using rule 49 (operation -> FLOAT .)
    COMMA           reduce using rule 49 (operation -> FLOAT .)
    SEMICOLON       reduce using rule 49 (operation -> FLOAT .)
    MORE            reduce using rule 49 (operation -> FLOAT .)
    LESS            reduce using rule 49 (operation -> FLOAT .)
    MOREOREQ        reduce using rule 49 (operation -> FLOAT .)
    LESSOREQ        reduce using rule 49 (operation -> FLOAT .)
    EQUALS          reduce using rule 49 (operation -> FLOAT .)
    NOTEQUALS       reduce using rule 49 (operation -> FLOAT .)
    RPAREN          reduce using rule 49 (operation -> FLOAT .)


state 31

    (50) operation -> INT .

    PLUS            reduce using rule 50 (operation -> INT .)
    MINUS           reduce using rule 50 (operation -> INT .)
    TIMES           reduce using rule 50 (operation -> INT .)
    DIVIDE          reduce using rule 50 (operation -> INT .)
    DOTADD          reduce using rule 50 (operation -> INT .)
    DOTSUB          reduce using rule 50 (operation -> INT .)
    DOTMUL          reduce using rule 50 (operation -> INT .)
    DOTDIV          reduce using rule 50 (operation -> INT .)
    TRANSPOSE       reduce using rule 50 (operation -> INT .)
    COMMA           reduce using rule 50 (operation -> INT .)
    SEMICOLON       reduce using rule 50 (operation -> INT .)
    MORE            reduce using rule 50 (operation -> INT .)
    LESS            reduce using rule 50 (operation -> INT .)
    MOREOREQ        reduce using rule 50 (operation -> INT .)
    LESSOREQ        reduce using rule 50 (operation -> INT .)
    EQUALS          reduce using rule 50 (operation -> INT .)
    NOTEQUALS       reduce using rule 50 (operation -> INT .)
    RPAREN          reduce using rule 50 (operation -> INT .)


state 32

    (51) operation -> matrix .

    PLUS            reduce using rule 51 (operation -> matrix .)
    MINUS           reduce using rule 51 (operation -> matrix .)
    TIMES           reduce using rule 51 (operation -> matrix .)
    DIVIDE          reduce using rule 51 (operation -> matrix .)
    DOTADD          reduce using rule 51 (operation -> matrix .)
    DOTSUB          reduce using rule 51 (operation -> matrix .)
    DOTMUL          reduce using rule 51 (operation -> matrix .)
    DOTDIV          reduce using rule 51 (operation -> matrix .)
    TRANSPOSE       reduce using rule 51 (operation -> matrix .)
    COMMA           reduce using rule 51 (operation -> matrix .)
    SEMICOLON       reduce using rule 51 (operation -> matrix .)
    MORE            reduce using rule 51 (operation -> matrix .)
    LESS            reduce using rule 51 (operation -> matrix .)
    MOREOREQ        reduce using rule 51 (operation -> matrix .)
    LESSOREQ        reduce using rule 51 (operation -> matrix .)
    EQUALS          reduce using rule 51 (operation -> matrix .)
    NOTEQUALS       reduce using rule 51 (operation -> matrix .)
    RPAREN          reduce using rule 51 (operation -> matrix .)


state 33

    (58) matrix -> LSQUAR . row RSQUAR
    (59) row -> . row COMMA vector
    (60) row -> . vector
    (61) vector -> . LSQUAR elem RSQUAR

    LSQUAR          shift and go to state 37

    row                            shift and go to state 61
    vector                         shift and go to state 62

state 34

    (15) line -> RETURN printable .
    (18) printable -> printable . COMMA printable

    SEMICOLON       reduce using rule 15 (line -> RETURN printable .)
    COMMA           shift and go to state 47


state 35

    (17) for -> FOR ID . ASSIGN forable COLON forable pexpression

    ASSIGN          shift and go to state 63


state 36

    (9) object -> ID vector .

    ASSIGN          reduce using rule 9 (object -> ID vector .)
    ADDASSIGN       reduce using rule 9 (object -> ID vector .)
    SUBASSIGN       reduce using rule 9 (object -> ID vector .)
    MULASSIGN       reduce using rule 9 (object -> ID vector .)
    DIVASSIGN       reduce using rule 9 (object -> ID vector .)
    PLUS            reduce using rule 9 (object -> ID vector .)
    MINUS           reduce using rule 9 (object -> ID vector .)
    TIMES           reduce using rule 9 (object -> ID vector .)
    DIVIDE          reduce using rule 9 (object -> ID vector .)
    DOTADD          reduce using rule 9 (object -> ID vector .)
    DOTSUB          reduce using rule 9 (object -> ID vector .)
    DOTMUL          reduce using rule 9 (object -> ID vector .)
    DOTDIV          reduce using rule 9 (object -> ID vector .)
    TRANSPOSE       reduce using rule 9 (object -> ID vector .)
    COMMA           reduce using rule 9 (object -> ID vector .)
    SEMICOLON       reduce using rule 9 (object -> ID vector .)
    MORE            reduce using rule 9 (object -> ID vector .)
    LESS            reduce using rule 9 (object -> ID vector .)
    MOREOREQ        reduce using rule 9 (object -> ID vector .)
    LESSOREQ        reduce using rule 9 (object -> ID vector .)
    EQUALS          reduce using rule 9 (object -> ID vector .)
    NOTEQUALS       reduce using rule 9 (object -> ID vector .)
    RPAREN          reduce using rule 9 (object -> ID vector .)
    COLON           reduce using rule 9 (object -> ID vector .)
    LCURLY          reduce using rule 9 (object -> ID vector .)
    PRINT           reduce using rule 9 (object -> ID vector .)
    BREAK           reduce using rule 9 (object -> ID vector .)
    CONTINUE        reduce using rule 9 (object -> ID vector .)
    RETURN          reduce using rule 9 (object -> ID vector .)
    FOR             reduce using rule 9 (object -> ID vector .)
    IF              reduce using rule 9 (object -> ID vector .)
    WHILE           reduce using rule 9 (object -> ID vector .)
    ID              reduce using rule 9 (object -> ID vector .)


state 37

    (61) vector -> LSQUAR . elem RSQUAR
    (62) elem -> . elem COMMA num
    (63) elem -> . num
    (64) num -> . INT
    (65) num -> . FLOAT

    INT             shift and go to state 66
    FLOAT           shift and go to state 67

    elem                           shift and go to state 64
    num                            shift and go to state 65

state 38

    (52) ifelse -> IF LPAREN . bool RPAREN pexpression
    (53) ifelse -> IF LPAREN . bool RPAREN pexpression elif
    (23) bool -> . LPAREN bool RPAREN
    (24) bool -> . operation MORE operation
    (25) bool -> . operation LESS operation
    (26) bool -> . operation MOREOREQ operation
    (27) bool -> . operation LESSOREQ operation
    (28) bool -> . operation EQUALS operation
    (29) bool -> . operation NOTEQUALS operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 68
    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    bool                           shift and go to state 69
    operation                      shift and go to state 70
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 39

    (57) while -> WHILE LPAREN . bool RPAREN pexpression
    (23) bool -> . LPAREN bool RPAREN
    (24) bool -> . operation MORE operation
    (25) bool -> . operation LESS operation
    (26) bool -> . operation MOREOREQ operation
    (27) bool -> . operation LESSOREQ operation
    (28) bool -> . operation EQUALS operation
    (29) bool -> . operation NOTEQUALS operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 68
    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    bool                           shift and go to state 71
    operation                      shift and go to state 70
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 40

    (30) assign -> object ASSIGN . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    object                         shift and go to state 29
    operation                      shift and go to state 72
    matrix                         shift and go to state 32

state 41

    (31) assign -> object ADDASSIGN . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    object                         shift and go to state 29
    operation                      shift and go to state 73
    matrix                         shift and go to state 32

state 42

    (32) assign -> object SUBASSIGN . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    object                         shift and go to state 29
    operation                      shift and go to state 74
    matrix                         shift and go to state 32

state 43

    (33) assign -> object MULASSIGN . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    object                         shift and go to state 29
    operation                      shift and go to state 75
    matrix                         shift and go to state 32

state 44

    (34) assign -> object DIVASSIGN . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    object                         shift and go to state 29
    operation                      shift and go to state 76
    matrix                         shift and go to state 32

state 45

    (3) pexpression -> LCURLY pexpression RCURLY .

    LCURLY          reduce using rule 3 (pexpression -> LCURLY pexpression RCURLY .)
    PRINT           reduce using rule 3 (pexpression -> LCURLY pexpression RCURLY .)
    BREAK           reduce using rule 3 (pexpression -> LCURLY pexpression RCURLY .)
    CONTINUE        reduce using rule 3 (pexpression -> LCURLY pexpression RCURLY .)
    RETURN          reduce using rule 3 (pexpression -> LCURLY pexpression RCURLY .)
    FOR             reduce using rule 3 (pexpression -> LCURLY pexpression RCURLY .)
    IF              reduce using rule 3 (pexpression -> LCURLY pexpression RCURLY .)
    WHILE           reduce using rule 3 (pexpression -> LCURLY pexpression RCURLY .)
    ID              reduce using rule 3 (pexpression -> LCURLY pexpression RCURLY .)
    $end            reduce using rule 3 (pexpression -> LCURLY pexpression RCURLY .)
    RCURLY          reduce using rule 3 (pexpression -> LCURLY pexpression RCURLY .)
    ELSE            reduce using rule 3 (pexpression -> LCURLY pexpression RCURLY .)


state 46

    (4) pexpression -> LCURLY expression RCURLY .

    LCURLY          reduce using rule 4 (pexpression -> LCURLY expression RCURLY .)
    PRINT           reduce using rule 4 (pexpression -> LCURLY expression RCURLY .)
    BREAK           reduce using rule 4 (pexpression -> LCURLY expression RCURLY .)
    CONTINUE        reduce using rule 4 (pexpression -> LCURLY expression RCURLY .)
    RETURN          reduce using rule 4 (pexpression -> LCURLY expression RCURLY .)
    FOR             reduce using rule 4 (pexpression -> LCURLY expression RCURLY .)
    IF              reduce using rule 4 (pexpression -> LCURLY expression RCURLY .)
    WHILE           reduce using rule 4 (pexpression -> LCURLY expression RCURLY .)
    ID              reduce using rule 4 (pexpression -> LCURLY expression RCURLY .)
    $end            reduce using rule 4 (pexpression -> LCURLY expression RCURLY .)
    RCURLY          reduce using rule 4 (pexpression -> LCURLY expression RCURLY .)
    ELSE            reduce using rule 4 (pexpression -> LCURLY expression RCURLY .)


state 47

    (18) printable -> printable COMMA . printable
    (18) printable -> . printable COMMA printable
    (19) printable -> . operation
    (20) printable -> . STRING
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    STRING          shift and go to state 24
    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    printable                      shift and go to state 77
    operation                      shift and go to state 23
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 48

    (35) operation -> operation PLUS . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 78
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 49

    (36) operation -> operation MINUS . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 79
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 50

    (37) operation -> operation TIMES . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 80
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 51

    (38) operation -> operation DIVIDE . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 81
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 52

    (39) operation -> operation DOTADD . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 82
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 53

    (40) operation -> operation DOTSUB . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 83
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 54

    (41) operation -> operation DOTMUL . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 84
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 55

    (42) operation -> operation DOTDIV . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 85
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 56

    (44) operation -> operation TRANSPOSE .

    PLUS            reduce using rule 44 (operation -> operation TRANSPOSE .)
    MINUS           reduce using rule 44 (operation -> operation TRANSPOSE .)
    TIMES           reduce using rule 44 (operation -> operation TRANSPOSE .)
    DIVIDE          reduce using rule 44 (operation -> operation TRANSPOSE .)
    DOTADD          reduce using rule 44 (operation -> operation TRANSPOSE .)
    DOTSUB          reduce using rule 44 (operation -> operation TRANSPOSE .)
    DOTMUL          reduce using rule 44 (operation -> operation TRANSPOSE .)
    DOTDIV          reduce using rule 44 (operation -> operation TRANSPOSE .)
    TRANSPOSE       reduce using rule 44 (operation -> operation TRANSPOSE .)
    COMMA           reduce using rule 44 (operation -> operation TRANSPOSE .)
    SEMICOLON       reduce using rule 44 (operation -> operation TRANSPOSE .)
    MORE            reduce using rule 44 (operation -> operation TRANSPOSE .)
    LESS            reduce using rule 44 (operation -> operation TRANSPOSE .)
    MOREOREQ        reduce using rule 44 (operation -> operation TRANSPOSE .)
    LESSOREQ        reduce using rule 44 (operation -> operation TRANSPOSE .)
    EQUALS          reduce using rule 44 (operation -> operation TRANSPOSE .)
    NOTEQUALS       reduce using rule 44 (operation -> operation TRANSPOSE .)
    RPAREN          reduce using rule 44 (operation -> operation TRANSPOSE .)


state 57

    (43) operation -> MINUS operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 43 (operation -> MINUS operation .)
    MINUS           reduce using rule 43 (operation -> MINUS operation .)
    TIMES           reduce using rule 43 (operation -> MINUS operation .)
    DIVIDE          reduce using rule 43 (operation -> MINUS operation .)
    DOTADD          reduce using rule 43 (operation -> MINUS operation .)
    DOTSUB          reduce using rule 43 (operation -> MINUS operation .)
    DOTMUL          reduce using rule 43 (operation -> MINUS operation .)
    DOTDIV          reduce using rule 43 (operation -> MINUS operation .)
    COMMA           reduce using rule 43 (operation -> MINUS operation .)
    SEMICOLON       reduce using rule 43 (operation -> MINUS operation .)
    MORE            reduce using rule 43 (operation -> MINUS operation .)
    LESS            reduce using rule 43 (operation -> MINUS operation .)
    MOREOREQ        reduce using rule 43 (operation -> MINUS operation .)
    LESSOREQ        reduce using rule 43 (operation -> MINUS operation .)
    EQUALS          reduce using rule 43 (operation -> MINUS operation .)
    NOTEQUALS       reduce using rule 43 (operation -> MINUS operation .)
    RPAREN          reduce using rule 43 (operation -> MINUS operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 43 (operation -> MINUS operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 58

    (45) operation -> EYE LPAREN . operation RPAREN
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 86
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 59

    (46) operation -> ZEROS LPAREN . operation RPAREN
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 87
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 60

    (47) operation -> ONES LPAREN . operation RPAREN
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 88
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 61

    (58) matrix -> LSQUAR row . RSQUAR
    (59) row -> row . COMMA vector

    RSQUAR          shift and go to state 89
    COMMA           shift and go to state 90


state 62

    (60) row -> vector .

    RSQUAR          reduce using rule 60 (row -> vector .)
    COMMA           reduce using rule 60 (row -> vector .)


state 63

    (17) for -> FOR ID ASSIGN . forable COLON forable pexpression
    (21) forable -> . object
    (22) forable -> . INT
    (9) object -> . ID vector
    (10) object -> . ID

    INT             shift and go to state 93
    ID              shift and go to state 14

    forable                        shift and go to state 91
    object                         shift and go to state 92

state 64

    (61) vector -> LSQUAR elem . RSQUAR
    (62) elem -> elem . COMMA num

    RSQUAR          shift and go to state 94
    COMMA           shift and go to state 95


state 65

    (63) elem -> num .

    RSQUAR          reduce using rule 63 (elem -> num .)
    COMMA           reduce using rule 63 (elem -> num .)


state 66

    (64) num -> INT .

    RSQUAR          reduce using rule 64 (num -> INT .)
    COMMA           reduce using rule 64 (num -> INT .)


state 67

    (65) num -> FLOAT .

    RSQUAR          reduce using rule 65 (num -> FLOAT .)
    COMMA           reduce using rule 65 (num -> FLOAT .)


state 68

    (23) bool -> LPAREN . bool RPAREN
    (23) bool -> . LPAREN bool RPAREN
    (24) bool -> . operation MORE operation
    (25) bool -> . operation LESS operation
    (26) bool -> . operation MOREOREQ operation
    (27) bool -> . operation LESSOREQ operation
    (28) bool -> . operation EQUALS operation
    (29) bool -> . operation NOTEQUALS operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 68
    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    bool                           shift and go to state 96
    operation                      shift and go to state 70
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 69

    (52) ifelse -> IF LPAREN bool . RPAREN pexpression
    (53) ifelse -> IF LPAREN bool . RPAREN pexpression elif

    RPAREN          shift and go to state 97


state 70

    (24) bool -> operation . MORE operation
    (25) bool -> operation . LESS operation
    (26) bool -> operation . MOREOREQ operation
    (27) bool -> operation . LESSOREQ operation
    (28) bool -> operation . EQUALS operation
    (29) bool -> operation . NOTEQUALS operation
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    MORE            shift and go to state 98
    LESS            shift and go to state 99
    MOREOREQ        shift and go to state 100
    LESSOREQ        shift and go to state 101
    EQUALS          shift and go to state 102
    NOTEQUALS       shift and go to state 103
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 71

    (57) while -> WHILE LPAREN bool . RPAREN pexpression

    RPAREN          shift and go to state 104


state 72

    (30) assign -> object ASSIGN operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 30 (assign -> object ASSIGN operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 73

    (31) assign -> object ADDASSIGN operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 31 (assign -> object ADDASSIGN operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 74

    (32) assign -> object SUBASSIGN operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 32 (assign -> object SUBASSIGN operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 75

    (33) assign -> object MULASSIGN operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 33 (assign -> object MULASSIGN operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 76

    (34) assign -> object DIVASSIGN operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 34 (assign -> object DIVASSIGN operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 77

    (18) printable -> printable COMMA printable .
    (18) printable -> printable . COMMA printable

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 18 (printable -> printable COMMA printable .)
    COMMA           shift and go to state 47

  ! COMMA           [ reduce using rule 18 (printable -> printable COMMA printable .) ]


state 78

    (35) operation -> operation PLUS operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 35 (operation -> operation PLUS operation .)
    MINUS           reduce using rule 35 (operation -> operation PLUS operation .)
    TIMES           reduce using rule 35 (operation -> operation PLUS operation .)
    DIVIDE          reduce using rule 35 (operation -> operation PLUS operation .)
    DOTADD          reduce using rule 35 (operation -> operation PLUS operation .)
    DOTSUB          reduce using rule 35 (operation -> operation PLUS operation .)
    DOTMUL          reduce using rule 35 (operation -> operation PLUS operation .)
    DOTDIV          reduce using rule 35 (operation -> operation PLUS operation .)
    COMMA           reduce using rule 35 (operation -> operation PLUS operation .)
    SEMICOLON       reduce using rule 35 (operation -> operation PLUS operation .)
    MORE            reduce using rule 35 (operation -> operation PLUS operation .)
    LESS            reduce using rule 35 (operation -> operation PLUS operation .)
    MOREOREQ        reduce using rule 35 (operation -> operation PLUS operation .)
    LESSOREQ        reduce using rule 35 (operation -> operation PLUS operation .)
    EQUALS          reduce using rule 35 (operation -> operation PLUS operation .)
    NOTEQUALS       reduce using rule 35 (operation -> operation PLUS operation .)
    RPAREN          reduce using rule 35 (operation -> operation PLUS operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 35 (operation -> operation PLUS operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 79

    (36) operation -> operation MINUS operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 36 (operation -> operation MINUS operation .)
    MINUS           reduce using rule 36 (operation -> operation MINUS operation .)
    TIMES           reduce using rule 36 (operation -> operation MINUS operation .)
    DIVIDE          reduce using rule 36 (operation -> operation MINUS operation .)
    DOTADD          reduce using rule 36 (operation -> operation MINUS operation .)
    DOTSUB          reduce using rule 36 (operation -> operation MINUS operation .)
    DOTMUL          reduce using rule 36 (operation -> operation MINUS operation .)
    DOTDIV          reduce using rule 36 (operation -> operation MINUS operation .)
    COMMA           reduce using rule 36 (operation -> operation MINUS operation .)
    SEMICOLON       reduce using rule 36 (operation -> operation MINUS operation .)
    MORE            reduce using rule 36 (operation -> operation MINUS operation .)
    LESS            reduce using rule 36 (operation -> operation MINUS operation .)
    MOREOREQ        reduce using rule 36 (operation -> operation MINUS operation .)
    LESSOREQ        reduce using rule 36 (operation -> operation MINUS operation .)
    EQUALS          reduce using rule 36 (operation -> operation MINUS operation .)
    NOTEQUALS       reduce using rule 36 (operation -> operation MINUS operation .)
    RPAREN          reduce using rule 36 (operation -> operation MINUS operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 36 (operation -> operation MINUS operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 80

    (37) operation -> operation TIMES operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 37 (operation -> operation TIMES operation .)
    MINUS           reduce using rule 37 (operation -> operation TIMES operation .)
    TIMES           reduce using rule 37 (operation -> operation TIMES operation .)
    DIVIDE          reduce using rule 37 (operation -> operation TIMES operation .)
    DOTADD          reduce using rule 37 (operation -> operation TIMES operation .)
    DOTSUB          reduce using rule 37 (operation -> operation TIMES operation .)
    DOTMUL          reduce using rule 37 (operation -> operation TIMES operation .)
    DOTDIV          reduce using rule 37 (operation -> operation TIMES operation .)
    COMMA           reduce using rule 37 (operation -> operation TIMES operation .)
    SEMICOLON       reduce using rule 37 (operation -> operation TIMES operation .)
    MORE            reduce using rule 37 (operation -> operation TIMES operation .)
    LESS            reduce using rule 37 (operation -> operation TIMES operation .)
    MOREOREQ        reduce using rule 37 (operation -> operation TIMES operation .)
    LESSOREQ        reduce using rule 37 (operation -> operation TIMES operation .)
    EQUALS          reduce using rule 37 (operation -> operation TIMES operation .)
    NOTEQUALS       reduce using rule 37 (operation -> operation TIMES operation .)
    RPAREN          reduce using rule 37 (operation -> operation TIMES operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 37 (operation -> operation TIMES operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 81

    (38) operation -> operation DIVIDE operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 38 (operation -> operation DIVIDE operation .)
    MINUS           reduce using rule 38 (operation -> operation DIVIDE operation .)
    TIMES           reduce using rule 38 (operation -> operation DIVIDE operation .)
    DIVIDE          reduce using rule 38 (operation -> operation DIVIDE operation .)
    DOTADD          reduce using rule 38 (operation -> operation DIVIDE operation .)
    DOTSUB          reduce using rule 38 (operation -> operation DIVIDE operation .)
    DOTMUL          reduce using rule 38 (operation -> operation DIVIDE operation .)
    DOTDIV          reduce using rule 38 (operation -> operation DIVIDE operation .)
    COMMA           reduce using rule 38 (operation -> operation DIVIDE operation .)
    SEMICOLON       reduce using rule 38 (operation -> operation DIVIDE operation .)
    MORE            reduce using rule 38 (operation -> operation DIVIDE operation .)
    LESS            reduce using rule 38 (operation -> operation DIVIDE operation .)
    MOREOREQ        reduce using rule 38 (operation -> operation DIVIDE operation .)
    LESSOREQ        reduce using rule 38 (operation -> operation DIVIDE operation .)
    EQUALS          reduce using rule 38 (operation -> operation DIVIDE operation .)
    NOTEQUALS       reduce using rule 38 (operation -> operation DIVIDE operation .)
    RPAREN          reduce using rule 38 (operation -> operation DIVIDE operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 38 (operation -> operation DIVIDE operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 82

    (39) operation -> operation DOTADD operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 39 (operation -> operation DOTADD operation .)
    MINUS           reduce using rule 39 (operation -> operation DOTADD operation .)
    TIMES           reduce using rule 39 (operation -> operation DOTADD operation .)
    DIVIDE          reduce using rule 39 (operation -> operation DOTADD operation .)
    DOTADD          reduce using rule 39 (operation -> operation DOTADD operation .)
    DOTSUB          reduce using rule 39 (operation -> operation DOTADD operation .)
    DOTMUL          reduce using rule 39 (operation -> operation DOTADD operation .)
    DOTDIV          reduce using rule 39 (operation -> operation DOTADD operation .)
    COMMA           reduce using rule 39 (operation -> operation DOTADD operation .)
    SEMICOLON       reduce using rule 39 (operation -> operation DOTADD operation .)
    MORE            reduce using rule 39 (operation -> operation DOTADD operation .)
    LESS            reduce using rule 39 (operation -> operation DOTADD operation .)
    MOREOREQ        reduce using rule 39 (operation -> operation DOTADD operation .)
    LESSOREQ        reduce using rule 39 (operation -> operation DOTADD operation .)
    EQUALS          reduce using rule 39 (operation -> operation DOTADD operation .)
    NOTEQUALS       reduce using rule 39 (operation -> operation DOTADD operation .)
    RPAREN          reduce using rule 39 (operation -> operation DOTADD operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 39 (operation -> operation DOTADD operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 83

    (40) operation -> operation DOTSUB operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 40 (operation -> operation DOTSUB operation .)
    MINUS           reduce using rule 40 (operation -> operation DOTSUB operation .)
    TIMES           reduce using rule 40 (operation -> operation DOTSUB operation .)
    DIVIDE          reduce using rule 40 (operation -> operation DOTSUB operation .)
    DOTADD          reduce using rule 40 (operation -> operation DOTSUB operation .)
    DOTSUB          reduce using rule 40 (operation -> operation DOTSUB operation .)
    DOTMUL          reduce using rule 40 (operation -> operation DOTSUB operation .)
    DOTDIV          reduce using rule 40 (operation -> operation DOTSUB operation .)
    COMMA           reduce using rule 40 (operation -> operation DOTSUB operation .)
    SEMICOLON       reduce using rule 40 (operation -> operation DOTSUB operation .)
    MORE            reduce using rule 40 (operation -> operation DOTSUB operation .)
    LESS            reduce using rule 40 (operation -> operation DOTSUB operation .)
    MOREOREQ        reduce using rule 40 (operation -> operation DOTSUB operation .)
    LESSOREQ        reduce using rule 40 (operation -> operation DOTSUB operation .)
    EQUALS          reduce using rule 40 (operation -> operation DOTSUB operation .)
    NOTEQUALS       reduce using rule 40 (operation -> operation DOTSUB operation .)
    RPAREN          reduce using rule 40 (operation -> operation DOTSUB operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 40 (operation -> operation DOTSUB operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 84

    (41) operation -> operation DOTMUL operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 41 (operation -> operation DOTMUL operation .)
    MINUS           reduce using rule 41 (operation -> operation DOTMUL operation .)
    TIMES           reduce using rule 41 (operation -> operation DOTMUL operation .)
    DIVIDE          reduce using rule 41 (operation -> operation DOTMUL operation .)
    DOTADD          reduce using rule 41 (operation -> operation DOTMUL operation .)
    DOTSUB          reduce using rule 41 (operation -> operation DOTMUL operation .)
    DOTMUL          reduce using rule 41 (operation -> operation DOTMUL operation .)
    DOTDIV          reduce using rule 41 (operation -> operation DOTMUL operation .)
    COMMA           reduce using rule 41 (operation -> operation DOTMUL operation .)
    SEMICOLON       reduce using rule 41 (operation -> operation DOTMUL operation .)
    MORE            reduce using rule 41 (operation -> operation DOTMUL operation .)
    LESS            reduce using rule 41 (operation -> operation DOTMUL operation .)
    MOREOREQ        reduce using rule 41 (operation -> operation DOTMUL operation .)
    LESSOREQ        reduce using rule 41 (operation -> operation DOTMUL operation .)
    EQUALS          reduce using rule 41 (operation -> operation DOTMUL operation .)
    NOTEQUALS       reduce using rule 41 (operation -> operation DOTMUL operation .)
    RPAREN          reduce using rule 41 (operation -> operation DOTMUL operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 41 (operation -> operation DOTMUL operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 85

    (42) operation -> operation DOTDIV operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 42 (operation -> operation DOTDIV operation .)
    MINUS           reduce using rule 42 (operation -> operation DOTDIV operation .)
    TIMES           reduce using rule 42 (operation -> operation DOTDIV operation .)
    DIVIDE          reduce using rule 42 (operation -> operation DOTDIV operation .)
    DOTADD          reduce using rule 42 (operation -> operation DOTDIV operation .)
    DOTSUB          reduce using rule 42 (operation -> operation DOTDIV operation .)
    DOTMUL          reduce using rule 42 (operation -> operation DOTDIV operation .)
    DOTDIV          reduce using rule 42 (operation -> operation DOTDIV operation .)
    COMMA           reduce using rule 42 (operation -> operation DOTDIV operation .)
    SEMICOLON       reduce using rule 42 (operation -> operation DOTDIV operation .)
    MORE            reduce using rule 42 (operation -> operation DOTDIV operation .)
    LESS            reduce using rule 42 (operation -> operation DOTDIV operation .)
    MOREOREQ        reduce using rule 42 (operation -> operation DOTDIV operation .)
    LESSOREQ        reduce using rule 42 (operation -> operation DOTDIV operation .)
    EQUALS          reduce using rule 42 (operation -> operation DOTDIV operation .)
    NOTEQUALS       reduce using rule 42 (operation -> operation DOTDIV operation .)
    RPAREN          reduce using rule 42 (operation -> operation DOTDIV operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 42 (operation -> operation DOTDIV operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 86

    (45) operation -> EYE LPAREN operation . RPAREN
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          shift and go to state 105
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 87

    (46) operation -> ZEROS LPAREN operation . RPAREN
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          shift and go to state 106
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 88

    (47) operation -> ONES LPAREN operation . RPAREN
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          shift and go to state 107
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 89

    (58) matrix -> LSQUAR row RSQUAR .

    PLUS            reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)
    MINUS           reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)
    TIMES           reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)
    DIVIDE          reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)
    DOTADD          reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)
    DOTSUB          reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)
    DOTMUL          reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)
    DOTDIV          reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)
    TRANSPOSE       reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)
    COMMA           reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)
    SEMICOLON       reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)
    MORE            reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)
    LESS            reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)
    MOREOREQ        reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)
    LESSOREQ        reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)
    EQUALS          reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)
    NOTEQUALS       reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)
    RPAREN          reduce using rule 58 (matrix -> LSQUAR row RSQUAR .)


state 90

    (59) row -> row COMMA . vector
    (61) vector -> . LSQUAR elem RSQUAR

    LSQUAR          shift and go to state 37

    vector                         shift and go to state 108

state 91

    (17) for -> FOR ID ASSIGN forable . COLON forable pexpression

    COLON           shift and go to state 109


state 92

    (21) forable -> object .

    COLON           reduce using rule 21 (forable -> object .)
    LCURLY          reduce using rule 21 (forable -> object .)
    PRINT           reduce using rule 21 (forable -> object .)
    BREAK           reduce using rule 21 (forable -> object .)
    CONTINUE        reduce using rule 21 (forable -> object .)
    RETURN          reduce using rule 21 (forable -> object .)
    FOR             reduce using rule 21 (forable -> object .)
    IF              reduce using rule 21 (forable -> object .)
    WHILE           reduce using rule 21 (forable -> object .)
    ID              reduce using rule 21 (forable -> object .)


state 93

    (22) forable -> INT .

    COLON           reduce using rule 22 (forable -> INT .)
    LCURLY          reduce using rule 22 (forable -> INT .)
    PRINT           reduce using rule 22 (forable -> INT .)
    BREAK           reduce using rule 22 (forable -> INT .)
    CONTINUE        reduce using rule 22 (forable -> INT .)
    RETURN          reduce using rule 22 (forable -> INT .)
    FOR             reduce using rule 22 (forable -> INT .)
    IF              reduce using rule 22 (forable -> INT .)
    WHILE           reduce using rule 22 (forable -> INT .)
    ID              reduce using rule 22 (forable -> INT .)


state 94

    (61) vector -> LSQUAR elem RSQUAR .

    ASSIGN          reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    ADDASSIGN       reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    SUBASSIGN       reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    MULASSIGN       reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    DIVASSIGN       reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    PLUS            reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    MINUS           reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    TIMES           reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    DIVIDE          reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    DOTADD          reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    DOTSUB          reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    DOTMUL          reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    DOTDIV          reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    TRANSPOSE       reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    COMMA           reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    SEMICOLON       reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    MORE            reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    LESS            reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    MOREOREQ        reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    LESSOREQ        reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    EQUALS          reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    NOTEQUALS       reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    RPAREN          reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    COLON           reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    LCURLY          reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    PRINT           reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    BREAK           reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    CONTINUE        reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    RETURN          reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    FOR             reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    IF              reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    WHILE           reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    ID              reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)
    RSQUAR          reduce using rule 61 (vector -> LSQUAR elem RSQUAR .)


state 95

    (62) elem -> elem COMMA . num
    (64) num -> . INT
    (65) num -> . FLOAT

    INT             shift and go to state 66
    FLOAT           shift and go to state 67

    num                            shift and go to state 110

state 96

    (23) bool -> LPAREN bool . RPAREN

    RPAREN          shift and go to state 111


state 97

    (52) ifelse -> IF LPAREN bool RPAREN . pexpression
    (53) ifelse -> IF LPAREN bool RPAREN . pexpression elif
    (3) pexpression -> . LCURLY pexpression RCURLY
    (4) pexpression -> . LCURLY expression RCURLY
    (5) pexpression -> . line SEMICOLON
    (6) pexpression -> . for
    (7) pexpression -> . ifelse
    (8) pexpression -> . while
    (11) line -> . assign
    (12) line -> . PRINT printable
    (13) line -> . BREAK
    (14) line -> . CONTINUE
    (15) line -> . RETURN printable
    (16) line -> . RETURN
    (17) for -> . FOR ID ASSIGN forable COLON forable pexpression
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression elif
    (57) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (9) object -> . ID vector
    (10) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    pexpression                    shift and go to state 112
    line                           shift and go to state 4
    for                            shift and go to state 5
    ifelse                         shift and go to state 6
    while                          shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 98

    (24) bool -> operation MORE . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 113
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 99

    (25) bool -> operation LESS . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 114
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 100

    (26) bool -> operation MOREOREQ . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 115
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 101

    (27) bool -> operation LESSOREQ . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 116
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 102

    (28) bool -> operation EQUALS . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 117
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 103

    (29) bool -> operation NOTEQUALS . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    operation                      shift and go to state 118
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 104

    (57) while -> WHILE LPAREN bool RPAREN . pexpression
    (3) pexpression -> . LCURLY pexpression RCURLY
    (4) pexpression -> . LCURLY expression RCURLY
    (5) pexpression -> . line SEMICOLON
    (6) pexpression -> . for
    (7) pexpression -> . ifelse
    (8) pexpression -> . while
    (11) line -> . assign
    (12) line -> . PRINT printable
    (13) line -> . BREAK
    (14) line -> . CONTINUE
    (15) line -> . RETURN printable
    (16) line -> . RETURN
    (17) for -> . FOR ID ASSIGN forable COLON forable pexpression
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression elif
    (57) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (9) object -> . ID vector
    (10) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    pexpression                    shift and go to state 119
    line                           shift and go to state 4
    for                            shift and go to state 5
    ifelse                         shift and go to state 6
    while                          shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 105

    (45) operation -> EYE LPAREN operation RPAREN .

    PLUS            reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    MINUS           reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    TIMES           reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    DIVIDE          reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    DOTADD          reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    DOTSUB          reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    DOTMUL          reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    DOTDIV          reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    TRANSPOSE       reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    COMMA           reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    SEMICOLON       reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    MORE            reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    LESS            reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    MOREOREQ        reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    LESSOREQ        reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    EQUALS          reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    NOTEQUALS       reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    RPAREN          reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)


state 106

    (46) operation -> ZEROS LPAREN operation RPAREN .

    PLUS            reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    MINUS           reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    TIMES           reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    DIVIDE          reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    DOTADD          reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    DOTSUB          reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    DOTMUL          reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    DOTDIV          reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    TRANSPOSE       reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    COMMA           reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    SEMICOLON       reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    MORE            reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    LESS            reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    MOREOREQ        reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    LESSOREQ        reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    EQUALS          reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    NOTEQUALS       reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    RPAREN          reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)


state 107

    (47) operation -> ONES LPAREN operation RPAREN .

    PLUS            reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    MINUS           reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    TIMES           reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    DIVIDE          reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    DOTADD          reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    DOTSUB          reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    DOTMUL          reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    DOTDIV          reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    TRANSPOSE       reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    COMMA           reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    SEMICOLON       reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    MORE            reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    LESS            reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    MOREOREQ        reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    LESSOREQ        reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    EQUALS          reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    NOTEQUALS       reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    RPAREN          reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)


state 108

    (59) row -> row COMMA vector .

    RSQUAR          reduce using rule 59 (row -> row COMMA vector .)
    COMMA           reduce using rule 59 (row -> row COMMA vector .)


state 109

    (17) for -> FOR ID ASSIGN forable COLON . forable pexpression
    (21) forable -> . object
    (22) forable -> . INT
    (9) object -> . ID vector
    (10) object -> . ID

    INT             shift and go to state 93
    ID              shift and go to state 14

    forable                        shift and go to state 120
    object                         shift and go to state 92

state 110

    (62) elem -> elem COMMA num .

    RSQUAR          reduce using rule 62 (elem -> elem COMMA num .)
    COMMA           reduce using rule 62 (elem -> elem COMMA num .)


state 111

    (23) bool -> LPAREN bool RPAREN .

    RPAREN          reduce using rule 23 (bool -> LPAREN bool RPAREN .)


state 112

    (52) ifelse -> IF LPAREN bool RPAREN pexpression .
    (53) ifelse -> IF LPAREN bool RPAREN pexpression . elif
    (54) elif -> . ELSE IF LPAREN bool RPAREN pexpression elif
    (55) elif -> . ELSE IF LPAREN bool RPAREN pexpression
    (56) elif -> . ELSE pexpression

  ! shift/reduce conflict for ELSE resolved as shift
    LCURLY          reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    PRINT           reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    BREAK           reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    CONTINUE        reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    RETURN          reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    FOR             reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    IF              reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    WHILE           reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    ID              reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    $end            reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    RCURLY          reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    ELSE            shift and go to state 122

  ! ELSE            [ reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .) ]

    elif                           shift and go to state 121

state 113

    (24) bool -> operation MORE operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 24 (bool -> operation MORE operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 114

    (25) bool -> operation LESS operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 25 (bool -> operation LESS operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 115

    (26) bool -> operation MOREOREQ operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 26 (bool -> operation MOREOREQ operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 116

    (27) bool -> operation LESSOREQ operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 27 (bool -> operation LESSOREQ operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 117

    (28) bool -> operation EQUALS operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 28 (bool -> operation EQUALS operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 118

    (29) bool -> operation NOTEQUALS operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 29 (bool -> operation NOTEQUALS operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 119

    (57) while -> WHILE LPAREN bool RPAREN pexpression .

    LCURLY          reduce using rule 57 (while -> WHILE LPAREN bool RPAREN pexpression .)
    PRINT           reduce using rule 57 (while -> WHILE LPAREN bool RPAREN pexpression .)
    BREAK           reduce using rule 57 (while -> WHILE LPAREN bool RPAREN pexpression .)
    CONTINUE        reduce using rule 57 (while -> WHILE LPAREN bool RPAREN pexpression .)
    RETURN          reduce using rule 57 (while -> WHILE LPAREN bool RPAREN pexpression .)
    FOR             reduce using rule 57 (while -> WHILE LPAREN bool RPAREN pexpression .)
    IF              reduce using rule 57 (while -> WHILE LPAREN bool RPAREN pexpression .)
    WHILE           reduce using rule 57 (while -> WHILE LPAREN bool RPAREN pexpression .)
    ID              reduce using rule 57 (while -> WHILE LPAREN bool RPAREN pexpression .)
    $end            reduce using rule 57 (while -> WHILE LPAREN bool RPAREN pexpression .)
    RCURLY          reduce using rule 57 (while -> WHILE LPAREN bool RPAREN pexpression .)
    ELSE            reduce using rule 57 (while -> WHILE LPAREN bool RPAREN pexpression .)


state 120

    (17) for -> FOR ID ASSIGN forable COLON forable . pexpression
    (3) pexpression -> . LCURLY pexpression RCURLY
    (4) pexpression -> . LCURLY expression RCURLY
    (5) pexpression -> . line SEMICOLON
    (6) pexpression -> . for
    (7) pexpression -> . ifelse
    (8) pexpression -> . while
    (11) line -> . assign
    (12) line -> . PRINT printable
    (13) line -> . BREAK
    (14) line -> . CONTINUE
    (15) line -> . RETURN printable
    (16) line -> . RETURN
    (17) for -> . FOR ID ASSIGN forable COLON forable pexpression
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression elif
    (57) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (9) object -> . ID vector
    (10) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    pexpression                    shift and go to state 123
    line                           shift and go to state 4
    for                            shift and go to state 5
    ifelse                         shift and go to state 6
    while                          shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 121

    (53) ifelse -> IF LPAREN bool RPAREN pexpression elif .

    LCURLY          reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    PRINT           reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    BREAK           reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    CONTINUE        reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    RETURN          reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    FOR             reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    IF              reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    WHILE           reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    ID              reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    $end            reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    RCURLY          reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    ELSE            reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)


state 122

    (54) elif -> ELSE . IF LPAREN bool RPAREN pexpression elif
    (55) elif -> ELSE . IF LPAREN bool RPAREN pexpression
    (56) elif -> ELSE . pexpression
    (3) pexpression -> . LCURLY pexpression RCURLY
    (4) pexpression -> . LCURLY expression RCURLY
    (5) pexpression -> . line SEMICOLON
    (6) pexpression -> . for
    (7) pexpression -> . ifelse
    (8) pexpression -> . while
    (11) line -> . assign
    (12) line -> . PRINT printable
    (13) line -> . BREAK
    (14) line -> . CONTINUE
    (15) line -> . RETURN printable
    (16) line -> . RETURN
    (17) for -> . FOR ID ASSIGN forable COLON forable pexpression
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression elif
    (57) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (9) object -> . ID vector
    (10) object -> . ID

    IF              shift and go to state 124
    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    pexpression                    shift and go to state 125
    line                           shift and go to state 4
    for                            shift and go to state 5
    ifelse                         shift and go to state 6
    while                          shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 123

    (17) for -> FOR ID ASSIGN forable COLON forable pexpression .

    LCURLY          reduce using rule 17 (for -> FOR ID ASSIGN forable COLON forable pexpression .)
    PRINT           reduce using rule 17 (for -> FOR ID ASSIGN forable COLON forable pexpression .)
    BREAK           reduce using rule 17 (for -> FOR ID ASSIGN forable COLON forable pexpression .)
    CONTINUE        reduce using rule 17 (for -> FOR ID ASSIGN forable COLON forable pexpression .)
    RETURN          reduce using rule 17 (for -> FOR ID ASSIGN forable COLON forable pexpression .)
    FOR             reduce using rule 17 (for -> FOR ID ASSIGN forable COLON forable pexpression .)
    IF              reduce using rule 17 (for -> FOR ID ASSIGN forable COLON forable pexpression .)
    WHILE           reduce using rule 17 (for -> FOR ID ASSIGN forable COLON forable pexpression .)
    ID              reduce using rule 17 (for -> FOR ID ASSIGN forable COLON forable pexpression .)
    $end            reduce using rule 17 (for -> FOR ID ASSIGN forable COLON forable pexpression .)
    RCURLY          reduce using rule 17 (for -> FOR ID ASSIGN forable COLON forable pexpression .)
    ELSE            reduce using rule 17 (for -> FOR ID ASSIGN forable COLON forable pexpression .)


state 124

    (54) elif -> ELSE IF . LPAREN bool RPAREN pexpression elif
    (55) elif -> ELSE IF . LPAREN bool RPAREN pexpression
    (52) ifelse -> IF . LPAREN bool RPAREN pexpression
    (53) ifelse -> IF . LPAREN bool RPAREN pexpression elif

    LPAREN          shift and go to state 126


state 125

    (56) elif -> ELSE pexpression .

    ELSE            reduce using rule 56 (elif -> ELSE pexpression .)
    LCURLY          reduce using rule 56 (elif -> ELSE pexpression .)
    PRINT           reduce using rule 56 (elif -> ELSE pexpression .)
    BREAK           reduce using rule 56 (elif -> ELSE pexpression .)
    CONTINUE        reduce using rule 56 (elif -> ELSE pexpression .)
    RETURN          reduce using rule 56 (elif -> ELSE pexpression .)
    FOR             reduce using rule 56 (elif -> ELSE pexpression .)
    IF              reduce using rule 56 (elif -> ELSE pexpression .)
    WHILE           reduce using rule 56 (elif -> ELSE pexpression .)
    ID              reduce using rule 56 (elif -> ELSE pexpression .)
    $end            reduce using rule 56 (elif -> ELSE pexpression .)
    RCURLY          reduce using rule 56 (elif -> ELSE pexpression .)


state 126

    (54) elif -> ELSE IF LPAREN . bool RPAREN pexpression elif
    (55) elif -> ELSE IF LPAREN . bool RPAREN pexpression
    (52) ifelse -> IF LPAREN . bool RPAREN pexpression
    (53) ifelse -> IF LPAREN . bool RPAREN pexpression elif
    (23) bool -> . LPAREN bool RPAREN
    (24) bool -> . operation MORE operation
    (25) bool -> . operation LESS operation
    (26) bool -> . operation MOREOREQ operation
    (27) bool -> . operation LESSOREQ operation
    (28) bool -> . operation EQUALS operation
    (29) bool -> . operation NOTEQUALS operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (9) object -> . ID vector
    (10) object -> . ID
    (58) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 68
    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    FLOAT           shift and go to state 30
    INT             shift and go to state 31
    ID              shift and go to state 14
    LSQUAR          shift and go to state 33

    bool                           shift and go to state 127
    operation                      shift and go to state 70
    object                         shift and go to state 29
    matrix                         shift and go to state 32

state 127

    (54) elif -> ELSE IF LPAREN bool . RPAREN pexpression elif
    (55) elif -> ELSE IF LPAREN bool . RPAREN pexpression
    (52) ifelse -> IF LPAREN bool . RPAREN pexpression
    (53) ifelse -> IF LPAREN bool . RPAREN pexpression elif

    RPAREN          shift and go to state 128


state 128

    (54) elif -> ELSE IF LPAREN bool RPAREN . pexpression elif
    (55) elif -> ELSE IF LPAREN bool RPAREN . pexpression
    (52) ifelse -> IF LPAREN bool RPAREN . pexpression
    (53) ifelse -> IF LPAREN bool RPAREN . pexpression elif
    (3) pexpression -> . LCURLY pexpression RCURLY
    (4) pexpression -> . LCURLY expression RCURLY
    (5) pexpression -> . line SEMICOLON
    (6) pexpression -> . for
    (7) pexpression -> . ifelse
    (8) pexpression -> . while
    (11) line -> . assign
    (12) line -> . PRINT printable
    (13) line -> . BREAK
    (14) line -> . CONTINUE
    (15) line -> . RETURN printable
    (16) line -> . RETURN
    (17) for -> . FOR ID ASSIGN forable COLON forable pexpression
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression elif
    (57) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (9) object -> . ID vector
    (10) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    pexpression                    shift and go to state 129
    line                           shift and go to state 4
    for                            shift and go to state 5
    ifelse                         shift and go to state 6
    while                          shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 129

    (54) elif -> ELSE IF LPAREN bool RPAREN pexpression . elif
    (55) elif -> ELSE IF LPAREN bool RPAREN pexpression .
    (52) ifelse -> IF LPAREN bool RPAREN pexpression .
    (53) ifelse -> IF LPAREN bool RPAREN pexpression . elif
    (54) elif -> . ELSE IF LPAREN bool RPAREN pexpression elif
    (55) elif -> . ELSE IF LPAREN bool RPAREN pexpression
    (56) elif -> . ELSE pexpression

  ! reduce/reduce conflict for ELSE resolved using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
  ! reduce/reduce conflict for LCURLY resolved using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
  ! reduce/reduce conflict for PRINT resolved using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
  ! reduce/reduce conflict for BREAK resolved using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
  ! reduce/reduce conflict for RETURN resolved using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
  ! reduce/reduce conflict for FOR resolved using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
  ! reduce/reduce conflict for IF resolved using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
  ! reduce/reduce conflict for WHILE resolved using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
  ! reduce/reduce conflict for ID resolved using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
  ! reduce/reduce conflict for $end resolved using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
  ! reduce/reduce conflict for RCURLY resolved using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
  ! shift/reduce conflict for ELSE resolved as shift
    LCURLY          reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    PRINT           reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    BREAK           reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    CONTINUE        reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    RETURN          reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    FOR             reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    IF              reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    WHILE           reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    ID              reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    $end            reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    RCURLY          reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    ELSE            shift and go to state 122

  ! ELSE            [ reduce using rule 55 (elif -> ELSE IF LPAREN bool RPAREN pexpression .) ]
  ! LCURLY          [ reduce using rule 55 (elif -> ELSE IF LPAREN bool RPAREN pexpression .) ]
  ! PRINT           [ reduce using rule 55 (elif -> ELSE IF LPAREN bool RPAREN pexpression .) ]
  ! BREAK           [ reduce using rule 55 (elif -> ELSE IF LPAREN bool RPAREN pexpression .) ]
  ! CONTINUE        [ reduce using rule 55 (elif -> ELSE IF LPAREN bool RPAREN pexpression .) ]
  ! RETURN          [ reduce using rule 55 (elif -> ELSE IF LPAREN bool RPAREN pexpression .) ]
  ! FOR             [ reduce using rule 55 (elif -> ELSE IF LPAREN bool RPAREN pexpression .) ]
  ! IF              [ reduce using rule 55 (elif -> ELSE IF LPAREN bool RPAREN pexpression .) ]
  ! WHILE           [ reduce using rule 55 (elif -> ELSE IF LPAREN bool RPAREN pexpression .) ]
  ! ID              [ reduce using rule 55 (elif -> ELSE IF LPAREN bool RPAREN pexpression .) ]
  ! $end            [ reduce using rule 55 (elif -> ELSE IF LPAREN bool RPAREN pexpression .) ]
  ! RCURLY          [ reduce using rule 55 (elif -> ELSE IF LPAREN bool RPAREN pexpression .) ]
  ! ELSE            [ reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .) ]

    elif                           shift and go to state 130

state 130

    (54) elif -> ELSE IF LPAREN bool RPAREN pexpression elif .
    (53) ifelse -> IF LPAREN bool RPAREN pexpression elif .

  ! reduce/reduce conflict for ELSE resolved using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
  ! reduce/reduce conflict for LCURLY resolved using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
  ! reduce/reduce conflict for PRINT resolved using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
  ! reduce/reduce conflict for BREAK resolved using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
  ! reduce/reduce conflict for RETURN resolved using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
  ! reduce/reduce conflict for FOR resolved using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
  ! reduce/reduce conflict for IF resolved using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
  ! reduce/reduce conflict for WHILE resolved using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
  ! reduce/reduce conflict for ID resolved using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
  ! reduce/reduce conflict for $end resolved using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
  ! reduce/reduce conflict for RCURLY resolved using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    ELSE            reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    LCURLY          reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    PRINT           reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    BREAK           reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    CONTINUE        reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    RETURN          reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    FOR             reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    IF              reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    WHILE           reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    ID              reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    $end            reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)
    RCURLY          reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression elif .)

  ! ELSE            [ reduce using rule 54 (elif -> ELSE IF LPAREN bool RPAREN pexpression elif .) ]
  ! LCURLY          [ reduce using rule 54 (elif -> ELSE IF LPAREN bool RPAREN pexpression elif .) ]
  ! PRINT           [ reduce using rule 54 (elif -> ELSE IF LPAREN bool RPAREN pexpression elif .) ]
  ! BREAK           [ reduce using rule 54 (elif -> ELSE IF LPAREN bool RPAREN pexpression elif .) ]
  ! CONTINUE        [ reduce using rule 54 (elif -> ELSE IF LPAREN bool RPAREN pexpression elif .) ]
  ! RETURN          [ reduce using rule 54 (elif -> ELSE IF LPAREN bool RPAREN pexpression elif .) ]
  ! FOR             [ reduce using rule 54 (elif -> ELSE IF LPAREN bool RPAREN pexpression elif .) ]
  ! IF              [ reduce using rule 54 (elif -> ELSE IF LPAREN bool RPAREN pexpression elif .) ]
  ! WHILE           [ reduce using rule 54 (elif -> ELSE IF LPAREN bool RPAREN pexpression elif .) ]
  ! ID              [ reduce using rule 54 (elif -> ELSE IF LPAREN bool RPAREN pexpression elif .) ]
  ! $end            [ reduce using rule 54 (elif -> ELSE IF LPAREN bool RPAREN pexpression elif .) ]
  ! RCURLY          [ reduce using rule 54 (elif -> ELSE IF LPAREN bool RPAREN pexpression elif .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LCURLY in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 18 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 18 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 18 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 18 resolved as shift
WARNING: shift/reduce conflict for FOR in state 18 resolved as shift
WARNING: shift/reduce conflict for IF in state 18 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 18 resolved as shift
WARNING: shift/reduce conflict for ID in state 18 resolved as shift
WARNING: shift/reduce conflict for RCURLY in state 19 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 77 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 112 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 129 resolved as shift
WARNING: reduce/reduce conflict in state 129 resolved using rule (ifelse -> IF LPAREN bool RPAREN pexpression)
WARNING: rejected rule (elif -> ELSE IF LPAREN bool RPAREN pexpression) in state 129
WARNING: reduce/reduce conflict in state 130 resolved using rule (ifelse -> IF LPAREN bool RPAREN pexpression elif)
WARNING: rejected rule (elif -> ELSE IF LPAREN bool RPAREN pexpression elif) in state 130
WARNING: Rule (elif -> ELSE IF LPAREN bool RPAREN pexpression) is never reduced
WARNING: Rule (elif -> ELSE IF LPAREN bool RPAREN pexpression elif) is never reduced
