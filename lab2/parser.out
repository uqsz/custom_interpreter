Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> line SEMICOLON
Rule 2     expression -> expression expression
Rule 3     expression -> LCURLY expression RCURLY
Rule 4     expression -> ifelse
Rule 5     expression -> while
Rule 6     pexpression -> LCURLY pexpression RCURLY
Rule 7     pexpression -> LCURLY expression RCURLY
Rule 8     pexpression -> line SEMICOLON
Rule 9     pexpression -> for
Rule 10    object -> ID vector
Rule 11    object -> ID
Rule 12    line -> assign
Rule 13    line -> PRINT printable
Rule 14    line -> BREAK
Rule 15    line -> CONTINUE
Rule 16    line -> RETURN
Rule 17    for -> FOR ID EQUALS forable COLON pexpression
Rule 18    printable -> printable COMMA printable
Rule 19    printable -> operation
Rule 20    printable -> STRING
Rule 21    forable -> object
Rule 22    forable -> INT
Rule 23    bool -> LPAREN bool RPAREN
Rule 24    bool -> operation MORE operation
Rule 25    bool -> operation LESS operation
Rule 26    bool -> operation MOREOREQ operation
Rule 27    bool -> operation LESSOREQ operation
Rule 28    bool -> operation EQUALS operation
Rule 29    bool -> operation NOTEQUALS operation
Rule 30    assign -> object ASSIGN operation
Rule 31    assign -> object ADDASSIGN operation
Rule 32    assign -> object SUBASSIGN operation
Rule 33    assign -> object MULASSIGN operation
Rule 34    assign -> object DIVASSIGN operation
Rule 35    operation -> operation PLUS operation
Rule 36    operation -> operation MINUS operation
Rule 37    operation -> operation TIMES operation
Rule 38    operation -> operation DIVIDE operation
Rule 39    operation -> operation DOTADD operation
Rule 40    operation -> operation DOTSUB operation
Rule 41    operation -> operation DOTMUL operation
Rule 42    operation -> operation DOTDIV operation
Rule 43    operation -> MINUS operation
Rule 44    operation -> operation TRANSPOSE
Rule 45    operation -> EYE LPAREN operation RPAREN
Rule 46    operation -> ZEROS LPAREN operation RPAREN
Rule 47    operation -> ONES LPAREN operation RPAREN
Rule 48    operation -> object
Rule 49    operation -> FLOAT
Rule 50    operation -> INT
Rule 51    operation -> matrix
Rule 52    ifelse -> IF LPAREN bool RPAREN pexpression
Rule 53    ifelse -> IF LPAREN bool RPAREN pexpression ELSE pexpression
Rule 54    while -> WHILE LPAREN bool RPAREN pexpression
Rule 55    matrix -> LSQUAR row RSQUAR
Rule 56    row -> row COMMA vector
Rule 57    row -> vector
Rule 58    vector -> LSQUAR elem RSQUAR
Rule 59    elem -> elem COMMA num
Rule 60    elem -> num
Rule 61    num -> INT
Rule 62    num -> FLOAT

Terminals, with rules where they appear

ADDASSIGN            : 31
ASSIGN               : 30
BREAK                : 14
COLON                : 17
COMMA                : 18 56 59
CONTINUE             : 15
DIVASSIGN            : 34
DIVIDE               : 38
DOTADD               : 39
DOTDIV               : 42
DOTMUL               : 41
DOTSUB               : 40
ELSE                 : 53
EQUALS               : 17 28
EYE                  : 45
FLOAT                : 49 62
FOR                  : 17
ID                   : 10 11 17
IF                   : 52 53
INT                  : 22 50 61
LCURLY               : 3 6 7
LESS                 : 25
LESSOREQ             : 27
LPAREN               : 23 45 46 47 52 53 54
LSQUAR               : 55 58
MINUS                : 36 43
MORE                 : 24
MOREOREQ             : 26
MULASSIGN            : 33
NOTEQUALS            : 29
ONES                 : 47
PLUS                 : 35
PRINT                : 13
RCURLY               : 3 6 7
RETURN               : 16
RPAREN               : 23 45 46 47 52 53 54
RSQUAR               : 55 58
SEMICOLON            : 1 8
STRING               : 20
SUBASSIGN            : 32
TIMES                : 37
TRANSPOSE            : 44
WHILE                : 54
ZEROS                : 46
error                : 

Nonterminals, with rules where they appear

assign               : 12
bool                 : 23 52 53 54
elem                 : 58 59
expression           : 2 2 3 7 0
for                  : 9
forable              : 17
ifelse               : 4
line                 : 1 8
matrix               : 51
num                  : 59 60
object               : 21 30 31 32 33 34 48
operation            : 19 24 24 25 25 26 26 27 27 28 28 29 29 30 31 32 33 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 44 45 46 47
pexpression          : 6 17 52 53 53 54
printable            : 13 18 18
row                  : 55 56
vector               : 10 56 57
while                : 5

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . line SEMICOLON
    (2) expression -> . expression expression
    (3) expression -> . LCURLY expression RCURLY
    (4) expression -> . ifelse
    (5) expression -> . while
    (12) line -> . assign
    (13) line -> . PRINT printable
    (14) line -> . BREAK
    (15) line -> . CONTINUE
    (16) line -> . RETURN
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression ELSE pexpression
    (54) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (10) object -> . ID vector
    (11) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    ID              shift and go to state 14

    expression                     shift and go to state 1
    line                           shift and go to state 2
    ifelse                         shift and go to state 4
    while                          shift and go to state 5
    assign                         shift and go to state 6
    object                         shift and go to state 13

state 1

    (0) S' -> expression .
    (2) expression -> expression . expression
    (1) expression -> . line SEMICOLON
    (2) expression -> . expression expression
    (3) expression -> . LCURLY expression RCURLY
    (4) expression -> . ifelse
    (5) expression -> . while
    (12) line -> . assign
    (13) line -> . PRINT printable
    (14) line -> . BREAK
    (15) line -> . CONTINUE
    (16) line -> . RETURN
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression ELSE pexpression
    (54) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (10) object -> . ID vector
    (11) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    ID              shift and go to state 14

    expression                     shift and go to state 15
    line                           shift and go to state 2
    ifelse                         shift and go to state 4
    while                          shift and go to state 5
    assign                         shift and go to state 6
    object                         shift and go to state 13

state 2

    (1) expression -> line . SEMICOLON

    SEMICOLON       shift and go to state 16


state 3

    (3) expression -> LCURLY . expression RCURLY
    (1) expression -> . line SEMICOLON
    (2) expression -> . expression expression
    (3) expression -> . LCURLY expression RCURLY
    (4) expression -> . ifelse
    (5) expression -> . while
    (12) line -> . assign
    (13) line -> . PRINT printable
    (14) line -> . BREAK
    (15) line -> . CONTINUE
    (16) line -> . RETURN
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression ELSE pexpression
    (54) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (10) object -> . ID vector
    (11) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    ID              shift and go to state 14

    expression                     shift and go to state 17
    line                           shift and go to state 2
    ifelse                         shift and go to state 4
    while                          shift and go to state 5
    assign                         shift and go to state 6
    object                         shift and go to state 13

state 4

    (4) expression -> ifelse .

    LCURLY          reduce using rule 4 (expression -> ifelse .)
    PRINT           reduce using rule 4 (expression -> ifelse .)
    BREAK           reduce using rule 4 (expression -> ifelse .)
    CONTINUE        reduce using rule 4 (expression -> ifelse .)
    RETURN          reduce using rule 4 (expression -> ifelse .)
    IF              reduce using rule 4 (expression -> ifelse .)
    WHILE           reduce using rule 4 (expression -> ifelse .)
    ID              reduce using rule 4 (expression -> ifelse .)
    $end            reduce using rule 4 (expression -> ifelse .)
    RCURLY          reduce using rule 4 (expression -> ifelse .)


state 5

    (5) expression -> while .

    LCURLY          reduce using rule 5 (expression -> while .)
    PRINT           reduce using rule 5 (expression -> while .)
    BREAK           reduce using rule 5 (expression -> while .)
    CONTINUE        reduce using rule 5 (expression -> while .)
    RETURN          reduce using rule 5 (expression -> while .)
    IF              reduce using rule 5 (expression -> while .)
    WHILE           reduce using rule 5 (expression -> while .)
    ID              reduce using rule 5 (expression -> while .)
    $end            reduce using rule 5 (expression -> while .)
    RCURLY          reduce using rule 5 (expression -> while .)


state 6

    (12) line -> assign .

    SEMICOLON       reduce using rule 12 (line -> assign .)


state 7

    (13) line -> PRINT . printable
    (18) printable -> . printable COMMA printable
    (19) printable -> . operation
    (20) printable -> . STRING
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    STRING          shift and go to state 20
    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    printable                      shift and go to state 18
    operation                      shift and go to state 19
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 8

    (14) line -> BREAK .

    SEMICOLON       reduce using rule 14 (line -> BREAK .)


state 9

    (15) line -> CONTINUE .

    SEMICOLON       reduce using rule 15 (line -> CONTINUE .)


state 10

    (16) line -> RETURN .

    SEMICOLON       reduce using rule 16 (line -> RETURN .)


state 11

    (52) ifelse -> IF . LPAREN bool RPAREN pexpression
    (53) ifelse -> IF . LPAREN bool RPAREN pexpression ELSE pexpression

    LPAREN          shift and go to state 30


state 12

    (54) while -> WHILE . LPAREN bool RPAREN pexpression

    LPAREN          shift and go to state 31


state 13

    (30) assign -> object . ASSIGN operation
    (31) assign -> object . ADDASSIGN operation
    (32) assign -> object . SUBASSIGN operation
    (33) assign -> object . MULASSIGN operation
    (34) assign -> object . DIVASSIGN operation

    ASSIGN          shift and go to state 32
    ADDASSIGN       shift and go to state 33
    SUBASSIGN       shift and go to state 34
    MULASSIGN       shift and go to state 35
    DIVASSIGN       shift and go to state 36


state 14

    (10) object -> ID . vector
    (11) object -> ID .
    (58) vector -> . LSQUAR elem RSQUAR

    ASSIGN          reduce using rule 11 (object -> ID .)
    ADDASSIGN       reduce using rule 11 (object -> ID .)
    SUBASSIGN       reduce using rule 11 (object -> ID .)
    MULASSIGN       reduce using rule 11 (object -> ID .)
    DIVASSIGN       reduce using rule 11 (object -> ID .)
    PLUS            reduce using rule 11 (object -> ID .)
    MINUS           reduce using rule 11 (object -> ID .)
    TIMES           reduce using rule 11 (object -> ID .)
    DIVIDE          reduce using rule 11 (object -> ID .)
    DOTADD          reduce using rule 11 (object -> ID .)
    DOTSUB          reduce using rule 11 (object -> ID .)
    DOTMUL          reduce using rule 11 (object -> ID .)
    DOTDIV          reduce using rule 11 (object -> ID .)
    TRANSPOSE       reduce using rule 11 (object -> ID .)
    COMMA           reduce using rule 11 (object -> ID .)
    SEMICOLON       reduce using rule 11 (object -> ID .)
    MORE            reduce using rule 11 (object -> ID .)
    LESS            reduce using rule 11 (object -> ID .)
    MOREOREQ        reduce using rule 11 (object -> ID .)
    LESSOREQ        reduce using rule 11 (object -> ID .)
    EQUALS          reduce using rule 11 (object -> ID .)
    NOTEQUALS       reduce using rule 11 (object -> ID .)
    RPAREN          reduce using rule 11 (object -> ID .)
    COLON           reduce using rule 11 (object -> ID .)
    LSQUAR          shift and go to state 38

    vector                         shift and go to state 37

state 15

    (2) expression -> expression expression .
    (2) expression -> expression . expression
    (1) expression -> . line SEMICOLON
    (2) expression -> . expression expression
    (3) expression -> . LCURLY expression RCURLY
    (4) expression -> . ifelse
    (5) expression -> . while
    (12) line -> . assign
    (13) line -> . PRINT printable
    (14) line -> . BREAK
    (15) line -> . CONTINUE
    (16) line -> . RETURN
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression ELSE pexpression
    (54) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (10) object -> . ID vector
    (11) object -> . ID

  ! shift/reduce conflict for LCURLY resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    $end            reduce using rule 2 (expression -> expression expression .)
    RCURLY          reduce using rule 2 (expression -> expression expression .)
    LCURLY          shift and go to state 3
    PRINT           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    ID              shift and go to state 14

  ! LCURLY          [ reduce using rule 2 (expression -> expression expression .) ]
  ! PRINT           [ reduce using rule 2 (expression -> expression expression .) ]
  ! BREAK           [ reduce using rule 2 (expression -> expression expression .) ]
  ! CONTINUE        [ reduce using rule 2 (expression -> expression expression .) ]
  ! RETURN          [ reduce using rule 2 (expression -> expression expression .) ]
  ! IF              [ reduce using rule 2 (expression -> expression expression .) ]
  ! WHILE           [ reduce using rule 2 (expression -> expression expression .) ]
  ! ID              [ reduce using rule 2 (expression -> expression expression .) ]

    expression                     shift and go to state 15
    line                           shift and go to state 2
    ifelse                         shift and go to state 4
    while                          shift and go to state 5
    assign                         shift and go to state 6
    object                         shift and go to state 13

state 16

    (1) expression -> line SEMICOLON .

    LCURLY          reduce using rule 1 (expression -> line SEMICOLON .)
    PRINT           reduce using rule 1 (expression -> line SEMICOLON .)
    BREAK           reduce using rule 1 (expression -> line SEMICOLON .)
    CONTINUE        reduce using rule 1 (expression -> line SEMICOLON .)
    RETURN          reduce using rule 1 (expression -> line SEMICOLON .)
    IF              reduce using rule 1 (expression -> line SEMICOLON .)
    WHILE           reduce using rule 1 (expression -> line SEMICOLON .)
    ID              reduce using rule 1 (expression -> line SEMICOLON .)
    $end            reduce using rule 1 (expression -> line SEMICOLON .)
    RCURLY          reduce using rule 1 (expression -> line SEMICOLON .)


state 17

    (3) expression -> LCURLY expression . RCURLY
    (2) expression -> expression . expression
    (1) expression -> . line SEMICOLON
    (2) expression -> . expression expression
    (3) expression -> . LCURLY expression RCURLY
    (4) expression -> . ifelse
    (5) expression -> . while
    (12) line -> . assign
    (13) line -> . PRINT printable
    (14) line -> . BREAK
    (15) line -> . CONTINUE
    (16) line -> . RETURN
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression ELSE pexpression
    (54) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (10) object -> . ID vector
    (11) object -> . ID

    RCURLY          shift and go to state 39
    LCURLY          shift and go to state 3
    PRINT           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    ID              shift and go to state 14

    expression                     shift and go to state 15
    line                           shift and go to state 2
    ifelse                         shift and go to state 4
    while                          shift and go to state 5
    assign                         shift and go to state 6
    object                         shift and go to state 13

state 18

    (13) line -> PRINT printable .
    (18) printable -> printable . COMMA printable

    SEMICOLON       reduce using rule 13 (line -> PRINT printable .)
    COMMA           shift and go to state 40


state 19

    (19) printable -> operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    COMMA           reduce using rule 19 (printable -> operation .)
    SEMICOLON       reduce using rule 19 (printable -> operation .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    DOTADD          shift and go to state 45
    DOTSUB          shift and go to state 46
    DOTMUL          shift and go to state 47
    DOTDIV          shift and go to state 48
    TRANSPOSE       shift and go to state 49


state 20

    (20) printable -> STRING .

    COMMA           reduce using rule 20 (printable -> STRING .)
    SEMICOLON       reduce using rule 20 (printable -> STRING .)


state 21

    (43) operation -> MINUS . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 50
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 22

    (45) operation -> EYE . LPAREN operation RPAREN

    LPAREN          shift and go to state 51


state 23

    (46) operation -> ZEROS . LPAREN operation RPAREN

    LPAREN          shift and go to state 52


state 24

    (47) operation -> ONES . LPAREN operation RPAREN

    LPAREN          shift and go to state 53


state 25

    (48) operation -> object .

    PLUS            reduce using rule 48 (operation -> object .)
    MINUS           reduce using rule 48 (operation -> object .)
    TIMES           reduce using rule 48 (operation -> object .)
    DIVIDE          reduce using rule 48 (operation -> object .)
    DOTADD          reduce using rule 48 (operation -> object .)
    DOTSUB          reduce using rule 48 (operation -> object .)
    DOTMUL          reduce using rule 48 (operation -> object .)
    DOTDIV          reduce using rule 48 (operation -> object .)
    TRANSPOSE       reduce using rule 48 (operation -> object .)
    COMMA           reduce using rule 48 (operation -> object .)
    SEMICOLON       reduce using rule 48 (operation -> object .)
    MORE            reduce using rule 48 (operation -> object .)
    LESS            reduce using rule 48 (operation -> object .)
    MOREOREQ        reduce using rule 48 (operation -> object .)
    LESSOREQ        reduce using rule 48 (operation -> object .)
    EQUALS          reduce using rule 48 (operation -> object .)
    NOTEQUALS       reduce using rule 48 (operation -> object .)
    RPAREN          reduce using rule 48 (operation -> object .)


state 26

    (49) operation -> FLOAT .

    PLUS            reduce using rule 49 (operation -> FLOAT .)
    MINUS           reduce using rule 49 (operation -> FLOAT .)
    TIMES           reduce using rule 49 (operation -> FLOAT .)
    DIVIDE          reduce using rule 49 (operation -> FLOAT .)
    DOTADD          reduce using rule 49 (operation -> FLOAT .)
    DOTSUB          reduce using rule 49 (operation -> FLOAT .)
    DOTMUL          reduce using rule 49 (operation -> FLOAT .)
    DOTDIV          reduce using rule 49 (operation -> FLOAT .)
    TRANSPOSE       reduce using rule 49 (operation -> FLOAT .)
    COMMA           reduce using rule 49 (operation -> FLOAT .)
    SEMICOLON       reduce using rule 49 (operation -> FLOAT .)
    MORE            reduce using rule 49 (operation -> FLOAT .)
    LESS            reduce using rule 49 (operation -> FLOAT .)
    MOREOREQ        reduce using rule 49 (operation -> FLOAT .)
    LESSOREQ        reduce using rule 49 (operation -> FLOAT .)
    EQUALS          reduce using rule 49 (operation -> FLOAT .)
    NOTEQUALS       reduce using rule 49 (operation -> FLOAT .)
    RPAREN          reduce using rule 49 (operation -> FLOAT .)


state 27

    (50) operation -> INT .

    PLUS            reduce using rule 50 (operation -> INT .)
    MINUS           reduce using rule 50 (operation -> INT .)
    TIMES           reduce using rule 50 (operation -> INT .)
    DIVIDE          reduce using rule 50 (operation -> INT .)
    DOTADD          reduce using rule 50 (operation -> INT .)
    DOTSUB          reduce using rule 50 (operation -> INT .)
    DOTMUL          reduce using rule 50 (operation -> INT .)
    DOTDIV          reduce using rule 50 (operation -> INT .)
    TRANSPOSE       reduce using rule 50 (operation -> INT .)
    COMMA           reduce using rule 50 (operation -> INT .)
    SEMICOLON       reduce using rule 50 (operation -> INT .)
    MORE            reduce using rule 50 (operation -> INT .)
    LESS            reduce using rule 50 (operation -> INT .)
    MOREOREQ        reduce using rule 50 (operation -> INT .)
    LESSOREQ        reduce using rule 50 (operation -> INT .)
    EQUALS          reduce using rule 50 (operation -> INT .)
    NOTEQUALS       reduce using rule 50 (operation -> INT .)
    RPAREN          reduce using rule 50 (operation -> INT .)


state 28

    (51) operation -> matrix .

    PLUS            reduce using rule 51 (operation -> matrix .)
    MINUS           reduce using rule 51 (operation -> matrix .)
    TIMES           reduce using rule 51 (operation -> matrix .)
    DIVIDE          reduce using rule 51 (operation -> matrix .)
    DOTADD          reduce using rule 51 (operation -> matrix .)
    DOTSUB          reduce using rule 51 (operation -> matrix .)
    DOTMUL          reduce using rule 51 (operation -> matrix .)
    DOTDIV          reduce using rule 51 (operation -> matrix .)
    TRANSPOSE       reduce using rule 51 (operation -> matrix .)
    COMMA           reduce using rule 51 (operation -> matrix .)
    SEMICOLON       reduce using rule 51 (operation -> matrix .)
    MORE            reduce using rule 51 (operation -> matrix .)
    LESS            reduce using rule 51 (operation -> matrix .)
    MOREOREQ        reduce using rule 51 (operation -> matrix .)
    LESSOREQ        reduce using rule 51 (operation -> matrix .)
    EQUALS          reduce using rule 51 (operation -> matrix .)
    NOTEQUALS       reduce using rule 51 (operation -> matrix .)
    RPAREN          reduce using rule 51 (operation -> matrix .)


state 29

    (55) matrix -> LSQUAR . row RSQUAR
    (56) row -> . row COMMA vector
    (57) row -> . vector
    (58) vector -> . LSQUAR elem RSQUAR

    LSQUAR          shift and go to state 38

    row                            shift and go to state 54
    vector                         shift and go to state 55

state 30

    (52) ifelse -> IF LPAREN . bool RPAREN pexpression
    (53) ifelse -> IF LPAREN . bool RPAREN pexpression ELSE pexpression
    (23) bool -> . LPAREN bool RPAREN
    (24) bool -> . operation MORE operation
    (25) bool -> . operation LESS operation
    (26) bool -> . operation MOREOREQ operation
    (27) bool -> . operation LESSOREQ operation
    (28) bool -> . operation EQUALS operation
    (29) bool -> . operation NOTEQUALS operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 56
    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    bool                           shift and go to state 57
    operation                      shift and go to state 58
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 31

    (54) while -> WHILE LPAREN . bool RPAREN pexpression
    (23) bool -> . LPAREN bool RPAREN
    (24) bool -> . operation MORE operation
    (25) bool -> . operation LESS operation
    (26) bool -> . operation MOREOREQ operation
    (27) bool -> . operation LESSOREQ operation
    (28) bool -> . operation EQUALS operation
    (29) bool -> . operation NOTEQUALS operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 56
    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    bool                           shift and go to state 59
    operation                      shift and go to state 58
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 32

    (30) assign -> object ASSIGN . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    object                         shift and go to state 25
    operation                      shift and go to state 60
    matrix                         shift and go to state 28

state 33

    (31) assign -> object ADDASSIGN . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    object                         shift and go to state 25
    operation                      shift and go to state 61
    matrix                         shift and go to state 28

state 34

    (32) assign -> object SUBASSIGN . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    object                         shift and go to state 25
    operation                      shift and go to state 62
    matrix                         shift and go to state 28

state 35

    (33) assign -> object MULASSIGN . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    object                         shift and go to state 25
    operation                      shift and go to state 63
    matrix                         shift and go to state 28

state 36

    (34) assign -> object DIVASSIGN . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    object                         shift and go to state 25
    operation                      shift and go to state 64
    matrix                         shift and go to state 28

state 37

    (10) object -> ID vector .

    ASSIGN          reduce using rule 10 (object -> ID vector .)
    ADDASSIGN       reduce using rule 10 (object -> ID vector .)
    SUBASSIGN       reduce using rule 10 (object -> ID vector .)
    MULASSIGN       reduce using rule 10 (object -> ID vector .)
    DIVASSIGN       reduce using rule 10 (object -> ID vector .)
    PLUS            reduce using rule 10 (object -> ID vector .)
    MINUS           reduce using rule 10 (object -> ID vector .)
    TIMES           reduce using rule 10 (object -> ID vector .)
    DIVIDE          reduce using rule 10 (object -> ID vector .)
    DOTADD          reduce using rule 10 (object -> ID vector .)
    DOTSUB          reduce using rule 10 (object -> ID vector .)
    DOTMUL          reduce using rule 10 (object -> ID vector .)
    DOTDIV          reduce using rule 10 (object -> ID vector .)
    TRANSPOSE       reduce using rule 10 (object -> ID vector .)
    COMMA           reduce using rule 10 (object -> ID vector .)
    SEMICOLON       reduce using rule 10 (object -> ID vector .)
    MORE            reduce using rule 10 (object -> ID vector .)
    LESS            reduce using rule 10 (object -> ID vector .)
    MOREOREQ        reduce using rule 10 (object -> ID vector .)
    LESSOREQ        reduce using rule 10 (object -> ID vector .)
    EQUALS          reduce using rule 10 (object -> ID vector .)
    NOTEQUALS       reduce using rule 10 (object -> ID vector .)
    RPAREN          reduce using rule 10 (object -> ID vector .)
    COLON           reduce using rule 10 (object -> ID vector .)


state 38

    (58) vector -> LSQUAR . elem RSQUAR
    (59) elem -> . elem COMMA num
    (60) elem -> . num
    (61) num -> . INT
    (62) num -> . FLOAT

    INT             shift and go to state 67
    FLOAT           shift and go to state 68

    elem                           shift and go to state 65
    num                            shift and go to state 66

state 39

    (3) expression -> LCURLY expression RCURLY .

    LCURLY          reduce using rule 3 (expression -> LCURLY expression RCURLY .)
    PRINT           reduce using rule 3 (expression -> LCURLY expression RCURLY .)
    BREAK           reduce using rule 3 (expression -> LCURLY expression RCURLY .)
    CONTINUE        reduce using rule 3 (expression -> LCURLY expression RCURLY .)
    RETURN          reduce using rule 3 (expression -> LCURLY expression RCURLY .)
    IF              reduce using rule 3 (expression -> LCURLY expression RCURLY .)
    WHILE           reduce using rule 3 (expression -> LCURLY expression RCURLY .)
    ID              reduce using rule 3 (expression -> LCURLY expression RCURLY .)
    $end            reduce using rule 3 (expression -> LCURLY expression RCURLY .)
    RCURLY          reduce using rule 3 (expression -> LCURLY expression RCURLY .)


state 40

    (18) printable -> printable COMMA . printable
    (18) printable -> . printable COMMA printable
    (19) printable -> . operation
    (20) printable -> . STRING
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    STRING          shift and go to state 20
    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    printable                      shift and go to state 69
    operation                      shift and go to state 19
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 41

    (35) operation -> operation PLUS . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 70
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 42

    (36) operation -> operation MINUS . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 71
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 43

    (37) operation -> operation TIMES . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 72
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 44

    (38) operation -> operation DIVIDE . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 73
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 45

    (39) operation -> operation DOTADD . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 74
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 46

    (40) operation -> operation DOTSUB . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 75
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 47

    (41) operation -> operation DOTMUL . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 76
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 48

    (42) operation -> operation DOTDIV . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 77
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 49

    (44) operation -> operation TRANSPOSE .

    PLUS            reduce using rule 44 (operation -> operation TRANSPOSE .)
    MINUS           reduce using rule 44 (operation -> operation TRANSPOSE .)
    TIMES           reduce using rule 44 (operation -> operation TRANSPOSE .)
    DIVIDE          reduce using rule 44 (operation -> operation TRANSPOSE .)
    DOTADD          reduce using rule 44 (operation -> operation TRANSPOSE .)
    DOTSUB          reduce using rule 44 (operation -> operation TRANSPOSE .)
    DOTMUL          reduce using rule 44 (operation -> operation TRANSPOSE .)
    DOTDIV          reduce using rule 44 (operation -> operation TRANSPOSE .)
    TRANSPOSE       reduce using rule 44 (operation -> operation TRANSPOSE .)
    COMMA           reduce using rule 44 (operation -> operation TRANSPOSE .)
    SEMICOLON       reduce using rule 44 (operation -> operation TRANSPOSE .)
    MORE            reduce using rule 44 (operation -> operation TRANSPOSE .)
    LESS            reduce using rule 44 (operation -> operation TRANSPOSE .)
    MOREOREQ        reduce using rule 44 (operation -> operation TRANSPOSE .)
    LESSOREQ        reduce using rule 44 (operation -> operation TRANSPOSE .)
    EQUALS          reduce using rule 44 (operation -> operation TRANSPOSE .)
    NOTEQUALS       reduce using rule 44 (operation -> operation TRANSPOSE .)
    RPAREN          reduce using rule 44 (operation -> operation TRANSPOSE .)


state 50

    (43) operation -> MINUS operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 43 (operation -> MINUS operation .)
    MINUS           reduce using rule 43 (operation -> MINUS operation .)
    TIMES           reduce using rule 43 (operation -> MINUS operation .)
    DIVIDE          reduce using rule 43 (operation -> MINUS operation .)
    DOTADD          reduce using rule 43 (operation -> MINUS operation .)
    DOTSUB          reduce using rule 43 (operation -> MINUS operation .)
    DOTMUL          reduce using rule 43 (operation -> MINUS operation .)
    DOTDIV          reduce using rule 43 (operation -> MINUS operation .)
    COMMA           reduce using rule 43 (operation -> MINUS operation .)
    SEMICOLON       reduce using rule 43 (operation -> MINUS operation .)
    MORE            reduce using rule 43 (operation -> MINUS operation .)
    LESS            reduce using rule 43 (operation -> MINUS operation .)
    MOREOREQ        reduce using rule 43 (operation -> MINUS operation .)
    LESSOREQ        reduce using rule 43 (operation -> MINUS operation .)
    EQUALS          reduce using rule 43 (operation -> MINUS operation .)
    NOTEQUALS       reduce using rule 43 (operation -> MINUS operation .)
    RPAREN          reduce using rule 43 (operation -> MINUS operation .)
    TRANSPOSE       shift and go to state 49

  ! TRANSPOSE       [ reduce using rule 43 (operation -> MINUS operation .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]
  ! DOTADD          [ shift and go to state 45 ]
  ! DOTSUB          [ shift and go to state 46 ]
  ! DOTMUL          [ shift and go to state 47 ]
  ! DOTDIV          [ shift and go to state 48 ]


state 51

    (45) operation -> EYE LPAREN . operation RPAREN
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 78
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 52

    (46) operation -> ZEROS LPAREN . operation RPAREN
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 79
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 53

    (47) operation -> ONES LPAREN . operation RPAREN
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 80
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 54

    (55) matrix -> LSQUAR row . RSQUAR
    (56) row -> row . COMMA vector

    RSQUAR          shift and go to state 81
    COMMA           shift and go to state 82


state 55

    (57) row -> vector .

    RSQUAR          reduce using rule 57 (row -> vector .)
    COMMA           reduce using rule 57 (row -> vector .)


state 56

    (23) bool -> LPAREN . bool RPAREN
    (23) bool -> . LPAREN bool RPAREN
    (24) bool -> . operation MORE operation
    (25) bool -> . operation LESS operation
    (26) bool -> . operation MOREOREQ operation
    (27) bool -> . operation LESSOREQ operation
    (28) bool -> . operation EQUALS operation
    (29) bool -> . operation NOTEQUALS operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 56
    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    bool                           shift and go to state 83
    operation                      shift and go to state 58
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 57

    (52) ifelse -> IF LPAREN bool . RPAREN pexpression
    (53) ifelse -> IF LPAREN bool . RPAREN pexpression ELSE pexpression

    RPAREN          shift and go to state 84


state 58

    (24) bool -> operation . MORE operation
    (25) bool -> operation . LESS operation
    (26) bool -> operation . MOREOREQ operation
    (27) bool -> operation . LESSOREQ operation
    (28) bool -> operation . EQUALS operation
    (29) bool -> operation . NOTEQUALS operation
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    MORE            shift and go to state 85
    LESS            shift and go to state 86
    MOREOREQ        shift and go to state 87
    LESSOREQ        shift and go to state 88
    EQUALS          shift and go to state 89
    NOTEQUALS       shift and go to state 90
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    DOTADD          shift and go to state 45
    DOTSUB          shift and go to state 46
    DOTMUL          shift and go to state 47
    DOTDIV          shift and go to state 48
    TRANSPOSE       shift and go to state 49


state 59

    (54) while -> WHILE LPAREN bool . RPAREN pexpression

    RPAREN          shift and go to state 91


state 60

    (30) assign -> object ASSIGN operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 30 (assign -> object ASSIGN operation .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    DOTADD          shift and go to state 45
    DOTSUB          shift and go to state 46
    DOTMUL          shift and go to state 47
    DOTDIV          shift and go to state 48
    TRANSPOSE       shift and go to state 49


state 61

    (31) assign -> object ADDASSIGN operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 31 (assign -> object ADDASSIGN operation .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    DOTADD          shift and go to state 45
    DOTSUB          shift and go to state 46
    DOTMUL          shift and go to state 47
    DOTDIV          shift and go to state 48
    TRANSPOSE       shift and go to state 49


state 62

    (32) assign -> object SUBASSIGN operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 32 (assign -> object SUBASSIGN operation .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    DOTADD          shift and go to state 45
    DOTSUB          shift and go to state 46
    DOTMUL          shift and go to state 47
    DOTDIV          shift and go to state 48
    TRANSPOSE       shift and go to state 49


state 63

    (33) assign -> object MULASSIGN operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 33 (assign -> object MULASSIGN operation .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    DOTADD          shift and go to state 45
    DOTSUB          shift and go to state 46
    DOTMUL          shift and go to state 47
    DOTDIV          shift and go to state 48
    TRANSPOSE       shift and go to state 49


state 64

    (34) assign -> object DIVASSIGN operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 34 (assign -> object DIVASSIGN operation .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    DOTADD          shift and go to state 45
    DOTSUB          shift and go to state 46
    DOTMUL          shift and go to state 47
    DOTDIV          shift and go to state 48
    TRANSPOSE       shift and go to state 49


state 65

    (58) vector -> LSQUAR elem . RSQUAR
    (59) elem -> elem . COMMA num

    RSQUAR          shift and go to state 92
    COMMA           shift and go to state 93


state 66

    (60) elem -> num .

    RSQUAR          reduce using rule 60 (elem -> num .)
    COMMA           reduce using rule 60 (elem -> num .)


state 67

    (61) num -> INT .

    RSQUAR          reduce using rule 61 (num -> INT .)
    COMMA           reduce using rule 61 (num -> INT .)


state 68

    (62) num -> FLOAT .

    RSQUAR          reduce using rule 62 (num -> FLOAT .)
    COMMA           reduce using rule 62 (num -> FLOAT .)


state 69

    (18) printable -> printable COMMA printable .
    (18) printable -> printable . COMMA printable

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 18 (printable -> printable COMMA printable .)
    COMMA           shift and go to state 40

  ! COMMA           [ reduce using rule 18 (printable -> printable COMMA printable .) ]


state 70

    (35) operation -> operation PLUS operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 35 (operation -> operation PLUS operation .)
    MINUS           reduce using rule 35 (operation -> operation PLUS operation .)
    TIMES           reduce using rule 35 (operation -> operation PLUS operation .)
    DIVIDE          reduce using rule 35 (operation -> operation PLUS operation .)
    DOTADD          reduce using rule 35 (operation -> operation PLUS operation .)
    DOTSUB          reduce using rule 35 (operation -> operation PLUS operation .)
    DOTMUL          reduce using rule 35 (operation -> operation PLUS operation .)
    DOTDIV          reduce using rule 35 (operation -> operation PLUS operation .)
    COMMA           reduce using rule 35 (operation -> operation PLUS operation .)
    SEMICOLON       reduce using rule 35 (operation -> operation PLUS operation .)
    MORE            reduce using rule 35 (operation -> operation PLUS operation .)
    LESS            reduce using rule 35 (operation -> operation PLUS operation .)
    MOREOREQ        reduce using rule 35 (operation -> operation PLUS operation .)
    LESSOREQ        reduce using rule 35 (operation -> operation PLUS operation .)
    EQUALS          reduce using rule 35 (operation -> operation PLUS operation .)
    NOTEQUALS       reduce using rule 35 (operation -> operation PLUS operation .)
    RPAREN          reduce using rule 35 (operation -> operation PLUS operation .)
    TRANSPOSE       shift and go to state 49

  ! TRANSPOSE       [ reduce using rule 35 (operation -> operation PLUS operation .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]
  ! DOTADD          [ shift and go to state 45 ]
  ! DOTSUB          [ shift and go to state 46 ]
  ! DOTMUL          [ shift and go to state 47 ]
  ! DOTDIV          [ shift and go to state 48 ]


state 71

    (36) operation -> operation MINUS operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 36 (operation -> operation MINUS operation .)
    MINUS           reduce using rule 36 (operation -> operation MINUS operation .)
    TIMES           reduce using rule 36 (operation -> operation MINUS operation .)
    DIVIDE          reduce using rule 36 (operation -> operation MINUS operation .)
    DOTADD          reduce using rule 36 (operation -> operation MINUS operation .)
    DOTSUB          reduce using rule 36 (operation -> operation MINUS operation .)
    DOTMUL          reduce using rule 36 (operation -> operation MINUS operation .)
    DOTDIV          reduce using rule 36 (operation -> operation MINUS operation .)
    COMMA           reduce using rule 36 (operation -> operation MINUS operation .)
    SEMICOLON       reduce using rule 36 (operation -> operation MINUS operation .)
    MORE            reduce using rule 36 (operation -> operation MINUS operation .)
    LESS            reduce using rule 36 (operation -> operation MINUS operation .)
    MOREOREQ        reduce using rule 36 (operation -> operation MINUS operation .)
    LESSOREQ        reduce using rule 36 (operation -> operation MINUS operation .)
    EQUALS          reduce using rule 36 (operation -> operation MINUS operation .)
    NOTEQUALS       reduce using rule 36 (operation -> operation MINUS operation .)
    RPAREN          reduce using rule 36 (operation -> operation MINUS operation .)
    TRANSPOSE       shift and go to state 49

  ! TRANSPOSE       [ reduce using rule 36 (operation -> operation MINUS operation .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]
  ! DOTADD          [ shift and go to state 45 ]
  ! DOTSUB          [ shift and go to state 46 ]
  ! DOTMUL          [ shift and go to state 47 ]
  ! DOTDIV          [ shift and go to state 48 ]


state 72

    (37) operation -> operation TIMES operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 37 (operation -> operation TIMES operation .)
    MINUS           reduce using rule 37 (operation -> operation TIMES operation .)
    TIMES           reduce using rule 37 (operation -> operation TIMES operation .)
    DIVIDE          reduce using rule 37 (operation -> operation TIMES operation .)
    DOTADD          reduce using rule 37 (operation -> operation TIMES operation .)
    DOTSUB          reduce using rule 37 (operation -> operation TIMES operation .)
    DOTMUL          reduce using rule 37 (operation -> operation TIMES operation .)
    DOTDIV          reduce using rule 37 (operation -> operation TIMES operation .)
    COMMA           reduce using rule 37 (operation -> operation TIMES operation .)
    SEMICOLON       reduce using rule 37 (operation -> operation TIMES operation .)
    MORE            reduce using rule 37 (operation -> operation TIMES operation .)
    LESS            reduce using rule 37 (operation -> operation TIMES operation .)
    MOREOREQ        reduce using rule 37 (operation -> operation TIMES operation .)
    LESSOREQ        reduce using rule 37 (operation -> operation TIMES operation .)
    EQUALS          reduce using rule 37 (operation -> operation TIMES operation .)
    NOTEQUALS       reduce using rule 37 (operation -> operation TIMES operation .)
    RPAREN          reduce using rule 37 (operation -> operation TIMES operation .)
    TRANSPOSE       shift and go to state 49

  ! TRANSPOSE       [ reduce using rule 37 (operation -> operation TIMES operation .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]
  ! DOTADD          [ shift and go to state 45 ]
  ! DOTSUB          [ shift and go to state 46 ]
  ! DOTMUL          [ shift and go to state 47 ]
  ! DOTDIV          [ shift and go to state 48 ]


state 73

    (38) operation -> operation DIVIDE operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 38 (operation -> operation DIVIDE operation .)
    MINUS           reduce using rule 38 (operation -> operation DIVIDE operation .)
    TIMES           reduce using rule 38 (operation -> operation DIVIDE operation .)
    DIVIDE          reduce using rule 38 (operation -> operation DIVIDE operation .)
    DOTADD          reduce using rule 38 (operation -> operation DIVIDE operation .)
    DOTSUB          reduce using rule 38 (operation -> operation DIVIDE operation .)
    DOTMUL          reduce using rule 38 (operation -> operation DIVIDE operation .)
    DOTDIV          reduce using rule 38 (operation -> operation DIVIDE operation .)
    COMMA           reduce using rule 38 (operation -> operation DIVIDE operation .)
    SEMICOLON       reduce using rule 38 (operation -> operation DIVIDE operation .)
    MORE            reduce using rule 38 (operation -> operation DIVIDE operation .)
    LESS            reduce using rule 38 (operation -> operation DIVIDE operation .)
    MOREOREQ        reduce using rule 38 (operation -> operation DIVIDE operation .)
    LESSOREQ        reduce using rule 38 (operation -> operation DIVIDE operation .)
    EQUALS          reduce using rule 38 (operation -> operation DIVIDE operation .)
    NOTEQUALS       reduce using rule 38 (operation -> operation DIVIDE operation .)
    RPAREN          reduce using rule 38 (operation -> operation DIVIDE operation .)
    TRANSPOSE       shift and go to state 49

  ! TRANSPOSE       [ reduce using rule 38 (operation -> operation DIVIDE operation .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]
  ! DOTADD          [ shift and go to state 45 ]
  ! DOTSUB          [ shift and go to state 46 ]
  ! DOTMUL          [ shift and go to state 47 ]
  ! DOTDIV          [ shift and go to state 48 ]


state 74

    (39) operation -> operation DOTADD operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 39 (operation -> operation DOTADD operation .)
    MINUS           reduce using rule 39 (operation -> operation DOTADD operation .)
    TIMES           reduce using rule 39 (operation -> operation DOTADD operation .)
    DIVIDE          reduce using rule 39 (operation -> operation DOTADD operation .)
    DOTADD          reduce using rule 39 (operation -> operation DOTADD operation .)
    DOTSUB          reduce using rule 39 (operation -> operation DOTADD operation .)
    DOTMUL          reduce using rule 39 (operation -> operation DOTADD operation .)
    DOTDIV          reduce using rule 39 (operation -> operation DOTADD operation .)
    COMMA           reduce using rule 39 (operation -> operation DOTADD operation .)
    SEMICOLON       reduce using rule 39 (operation -> operation DOTADD operation .)
    MORE            reduce using rule 39 (operation -> operation DOTADD operation .)
    LESS            reduce using rule 39 (operation -> operation DOTADD operation .)
    MOREOREQ        reduce using rule 39 (operation -> operation DOTADD operation .)
    LESSOREQ        reduce using rule 39 (operation -> operation DOTADD operation .)
    EQUALS          reduce using rule 39 (operation -> operation DOTADD operation .)
    NOTEQUALS       reduce using rule 39 (operation -> operation DOTADD operation .)
    RPAREN          reduce using rule 39 (operation -> operation DOTADD operation .)
    TRANSPOSE       shift and go to state 49

  ! TRANSPOSE       [ reduce using rule 39 (operation -> operation DOTADD operation .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]
  ! DOTADD          [ shift and go to state 45 ]
  ! DOTSUB          [ shift and go to state 46 ]
  ! DOTMUL          [ shift and go to state 47 ]
  ! DOTDIV          [ shift and go to state 48 ]


state 75

    (40) operation -> operation DOTSUB operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 40 (operation -> operation DOTSUB operation .)
    MINUS           reduce using rule 40 (operation -> operation DOTSUB operation .)
    TIMES           reduce using rule 40 (operation -> operation DOTSUB operation .)
    DIVIDE          reduce using rule 40 (operation -> operation DOTSUB operation .)
    DOTADD          reduce using rule 40 (operation -> operation DOTSUB operation .)
    DOTSUB          reduce using rule 40 (operation -> operation DOTSUB operation .)
    DOTMUL          reduce using rule 40 (operation -> operation DOTSUB operation .)
    DOTDIV          reduce using rule 40 (operation -> operation DOTSUB operation .)
    COMMA           reduce using rule 40 (operation -> operation DOTSUB operation .)
    SEMICOLON       reduce using rule 40 (operation -> operation DOTSUB operation .)
    MORE            reduce using rule 40 (operation -> operation DOTSUB operation .)
    LESS            reduce using rule 40 (operation -> operation DOTSUB operation .)
    MOREOREQ        reduce using rule 40 (operation -> operation DOTSUB operation .)
    LESSOREQ        reduce using rule 40 (operation -> operation DOTSUB operation .)
    EQUALS          reduce using rule 40 (operation -> operation DOTSUB operation .)
    NOTEQUALS       reduce using rule 40 (operation -> operation DOTSUB operation .)
    RPAREN          reduce using rule 40 (operation -> operation DOTSUB operation .)
    TRANSPOSE       shift and go to state 49

  ! TRANSPOSE       [ reduce using rule 40 (operation -> operation DOTSUB operation .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]
  ! DOTADD          [ shift and go to state 45 ]
  ! DOTSUB          [ shift and go to state 46 ]
  ! DOTMUL          [ shift and go to state 47 ]
  ! DOTDIV          [ shift and go to state 48 ]


state 76

    (41) operation -> operation DOTMUL operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 41 (operation -> operation DOTMUL operation .)
    MINUS           reduce using rule 41 (operation -> operation DOTMUL operation .)
    TIMES           reduce using rule 41 (operation -> operation DOTMUL operation .)
    DIVIDE          reduce using rule 41 (operation -> operation DOTMUL operation .)
    DOTADD          reduce using rule 41 (operation -> operation DOTMUL operation .)
    DOTSUB          reduce using rule 41 (operation -> operation DOTMUL operation .)
    DOTMUL          reduce using rule 41 (operation -> operation DOTMUL operation .)
    DOTDIV          reduce using rule 41 (operation -> operation DOTMUL operation .)
    COMMA           reduce using rule 41 (operation -> operation DOTMUL operation .)
    SEMICOLON       reduce using rule 41 (operation -> operation DOTMUL operation .)
    MORE            reduce using rule 41 (operation -> operation DOTMUL operation .)
    LESS            reduce using rule 41 (operation -> operation DOTMUL operation .)
    MOREOREQ        reduce using rule 41 (operation -> operation DOTMUL operation .)
    LESSOREQ        reduce using rule 41 (operation -> operation DOTMUL operation .)
    EQUALS          reduce using rule 41 (operation -> operation DOTMUL operation .)
    NOTEQUALS       reduce using rule 41 (operation -> operation DOTMUL operation .)
    RPAREN          reduce using rule 41 (operation -> operation DOTMUL operation .)
    TRANSPOSE       shift and go to state 49

  ! TRANSPOSE       [ reduce using rule 41 (operation -> operation DOTMUL operation .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]
  ! DOTADD          [ shift and go to state 45 ]
  ! DOTSUB          [ shift and go to state 46 ]
  ! DOTMUL          [ shift and go to state 47 ]
  ! DOTDIV          [ shift and go to state 48 ]


state 77

    (42) operation -> operation DOTDIV operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 42 (operation -> operation DOTDIV operation .)
    MINUS           reduce using rule 42 (operation -> operation DOTDIV operation .)
    TIMES           reduce using rule 42 (operation -> operation DOTDIV operation .)
    DIVIDE          reduce using rule 42 (operation -> operation DOTDIV operation .)
    DOTADD          reduce using rule 42 (operation -> operation DOTDIV operation .)
    DOTSUB          reduce using rule 42 (operation -> operation DOTDIV operation .)
    DOTMUL          reduce using rule 42 (operation -> operation DOTDIV operation .)
    DOTDIV          reduce using rule 42 (operation -> operation DOTDIV operation .)
    COMMA           reduce using rule 42 (operation -> operation DOTDIV operation .)
    SEMICOLON       reduce using rule 42 (operation -> operation DOTDIV operation .)
    MORE            reduce using rule 42 (operation -> operation DOTDIV operation .)
    LESS            reduce using rule 42 (operation -> operation DOTDIV operation .)
    MOREOREQ        reduce using rule 42 (operation -> operation DOTDIV operation .)
    LESSOREQ        reduce using rule 42 (operation -> operation DOTDIV operation .)
    EQUALS          reduce using rule 42 (operation -> operation DOTDIV operation .)
    NOTEQUALS       reduce using rule 42 (operation -> operation DOTDIV operation .)
    RPAREN          reduce using rule 42 (operation -> operation DOTDIV operation .)
    TRANSPOSE       shift and go to state 49

  ! TRANSPOSE       [ reduce using rule 42 (operation -> operation DOTDIV operation .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]
  ! DOTADD          [ shift and go to state 45 ]
  ! DOTSUB          [ shift and go to state 46 ]
  ! DOTMUL          [ shift and go to state 47 ]
  ! DOTDIV          [ shift and go to state 48 ]


state 78

    (45) operation -> EYE LPAREN operation . RPAREN
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          shift and go to state 94
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    DOTADD          shift and go to state 45
    DOTSUB          shift and go to state 46
    DOTMUL          shift and go to state 47
    DOTDIV          shift and go to state 48
    TRANSPOSE       shift and go to state 49


state 79

    (46) operation -> ZEROS LPAREN operation . RPAREN
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          shift and go to state 95
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    DOTADD          shift and go to state 45
    DOTSUB          shift and go to state 46
    DOTMUL          shift and go to state 47
    DOTDIV          shift and go to state 48
    TRANSPOSE       shift and go to state 49


state 80

    (47) operation -> ONES LPAREN operation . RPAREN
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          shift and go to state 96
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    DOTADD          shift and go to state 45
    DOTSUB          shift and go to state 46
    DOTMUL          shift and go to state 47
    DOTDIV          shift and go to state 48
    TRANSPOSE       shift and go to state 49


state 81

    (55) matrix -> LSQUAR row RSQUAR .

    PLUS            reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)
    MINUS           reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)
    TIMES           reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)
    DIVIDE          reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)
    DOTADD          reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)
    DOTSUB          reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)
    DOTMUL          reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)
    DOTDIV          reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)
    TRANSPOSE       reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)
    COMMA           reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)
    SEMICOLON       reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)
    MORE            reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)
    LESS            reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)
    MOREOREQ        reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)
    LESSOREQ        reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)
    EQUALS          reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)
    NOTEQUALS       reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)
    RPAREN          reduce using rule 55 (matrix -> LSQUAR row RSQUAR .)


state 82

    (56) row -> row COMMA . vector
    (58) vector -> . LSQUAR elem RSQUAR

    LSQUAR          shift and go to state 38

    vector                         shift and go to state 97

state 83

    (23) bool -> LPAREN bool . RPAREN

    RPAREN          shift and go to state 98


state 84

    (52) ifelse -> IF LPAREN bool RPAREN . pexpression
    (53) ifelse -> IF LPAREN bool RPAREN . pexpression ELSE pexpression
    (6) pexpression -> . LCURLY pexpression RCURLY
    (7) pexpression -> . LCURLY expression RCURLY
    (8) pexpression -> . line SEMICOLON
    (9) pexpression -> . for
    (12) line -> . assign
    (13) line -> . PRINT printable
    (14) line -> . BREAK
    (15) line -> . CONTINUE
    (16) line -> . RETURN
    (17) for -> . FOR ID EQUALS forable COLON pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (10) object -> . ID vector
    (11) object -> . ID

    LCURLY          shift and go to state 100
    PRINT           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 103
    ID              shift and go to state 14

    pexpression                    shift and go to state 99
    line                           shift and go to state 101
    for                            shift and go to state 102
    assign                         shift and go to state 6
    object                         shift and go to state 13

state 85

    (24) bool -> operation MORE . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 104
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 86

    (25) bool -> operation LESS . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 105
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 87

    (26) bool -> operation MOREOREQ . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 106
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 88

    (27) bool -> operation LESSOREQ . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 107
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 89

    (28) bool -> operation EQUALS . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 108
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 90

    (29) bool -> operation NOTEQUALS . operation
    (35) operation -> . operation PLUS operation
    (36) operation -> . operation MINUS operation
    (37) operation -> . operation TIMES operation
    (38) operation -> . operation DIVIDE operation
    (39) operation -> . operation DOTADD operation
    (40) operation -> . operation DOTSUB operation
    (41) operation -> . operation DOTMUL operation
    (42) operation -> . operation DOTDIV operation
    (43) operation -> . MINUS operation
    (44) operation -> . operation TRANSPOSE
    (45) operation -> . EYE LPAREN operation RPAREN
    (46) operation -> . ZEROS LPAREN operation RPAREN
    (47) operation -> . ONES LPAREN operation RPAREN
    (48) operation -> . object
    (49) operation -> . FLOAT
    (50) operation -> . INT
    (51) operation -> . matrix
    (10) object -> . ID vector
    (11) object -> . ID
    (55) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 21
    EYE             shift and go to state 22
    ZEROS           shift and go to state 23
    ONES            shift and go to state 24
    FLOAT           shift and go to state 26
    INT             shift and go to state 27
    ID              shift and go to state 14
    LSQUAR          shift and go to state 29

    operation                      shift and go to state 109
    object                         shift and go to state 25
    matrix                         shift and go to state 28

state 91

    (54) while -> WHILE LPAREN bool RPAREN . pexpression
    (6) pexpression -> . LCURLY pexpression RCURLY
    (7) pexpression -> . LCURLY expression RCURLY
    (8) pexpression -> . line SEMICOLON
    (9) pexpression -> . for
    (12) line -> . assign
    (13) line -> . PRINT printable
    (14) line -> . BREAK
    (15) line -> . CONTINUE
    (16) line -> . RETURN
    (17) for -> . FOR ID EQUALS forable COLON pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (10) object -> . ID vector
    (11) object -> . ID

    LCURLY          shift and go to state 100
    PRINT           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 103
    ID              shift and go to state 14

    pexpression                    shift and go to state 110
    line                           shift and go to state 101
    for                            shift and go to state 102
    assign                         shift and go to state 6
    object                         shift and go to state 13

state 92

    (58) vector -> LSQUAR elem RSQUAR .

    ASSIGN          reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    ADDASSIGN       reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    SUBASSIGN       reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    MULASSIGN       reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    DIVASSIGN       reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    PLUS            reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    MINUS           reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    TIMES           reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    DIVIDE          reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    DOTADD          reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    DOTSUB          reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    DOTMUL          reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    DOTDIV          reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    TRANSPOSE       reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    COMMA           reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    SEMICOLON       reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    MORE            reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    LESS            reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    MOREOREQ        reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    LESSOREQ        reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    EQUALS          reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    NOTEQUALS       reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    RPAREN          reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    COLON           reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)
    RSQUAR          reduce using rule 58 (vector -> LSQUAR elem RSQUAR .)


state 93

    (59) elem -> elem COMMA . num
    (61) num -> . INT
    (62) num -> . FLOAT

    INT             shift and go to state 67
    FLOAT           shift and go to state 68

    num                            shift and go to state 111

state 94

    (45) operation -> EYE LPAREN operation RPAREN .

    PLUS            reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    MINUS           reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    TIMES           reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    DIVIDE          reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    DOTADD          reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    DOTSUB          reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    DOTMUL          reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    DOTDIV          reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    TRANSPOSE       reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    COMMA           reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    SEMICOLON       reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    MORE            reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    LESS            reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    MOREOREQ        reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    LESSOREQ        reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    EQUALS          reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    NOTEQUALS       reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)
    RPAREN          reduce using rule 45 (operation -> EYE LPAREN operation RPAREN .)


state 95

    (46) operation -> ZEROS LPAREN operation RPAREN .

    PLUS            reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    MINUS           reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    TIMES           reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    DIVIDE          reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    DOTADD          reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    DOTSUB          reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    DOTMUL          reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    DOTDIV          reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    TRANSPOSE       reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    COMMA           reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    SEMICOLON       reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    MORE            reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    LESS            reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    MOREOREQ        reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    LESSOREQ        reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    EQUALS          reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    NOTEQUALS       reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)
    RPAREN          reduce using rule 46 (operation -> ZEROS LPAREN operation RPAREN .)


state 96

    (47) operation -> ONES LPAREN operation RPAREN .

    PLUS            reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    MINUS           reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    TIMES           reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    DIVIDE          reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    DOTADD          reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    DOTSUB          reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    DOTMUL          reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    DOTDIV          reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    TRANSPOSE       reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    COMMA           reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    SEMICOLON       reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    MORE            reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    LESS            reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    MOREOREQ        reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    LESSOREQ        reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    EQUALS          reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    NOTEQUALS       reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)
    RPAREN          reduce using rule 47 (operation -> ONES LPAREN operation RPAREN .)


state 97

    (56) row -> row COMMA vector .

    RSQUAR          reduce using rule 56 (row -> row COMMA vector .)
    COMMA           reduce using rule 56 (row -> row COMMA vector .)


state 98

    (23) bool -> LPAREN bool RPAREN .

    RPAREN          reduce using rule 23 (bool -> LPAREN bool RPAREN .)


state 99

    (52) ifelse -> IF LPAREN bool RPAREN pexpression .
    (53) ifelse -> IF LPAREN bool RPAREN pexpression . ELSE pexpression

    LCURLY          reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    PRINT           reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    BREAK           reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    CONTINUE        reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    RETURN          reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    IF              reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    WHILE           reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    ID              reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    $end            reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    RCURLY          reduce using rule 52 (ifelse -> IF LPAREN bool RPAREN pexpression .)
    ELSE            shift and go to state 112


state 100

    (6) pexpression -> LCURLY . pexpression RCURLY
    (7) pexpression -> LCURLY . expression RCURLY
    (6) pexpression -> . LCURLY pexpression RCURLY
    (7) pexpression -> . LCURLY expression RCURLY
    (8) pexpression -> . line SEMICOLON
    (9) pexpression -> . for
    (1) expression -> . line SEMICOLON
    (2) expression -> . expression expression
    (3) expression -> . LCURLY expression RCURLY
    (4) expression -> . ifelse
    (5) expression -> . while
    (12) line -> . assign
    (13) line -> . PRINT printable
    (14) line -> . BREAK
    (15) line -> . CONTINUE
    (16) line -> . RETURN
    (17) for -> . FOR ID EQUALS forable COLON pexpression
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression ELSE pexpression
    (54) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (10) object -> . ID vector
    (11) object -> . ID

    LCURLY          shift and go to state 113
    PRINT           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 103
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    ID              shift and go to state 14

    pexpression                    shift and go to state 114
    expression                     shift and go to state 115
    line                           shift and go to state 116
    for                            shift and go to state 102
    ifelse                         shift and go to state 4
    while                          shift and go to state 5
    assign                         shift and go to state 6
    object                         shift and go to state 13

state 101

    (8) pexpression -> line . SEMICOLON

    SEMICOLON       shift and go to state 117


state 102

    (9) pexpression -> for .

    ELSE            reduce using rule 9 (pexpression -> for .)
    LCURLY          reduce using rule 9 (pexpression -> for .)
    PRINT           reduce using rule 9 (pexpression -> for .)
    BREAK           reduce using rule 9 (pexpression -> for .)
    CONTINUE        reduce using rule 9 (pexpression -> for .)
    RETURN          reduce using rule 9 (pexpression -> for .)
    IF              reduce using rule 9 (pexpression -> for .)
    WHILE           reduce using rule 9 (pexpression -> for .)
    ID              reduce using rule 9 (pexpression -> for .)
    $end            reduce using rule 9 (pexpression -> for .)
    RCURLY          reduce using rule 9 (pexpression -> for .)


state 103

    (17) for -> FOR . ID EQUALS forable COLON pexpression

    ID              shift and go to state 118


state 104

    (24) bool -> operation MORE operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 24 (bool -> operation MORE operation .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    DOTADD          shift and go to state 45
    DOTSUB          shift and go to state 46
    DOTMUL          shift and go to state 47
    DOTDIV          shift and go to state 48
    TRANSPOSE       shift and go to state 49


state 105

    (25) bool -> operation LESS operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 25 (bool -> operation LESS operation .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    DOTADD          shift and go to state 45
    DOTSUB          shift and go to state 46
    DOTMUL          shift and go to state 47
    DOTDIV          shift and go to state 48
    TRANSPOSE       shift and go to state 49


state 106

    (26) bool -> operation MOREOREQ operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 26 (bool -> operation MOREOREQ operation .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    DOTADD          shift and go to state 45
    DOTSUB          shift and go to state 46
    DOTMUL          shift and go to state 47
    DOTDIV          shift and go to state 48
    TRANSPOSE       shift and go to state 49


state 107

    (27) bool -> operation LESSOREQ operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 27 (bool -> operation LESSOREQ operation .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    DOTADD          shift and go to state 45
    DOTSUB          shift and go to state 46
    DOTMUL          shift and go to state 47
    DOTDIV          shift and go to state 48
    TRANSPOSE       shift and go to state 49


state 108

    (28) bool -> operation EQUALS operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 28 (bool -> operation EQUALS operation .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    DOTADD          shift and go to state 45
    DOTSUB          shift and go to state 46
    DOTMUL          shift and go to state 47
    DOTDIV          shift and go to state 48
    TRANSPOSE       shift and go to state 49


state 109

    (29) bool -> operation NOTEQUALS operation .
    (35) operation -> operation . PLUS operation
    (36) operation -> operation . MINUS operation
    (37) operation -> operation . TIMES operation
    (38) operation -> operation . DIVIDE operation
    (39) operation -> operation . DOTADD operation
    (40) operation -> operation . DOTSUB operation
    (41) operation -> operation . DOTMUL operation
    (42) operation -> operation . DOTDIV operation
    (44) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 29 (bool -> operation NOTEQUALS operation .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    DOTADD          shift and go to state 45
    DOTSUB          shift and go to state 46
    DOTMUL          shift and go to state 47
    DOTDIV          shift and go to state 48
    TRANSPOSE       shift and go to state 49


state 110

    (54) while -> WHILE LPAREN bool RPAREN pexpression .

    LCURLY          reduce using rule 54 (while -> WHILE LPAREN bool RPAREN pexpression .)
    PRINT           reduce using rule 54 (while -> WHILE LPAREN bool RPAREN pexpression .)
    BREAK           reduce using rule 54 (while -> WHILE LPAREN bool RPAREN pexpression .)
    CONTINUE        reduce using rule 54 (while -> WHILE LPAREN bool RPAREN pexpression .)
    RETURN          reduce using rule 54 (while -> WHILE LPAREN bool RPAREN pexpression .)
    IF              reduce using rule 54 (while -> WHILE LPAREN bool RPAREN pexpression .)
    WHILE           reduce using rule 54 (while -> WHILE LPAREN bool RPAREN pexpression .)
    ID              reduce using rule 54 (while -> WHILE LPAREN bool RPAREN pexpression .)
    $end            reduce using rule 54 (while -> WHILE LPAREN bool RPAREN pexpression .)
    RCURLY          reduce using rule 54 (while -> WHILE LPAREN bool RPAREN pexpression .)


state 111

    (59) elem -> elem COMMA num .

    RSQUAR          reduce using rule 59 (elem -> elem COMMA num .)
    COMMA           reduce using rule 59 (elem -> elem COMMA num .)


state 112

    (53) ifelse -> IF LPAREN bool RPAREN pexpression ELSE . pexpression
    (6) pexpression -> . LCURLY pexpression RCURLY
    (7) pexpression -> . LCURLY expression RCURLY
    (8) pexpression -> . line SEMICOLON
    (9) pexpression -> . for
    (12) line -> . assign
    (13) line -> . PRINT printable
    (14) line -> . BREAK
    (15) line -> . CONTINUE
    (16) line -> . RETURN
    (17) for -> . FOR ID EQUALS forable COLON pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (10) object -> . ID vector
    (11) object -> . ID

    LCURLY          shift and go to state 100
    PRINT           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 103
    ID              shift and go to state 14

    pexpression                    shift and go to state 119
    line                           shift and go to state 101
    for                            shift and go to state 102
    assign                         shift and go to state 6
    object                         shift and go to state 13

state 113

    (6) pexpression -> LCURLY . pexpression RCURLY
    (7) pexpression -> LCURLY . expression RCURLY
    (3) expression -> LCURLY . expression RCURLY
    (6) pexpression -> . LCURLY pexpression RCURLY
    (7) pexpression -> . LCURLY expression RCURLY
    (8) pexpression -> . line SEMICOLON
    (9) pexpression -> . for
    (1) expression -> . line SEMICOLON
    (2) expression -> . expression expression
    (3) expression -> . LCURLY expression RCURLY
    (4) expression -> . ifelse
    (5) expression -> . while
    (12) line -> . assign
    (13) line -> . PRINT printable
    (14) line -> . BREAK
    (15) line -> . CONTINUE
    (16) line -> . RETURN
    (17) for -> . FOR ID EQUALS forable COLON pexpression
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression ELSE pexpression
    (54) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (10) object -> . ID vector
    (11) object -> . ID

    LCURLY          shift and go to state 113
    PRINT           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 103
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    ID              shift and go to state 14

    pexpression                    shift and go to state 114
    expression                     shift and go to state 120
    line                           shift and go to state 116
    for                            shift and go to state 102
    ifelse                         shift and go to state 4
    while                          shift and go to state 5
    assign                         shift and go to state 6
    object                         shift and go to state 13

state 114

    (6) pexpression -> LCURLY pexpression . RCURLY

    RCURLY          shift and go to state 121


state 115

    (7) pexpression -> LCURLY expression . RCURLY
    (2) expression -> expression . expression
    (1) expression -> . line SEMICOLON
    (2) expression -> . expression expression
    (3) expression -> . LCURLY expression RCURLY
    (4) expression -> . ifelse
    (5) expression -> . while
    (12) line -> . assign
    (13) line -> . PRINT printable
    (14) line -> . BREAK
    (15) line -> . CONTINUE
    (16) line -> . RETURN
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression ELSE pexpression
    (54) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (10) object -> . ID vector
    (11) object -> . ID

    RCURLY          shift and go to state 122
    LCURLY          shift and go to state 3
    PRINT           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    ID              shift and go to state 14

    expression                     shift and go to state 15
    line                           shift and go to state 2
    ifelse                         shift and go to state 4
    while                          shift and go to state 5
    assign                         shift and go to state 6
    object                         shift and go to state 13

state 116

    (8) pexpression -> line . SEMICOLON
    (1) expression -> line . SEMICOLON

    SEMICOLON       shift and go to state 123


state 117

    (8) pexpression -> line SEMICOLON .

    ELSE            reduce using rule 8 (pexpression -> line SEMICOLON .)
    LCURLY          reduce using rule 8 (pexpression -> line SEMICOLON .)
    PRINT           reduce using rule 8 (pexpression -> line SEMICOLON .)
    BREAK           reduce using rule 8 (pexpression -> line SEMICOLON .)
    CONTINUE        reduce using rule 8 (pexpression -> line SEMICOLON .)
    RETURN          reduce using rule 8 (pexpression -> line SEMICOLON .)
    IF              reduce using rule 8 (pexpression -> line SEMICOLON .)
    WHILE           reduce using rule 8 (pexpression -> line SEMICOLON .)
    ID              reduce using rule 8 (pexpression -> line SEMICOLON .)
    $end            reduce using rule 8 (pexpression -> line SEMICOLON .)
    RCURLY          reduce using rule 8 (pexpression -> line SEMICOLON .)


state 118

    (17) for -> FOR ID . EQUALS forable COLON pexpression

    EQUALS          shift and go to state 124


state 119

    (53) ifelse -> IF LPAREN bool RPAREN pexpression ELSE pexpression .

    LCURLY          reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression ELSE pexpression .)
    PRINT           reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression ELSE pexpression .)
    BREAK           reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression ELSE pexpression .)
    CONTINUE        reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression ELSE pexpression .)
    RETURN          reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression ELSE pexpression .)
    IF              reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression ELSE pexpression .)
    WHILE           reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression ELSE pexpression .)
    ID              reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression ELSE pexpression .)
    $end            reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression ELSE pexpression .)
    RCURLY          reduce using rule 53 (ifelse -> IF LPAREN bool RPAREN pexpression ELSE pexpression .)


state 120

    (7) pexpression -> LCURLY expression . RCURLY
    (3) expression -> LCURLY expression . RCURLY
    (2) expression -> expression . expression
    (1) expression -> . line SEMICOLON
    (2) expression -> . expression expression
    (3) expression -> . LCURLY expression RCURLY
    (4) expression -> . ifelse
    (5) expression -> . while
    (12) line -> . assign
    (13) line -> . PRINT printable
    (14) line -> . BREAK
    (15) line -> . CONTINUE
    (16) line -> . RETURN
    (52) ifelse -> . IF LPAREN bool RPAREN pexpression
    (53) ifelse -> . IF LPAREN bool RPAREN pexpression ELSE pexpression
    (54) while -> . WHILE LPAREN bool RPAREN pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (10) object -> . ID vector
    (11) object -> . ID

    RCURLY          shift and go to state 125
    LCURLY          shift and go to state 3
    PRINT           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    ID              shift and go to state 14

    expression                     shift and go to state 15
    line                           shift and go to state 2
    ifelse                         shift and go to state 4
    while                          shift and go to state 5
    assign                         shift and go to state 6
    object                         shift and go to state 13

state 121

    (6) pexpression -> LCURLY pexpression RCURLY .

    ELSE            reduce using rule 6 (pexpression -> LCURLY pexpression RCURLY .)
    LCURLY          reduce using rule 6 (pexpression -> LCURLY pexpression RCURLY .)
    PRINT           reduce using rule 6 (pexpression -> LCURLY pexpression RCURLY .)
    BREAK           reduce using rule 6 (pexpression -> LCURLY pexpression RCURLY .)
    CONTINUE        reduce using rule 6 (pexpression -> LCURLY pexpression RCURLY .)
    RETURN          reduce using rule 6 (pexpression -> LCURLY pexpression RCURLY .)
    IF              reduce using rule 6 (pexpression -> LCURLY pexpression RCURLY .)
    WHILE           reduce using rule 6 (pexpression -> LCURLY pexpression RCURLY .)
    ID              reduce using rule 6 (pexpression -> LCURLY pexpression RCURLY .)
    $end            reduce using rule 6 (pexpression -> LCURLY pexpression RCURLY .)
    RCURLY          reduce using rule 6 (pexpression -> LCURLY pexpression RCURLY .)


state 122

    (7) pexpression -> LCURLY expression RCURLY .

    ELSE            reduce using rule 7 (pexpression -> LCURLY expression RCURLY .)
    LCURLY          reduce using rule 7 (pexpression -> LCURLY expression RCURLY .)
    PRINT           reduce using rule 7 (pexpression -> LCURLY expression RCURLY .)
    BREAK           reduce using rule 7 (pexpression -> LCURLY expression RCURLY .)
    CONTINUE        reduce using rule 7 (pexpression -> LCURLY expression RCURLY .)
    RETURN          reduce using rule 7 (pexpression -> LCURLY expression RCURLY .)
    IF              reduce using rule 7 (pexpression -> LCURLY expression RCURLY .)
    WHILE           reduce using rule 7 (pexpression -> LCURLY expression RCURLY .)
    ID              reduce using rule 7 (pexpression -> LCURLY expression RCURLY .)
    $end            reduce using rule 7 (pexpression -> LCURLY expression RCURLY .)
    RCURLY          reduce using rule 7 (pexpression -> LCURLY expression RCURLY .)


state 123

    (8) pexpression -> line SEMICOLON .
    (1) expression -> line SEMICOLON .

  ! reduce/reduce conflict for RCURLY resolved using rule 1 (expression -> line SEMICOLON .)
    RCURLY          reduce using rule 1 (expression -> line SEMICOLON .)
    LCURLY          reduce using rule 1 (expression -> line SEMICOLON .)
    PRINT           reduce using rule 1 (expression -> line SEMICOLON .)
    BREAK           reduce using rule 1 (expression -> line SEMICOLON .)
    CONTINUE        reduce using rule 1 (expression -> line SEMICOLON .)
    RETURN          reduce using rule 1 (expression -> line SEMICOLON .)
    IF              reduce using rule 1 (expression -> line SEMICOLON .)
    WHILE           reduce using rule 1 (expression -> line SEMICOLON .)
    ID              reduce using rule 1 (expression -> line SEMICOLON .)

  ! RCURLY          [ reduce using rule 8 (pexpression -> line SEMICOLON .) ]


state 124

    (17) for -> FOR ID EQUALS . forable COLON pexpression
    (21) forable -> . object
    (22) forable -> . INT
    (10) object -> . ID vector
    (11) object -> . ID

    INT             shift and go to state 128
    ID              shift and go to state 14

    forable                        shift and go to state 126
    object                         shift and go to state 127

state 125

    (7) pexpression -> LCURLY expression RCURLY .
    (3) expression -> LCURLY expression RCURLY .

  ! reduce/reduce conflict for RCURLY resolved using rule 3 (expression -> LCURLY expression RCURLY .)
    RCURLY          reduce using rule 3 (expression -> LCURLY expression RCURLY .)
    LCURLY          reduce using rule 3 (expression -> LCURLY expression RCURLY .)
    PRINT           reduce using rule 3 (expression -> LCURLY expression RCURLY .)
    BREAK           reduce using rule 3 (expression -> LCURLY expression RCURLY .)
    CONTINUE        reduce using rule 3 (expression -> LCURLY expression RCURLY .)
    RETURN          reduce using rule 3 (expression -> LCURLY expression RCURLY .)
    IF              reduce using rule 3 (expression -> LCURLY expression RCURLY .)
    WHILE           reduce using rule 3 (expression -> LCURLY expression RCURLY .)
    ID              reduce using rule 3 (expression -> LCURLY expression RCURLY .)

  ! RCURLY          [ reduce using rule 7 (pexpression -> LCURLY expression RCURLY .) ]


state 126

    (17) for -> FOR ID EQUALS forable . COLON pexpression

    COLON           shift and go to state 129


state 127

    (21) forable -> object .

    COLON           reduce using rule 21 (forable -> object .)


state 128

    (22) forable -> INT .

    COLON           reduce using rule 22 (forable -> INT .)


state 129

    (17) for -> FOR ID EQUALS forable COLON . pexpression
    (6) pexpression -> . LCURLY pexpression RCURLY
    (7) pexpression -> . LCURLY expression RCURLY
    (8) pexpression -> . line SEMICOLON
    (9) pexpression -> . for
    (12) line -> . assign
    (13) line -> . PRINT printable
    (14) line -> . BREAK
    (15) line -> . CONTINUE
    (16) line -> . RETURN
    (17) for -> . FOR ID EQUALS forable COLON pexpression
    (30) assign -> . object ASSIGN operation
    (31) assign -> . object ADDASSIGN operation
    (32) assign -> . object SUBASSIGN operation
    (33) assign -> . object MULASSIGN operation
    (34) assign -> . object DIVASSIGN operation
    (10) object -> . ID vector
    (11) object -> . ID

    LCURLY          shift and go to state 100
    PRINT           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 103
    ID              shift and go to state 14

    pexpression                    shift and go to state 130
    line                           shift and go to state 101
    for                            shift and go to state 102
    assign                         shift and go to state 6
    object                         shift and go to state 13

state 130

    (17) for -> FOR ID EQUALS forable COLON pexpression .

    ELSE            reduce using rule 17 (for -> FOR ID EQUALS forable COLON pexpression .)
    LCURLY          reduce using rule 17 (for -> FOR ID EQUALS forable COLON pexpression .)
    PRINT           reduce using rule 17 (for -> FOR ID EQUALS forable COLON pexpression .)
    BREAK           reduce using rule 17 (for -> FOR ID EQUALS forable COLON pexpression .)
    CONTINUE        reduce using rule 17 (for -> FOR ID EQUALS forable COLON pexpression .)
    RETURN          reduce using rule 17 (for -> FOR ID EQUALS forable COLON pexpression .)
    IF              reduce using rule 17 (for -> FOR ID EQUALS forable COLON pexpression .)
    WHILE           reduce using rule 17 (for -> FOR ID EQUALS forable COLON pexpression .)
    ID              reduce using rule 17 (for -> FOR ID EQUALS forable COLON pexpression .)
    $end            reduce using rule 17 (for -> FOR ID EQUALS forable COLON pexpression .)
    RCURLY          reduce using rule 17 (for -> FOR ID EQUALS forable COLON pexpression .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LCURLY in state 15 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 15 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 15 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 15 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 15 resolved as shift
WARNING: shift/reduce conflict for IF in state 15 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 15 resolved as shift
WARNING: shift/reduce conflict for ID in state 15 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 69 resolved as shift
WARNING: reduce/reduce conflict in state 123 resolved using rule (expression -> line SEMICOLON)
WARNING: rejected rule (pexpression -> line SEMICOLON) in state 123
WARNING: reduce/reduce conflict in state 125 resolved using rule (expression -> LCURLY expression RCURLY)
WARNING: rejected rule (pexpression -> LCURLY expression RCURLY) in state 125
