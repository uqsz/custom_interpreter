
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftASSIGNADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNleftMORELESSMOREOREQLESSOREQEQUALSNOTEQUALSleftPLUSMINUSTIMESDIVIDEDOTADDDOTSUBDOTMULDOTDIVleftTRANSPOSEADDASSIGN ASSIGN BREAK COLON COMMA CONTINUE DIVASSIGN DIVIDE DOTADD DOTDIV DOTMUL DOTSUB ELSE EQUALS EYE FLOAT FOR ID IF INT LCURLY LESS LESSOREQ LPAREN LSQUAR MINUS MORE MOREOREQ MULASSIGN NOTEQUALS ONES PLUS PRINT RCURLY RETURN RPAREN RSQUAR SEMICOLON STRING SUBASSIGN TIMES TRANSPOSE WHILE ZEROSexpression : line SEMICOLON\n                  | expression expression\n                  | LCURLY expression RCURLY\n                  | ifelse\n                  | while pexpression : LCURLY pexpression RCURLY\n                  | LCURLY expression RCURLY\n                  | line SEMICOLON\n                  | for  object : ID vector\n                | ID line : assign\n                | PRINT printable\n                | BREAK\n                | CONTINUE\n                | RETURN for : FOR ID EQUALS forable COLON pexpression  printable : printable COMMA printable\n                    | operation\n                    | STRING  forable : object \n                | INT  bool : LPAREN bool RPAREN \n            | operation MORE operation \n            | operation LESS operation \n            | operation MOREOREQ operation \n            | operation LESSOREQ operation \n            | operation EQUALS operation\n            | operation NOTEQUALS operation  assign : object ASSIGN operation \n            | object ADDASSIGN operation \n            | object SUBASSIGN operation \n            | object MULASSIGN operation \n            | object DIVASSIGN operation  operation : operation PLUS operation\n                | operation MINUS operation \n                | operation TIMES operation \n                | operation DIVIDE operation \n                | operation DOTADD operation \n                | operation DOTSUB operation \n                | operation DOTMUL operation \n                | operation DOTDIV operation\n                | MINUS operation \n                | operation TRANSPOSE\n                | EYE LPAREN operation RPAREN\n                | ZEROS LPAREN operation RPAREN\n                | ONES LPAREN operation RPAREN\n                | object\n                | FLOAT\n                | INT \n                | matrix  ifelse : IF LPAREN bool RPAREN pexpression\n                | IF LPAREN bool RPAREN pexpression ELSE pexpression while : WHILE LPAREN bool RPAREN pexpression matrix : LSQUAR row RSQUAR row : row COMMA vector \n                | vector  vector : LSQUAR elem RSQUAR  elem : elem COMMA num \n                | num num : INT \n            | FLOAT'
    
_lr_action_items = {'LCURLY':([0,1,3,4,5,15,16,17,39,84,91,99,100,102,110,112,113,115,117,119,120,121,122,123,125,129,130,],[3,3,3,-4,-5,3,-1,3,-3,100,100,-52,113,-9,-54,100,113,3,-8,-53,3,-6,-7,-1,-3,100,-17,]),'PRINT':([0,1,3,4,5,15,16,17,39,84,91,99,100,102,110,112,113,115,117,119,120,121,122,123,125,129,130,],[7,7,7,-4,-5,7,-1,7,-3,7,7,-52,7,-9,-54,7,7,7,-8,-53,7,-6,-7,-1,-3,7,-17,]),'BREAK':([0,1,3,4,5,15,16,17,39,84,91,99,100,102,110,112,113,115,117,119,120,121,122,123,125,129,130,],[8,8,8,-4,-5,8,-1,8,-3,8,8,-52,8,-9,-54,8,8,8,-8,-53,8,-6,-7,-1,-3,8,-17,]),'CONTINUE':([0,1,3,4,5,15,16,17,39,84,91,99,100,102,110,112,113,115,117,119,120,121,122,123,125,129,130,],[9,9,9,-4,-5,9,-1,9,-3,9,9,-52,9,-9,-54,9,9,9,-8,-53,9,-6,-7,-1,-3,9,-17,]),'RETURN':([0,1,3,4,5,15,16,17,39,84,91,99,100,102,110,112,113,115,117,119,120,121,122,123,125,129,130,],[10,10,10,-4,-5,10,-1,10,-3,10,10,-52,10,-9,-54,10,10,10,-8,-53,10,-6,-7,-1,-3,10,-17,]),'IF':([0,1,3,4,5,15,16,17,39,99,100,102,110,113,115,117,119,120,121,122,123,125,130,],[11,11,11,-4,-5,11,-1,11,-3,-52,11,-9,-54,11,11,-8,-53,11,-6,-7,-1,-3,-17,]),'WHILE':([0,1,3,4,5,15,16,17,39,99,100,102,110,113,115,117,119,120,121,122,123,125,130,],[12,12,12,-4,-5,12,-1,12,-3,-52,12,-9,-54,12,12,-8,-53,12,-6,-7,-1,-3,-17,]),'ID':([0,1,3,4,5,7,15,16,17,21,30,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,48,51,52,53,56,84,85,86,87,88,89,90,91,99,100,102,103,110,112,113,115,117,119,120,121,122,123,124,125,129,130,],[14,14,14,-4,-5,14,14,-1,14,14,14,14,14,14,14,14,14,-3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-52,14,-9,118,-54,14,14,14,-8,-53,14,-6,-7,-1,14,-3,14,-17,]),'$end':([1,4,5,15,16,39,99,102,110,117,119,121,122,130,],[0,-4,-5,-2,-1,-3,-52,-9,-54,-8,-53,-6,-7,-17,]),'SEMICOLON':([2,6,8,9,10,14,18,19,20,25,26,27,28,37,49,50,60,61,62,63,64,69,70,71,72,73,74,75,76,77,81,92,94,95,96,101,116,],[16,-12,-14,-15,-16,-11,-13,-19,-20,-48,-49,-50,-51,-10,-44,-43,-30,-31,-32,-33,-34,-18,-35,-36,-37,-38,-39,-40,-41,-42,-55,-58,-45,-46,-47,117,123,]),'RCURLY':([4,5,15,16,17,39,99,102,110,114,115,117,119,120,121,122,123,125,130,],[-4,-5,-2,-1,39,-3,-52,-9,-54,121,122,-8,-53,125,-6,-7,-1,-3,-17,]),'STRING':([7,40,],[20,20,]),'MINUS':([7,14,19,21,25,26,27,28,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,58,60,61,62,63,64,70,71,72,73,74,75,76,77,78,79,80,81,85,86,87,88,89,90,92,94,95,96,104,105,106,107,108,109,],[21,-11,42,21,-48,-49,-50,-51,21,21,21,21,21,21,21,-10,21,21,21,21,21,21,21,21,21,-44,-43,21,21,21,21,42,42,42,42,42,42,-35,-36,-37,-38,-39,-40,-41,-42,42,42,42,-55,21,21,21,21,21,21,-58,-45,-46,-47,42,42,42,42,42,42,]),'EYE':([7,21,30,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,51,52,53,56,85,86,87,88,89,90,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'ZEROS':([7,21,30,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,51,52,53,56,85,86,87,88,89,90,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'ONES':([7,21,30,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,51,52,53,56,85,86,87,88,89,90,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'FLOAT':([7,21,30,31,32,33,34,35,36,38,40,41,42,43,44,45,46,47,48,51,52,53,56,85,86,87,88,89,90,93,],[26,26,26,26,26,26,26,26,26,68,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,68,]),'INT':([7,21,30,31,32,33,34,35,36,38,40,41,42,43,44,45,46,47,48,51,52,53,56,85,86,87,88,89,90,93,124,],[27,27,27,27,27,27,27,27,27,67,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,67,128,]),'LSQUAR':([7,14,21,29,30,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,51,52,53,56,82,85,86,87,88,89,90,],[29,38,29,38,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,38,29,29,29,29,29,29,]),'LPAREN':([11,12,22,23,24,30,31,56,],[30,31,51,52,53,56,56,56,]),'ASSIGN':([13,14,37,92,],[32,-11,-10,-58,]),'ADDASSIGN':([13,14,37,92,],[33,-11,-10,-58,]),'SUBASSIGN':([13,14,37,92,],[34,-11,-10,-58,]),'MULASSIGN':([13,14,37,92,],[35,-11,-10,-58,]),'DIVASSIGN':([13,14,37,92,],[36,-11,-10,-58,]),'PLUS':([14,19,25,26,27,28,37,49,50,58,60,61,62,63,64,70,71,72,73,74,75,76,77,78,79,80,81,92,94,95,96,104,105,106,107,108,109,],[-11,41,-48,-49,-50,-51,-10,-44,-43,41,41,41,41,41,41,-35,-36,-37,-38,-39,-40,-41,-42,41,41,41,-55,-58,-45,-46,-47,41,41,41,41,41,41,]),'TIMES':([14,19,25,26,27,28,37,49,50,58,60,61,62,63,64,70,71,72,73,74,75,76,77,78,79,80,81,92,94,95,96,104,105,106,107,108,109,],[-11,43,-48,-49,-50,-51,-10,-44,-43,43,43,43,43,43,43,-35,-36,-37,-38,-39,-40,-41,-42,43,43,43,-55,-58,-45,-46,-47,43,43,43,43,43,43,]),'DIVIDE':([14,19,25,26,27,28,37,49,50,58,60,61,62,63,64,70,71,72,73,74,75,76,77,78,79,80,81,92,94,95,96,104,105,106,107,108,109,],[-11,44,-48,-49,-50,-51,-10,-44,-43,44,44,44,44,44,44,-35,-36,-37,-38,-39,-40,-41,-42,44,44,44,-55,-58,-45,-46,-47,44,44,44,44,44,44,]),'DOTADD':([14,19,25,26,27,28,37,49,50,58,60,61,62,63,64,70,71,72,73,74,75,76,77,78,79,80,81,92,94,95,96,104,105,106,107,108,109,],[-11,45,-48,-49,-50,-51,-10,-44,-43,45,45,45,45,45,45,-35,-36,-37,-38,-39,-40,-41,-42,45,45,45,-55,-58,-45,-46,-47,45,45,45,45,45,45,]),'DOTSUB':([14,19,25,26,27,28,37,49,50,58,60,61,62,63,64,70,71,72,73,74,75,76,77,78,79,80,81,92,94,95,96,104,105,106,107,108,109,],[-11,46,-48,-49,-50,-51,-10,-44,-43,46,46,46,46,46,46,-35,-36,-37,-38,-39,-40,-41,-42,46,46,46,-55,-58,-45,-46,-47,46,46,46,46,46,46,]),'DOTMUL':([14,19,25,26,27,28,37,49,50,58,60,61,62,63,64,70,71,72,73,74,75,76,77,78,79,80,81,92,94,95,96,104,105,106,107,108,109,],[-11,47,-48,-49,-50,-51,-10,-44,-43,47,47,47,47,47,47,-35,-36,-37,-38,-39,-40,-41,-42,47,47,47,-55,-58,-45,-46,-47,47,47,47,47,47,47,]),'DOTDIV':([14,19,25,26,27,28,37,49,50,58,60,61,62,63,64,70,71,72,73,74,75,76,77,78,79,80,81,92,94,95,96,104,105,106,107,108,109,],[-11,48,-48,-49,-50,-51,-10,-44,-43,48,48,48,48,48,48,-35,-36,-37,-38,-39,-40,-41,-42,48,48,48,-55,-58,-45,-46,-47,48,48,48,48,48,48,]),'TRANSPOSE':([14,19,25,26,27,28,37,49,50,58,60,61,62,63,64,70,71,72,73,74,75,76,77,78,79,80,81,92,94,95,96,104,105,106,107,108,109,],[-11,49,-48,-49,-50,-51,-10,-44,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-55,-58,-45,-46,-47,49,49,49,49,49,49,]),'COMMA':([14,18,19,20,25,26,27,28,37,49,50,54,55,65,66,67,68,69,70,71,72,73,74,75,76,77,81,92,94,95,96,97,111,],[-11,40,-19,-20,-48,-49,-50,-51,-10,-44,-43,82,-57,93,-60,-61,-62,40,-35,-36,-37,-38,-39,-40,-41,-42,-55,-58,-45,-46,-47,-56,-59,]),'MORE':([14,25,26,27,28,37,49,50,58,70,71,72,73,74,75,76,77,81,92,94,95,96,],[-11,-48,-49,-50,-51,-10,-44,-43,85,-35,-36,-37,-38,-39,-40,-41,-42,-55,-58,-45,-46,-47,]),'LESS':([14,25,26,27,28,37,49,50,58,70,71,72,73,74,75,76,77,81,92,94,95,96,],[-11,-48,-49,-50,-51,-10,-44,-43,86,-35,-36,-37,-38,-39,-40,-41,-42,-55,-58,-45,-46,-47,]),'MOREOREQ':([14,25,26,27,28,37,49,50,58,70,71,72,73,74,75,76,77,81,92,94,95,96,],[-11,-48,-49,-50,-51,-10,-44,-43,87,-35,-36,-37,-38,-39,-40,-41,-42,-55,-58,-45,-46,-47,]),'LESSOREQ':([14,25,26,27,28,37,49,50,58,70,71,72,73,74,75,76,77,81,92,94,95,96,],[-11,-48,-49,-50,-51,-10,-44,-43,88,-35,-36,-37,-38,-39,-40,-41,-42,-55,-58,-45,-46,-47,]),'EQUALS':([14,25,26,27,28,37,49,50,58,70,71,72,73,74,75,76,77,81,92,94,95,96,118,],[-11,-48,-49,-50,-51,-10,-44,-43,89,-35,-36,-37,-38,-39,-40,-41,-42,-55,-58,-45,-46,-47,124,]),'NOTEQUALS':([14,25,26,27,28,37,49,50,58,70,71,72,73,74,75,76,77,81,92,94,95,96,],[-11,-48,-49,-50,-51,-10,-44,-43,90,-35,-36,-37,-38,-39,-40,-41,-42,-55,-58,-45,-46,-47,]),'RPAREN':([14,25,26,27,28,37,49,50,57,59,70,71,72,73,74,75,76,77,78,79,80,81,83,92,94,95,96,98,104,105,106,107,108,109,],[-11,-48,-49,-50,-51,-10,-44,-43,84,91,-35,-36,-37,-38,-39,-40,-41,-42,94,95,96,-55,98,-58,-45,-46,-47,-23,-24,-25,-26,-27,-28,-29,]),'COLON':([14,37,92,126,127,128,],[-11,-10,-58,129,-21,-22,]),'RSQUAR':([54,55,65,66,67,68,92,97,111,],[81,-57,92,-60,-61,-62,-58,-56,-59,]),'FOR':([84,91,100,112,113,129,],[103,103,103,103,103,103,]),'ELSE':([99,102,117,121,122,130,],[112,-9,-8,-6,-7,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,1,3,15,17,100,113,115,120,],[1,15,17,15,15,115,120,15,15,]),'line':([0,1,3,15,17,84,91,100,112,113,115,120,129,],[2,2,2,2,2,101,101,116,101,116,2,2,101,]),'ifelse':([0,1,3,15,17,100,113,115,120,],[4,4,4,4,4,4,4,4,4,]),'while':([0,1,3,15,17,100,113,115,120,],[5,5,5,5,5,5,5,5,5,]),'assign':([0,1,3,15,17,84,91,100,112,113,115,120,129,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'object':([0,1,3,7,15,17,21,30,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,51,52,53,56,84,85,86,87,88,89,90,91,100,112,113,115,120,124,129,],[13,13,13,25,13,13,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,13,25,25,25,25,25,25,13,13,13,13,13,13,127,13,]),'printable':([7,40,],[18,69,]),'operation':([7,21,30,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,51,52,53,56,85,86,87,88,89,90,],[19,50,58,58,60,61,62,63,64,19,70,71,72,73,74,75,76,77,78,79,80,58,104,105,106,107,108,109,]),'matrix':([7,21,30,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,51,52,53,56,85,86,87,88,89,90,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'vector':([14,29,82,],[37,55,97,]),'row':([29,],[54,]),'bool':([30,31,56,],[57,59,83,]),'elem':([38,],[65,]),'num':([38,93,],[66,111,]),'pexpression':([84,91,100,112,113,129,],[99,110,114,119,114,130,]),'for':([84,91,100,112,113,129,],[102,102,102,102,102,102,]),'forable':([124,],[126,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> line SEMICOLON','expression',2,'p_expression_exp','Mparser.py',30),
  ('expression -> expression expression','expression',2,'p_expression_exp','Mparser.py',31),
  ('expression -> LCURLY expression RCURLY','expression',3,'p_expression_exp','Mparser.py',32),
  ('expression -> ifelse','expression',1,'p_expression_exp','Mparser.py',33),
  ('expression -> while','expression',1,'p_expression_exp','Mparser.py',34),
  ('pexpression -> LCURLY pexpression RCURLY','pexpression',3,'p_expression_pexp','Mparser.py',38),
  ('pexpression -> LCURLY expression RCURLY','pexpression',3,'p_expression_pexp','Mparser.py',39),
  ('pexpression -> line SEMICOLON','pexpression',2,'p_expression_pexp','Mparser.py',40),
  ('pexpression -> for','pexpression',1,'p_expression_pexp','Mparser.py',41),
  ('object -> ID vector','object',2,'p_expression_obj','Mparser.py',44),
  ('object -> ID','object',1,'p_expression_obj','Mparser.py',45),
  ('line -> assign','line',1,'p_expression_line','Mparser.py',48),
  ('line -> PRINT printable','line',2,'p_expression_line','Mparser.py',49),
  ('line -> BREAK','line',1,'p_expression_line','Mparser.py',50),
  ('line -> CONTINUE','line',1,'p_expression_line','Mparser.py',51),
  ('line -> RETURN','line',1,'p_expression_line','Mparser.py',52),
  ('for -> FOR ID EQUALS forable COLON pexpression','for',6,'p_expression_for','Mparser.py',56),
  ('printable -> printable COMMA printable','printable',3,'p_expression_printable','Mparser.py',60),
  ('printable -> operation','printable',1,'p_expression_printable','Mparser.py',61),
  ('printable -> STRING','printable',1,'p_expression_printable','Mparser.py',62),
  ('forable -> object','forable',1,'p_expression_forable','Mparser.py',66),
  ('forable -> INT','forable',1,'p_expression_forable','Mparser.py',67),
  ('bool -> LPAREN bool RPAREN','bool',3,'p_expression_bool','Mparser.py',71),
  ('bool -> operation MORE operation','bool',3,'p_expression_bool','Mparser.py',72),
  ('bool -> operation LESS operation','bool',3,'p_expression_bool','Mparser.py',73),
  ('bool -> operation MOREOREQ operation','bool',3,'p_expression_bool','Mparser.py',74),
  ('bool -> operation LESSOREQ operation','bool',3,'p_expression_bool','Mparser.py',75),
  ('bool -> operation EQUALS operation','bool',3,'p_expression_bool','Mparser.py',76),
  ('bool -> operation NOTEQUALS operation','bool',3,'p_expression_bool','Mparser.py',77),
  ('assign -> object ASSIGN operation','assign',3,'p_expression_assign','Mparser.py',81),
  ('assign -> object ADDASSIGN operation','assign',3,'p_expression_assign','Mparser.py',82),
  ('assign -> object SUBASSIGN operation','assign',3,'p_expression_assign','Mparser.py',83),
  ('assign -> object MULASSIGN operation','assign',3,'p_expression_assign','Mparser.py',84),
  ('assign -> object DIVASSIGN operation','assign',3,'p_expression_assign','Mparser.py',85),
  ('operation -> operation PLUS operation','operation',3,'p_expression_operation','Mparser.py',89),
  ('operation -> operation MINUS operation','operation',3,'p_expression_operation','Mparser.py',90),
  ('operation -> operation TIMES operation','operation',3,'p_expression_operation','Mparser.py',91),
  ('operation -> operation DIVIDE operation','operation',3,'p_expression_operation','Mparser.py',92),
  ('operation -> operation DOTADD operation','operation',3,'p_expression_operation','Mparser.py',93),
  ('operation -> operation DOTSUB operation','operation',3,'p_expression_operation','Mparser.py',94),
  ('operation -> operation DOTMUL operation','operation',3,'p_expression_operation','Mparser.py',95),
  ('operation -> operation DOTDIV operation','operation',3,'p_expression_operation','Mparser.py',96),
  ('operation -> MINUS operation','operation',2,'p_expression_operation','Mparser.py',97),
  ('operation -> operation TRANSPOSE','operation',2,'p_expression_operation','Mparser.py',98),
  ('operation -> EYE LPAREN operation RPAREN','operation',4,'p_expression_operation','Mparser.py',99),
  ('operation -> ZEROS LPAREN operation RPAREN','operation',4,'p_expression_operation','Mparser.py',100),
  ('operation -> ONES LPAREN operation RPAREN','operation',4,'p_expression_operation','Mparser.py',101),
  ('operation -> object','operation',1,'p_expression_operation','Mparser.py',102),
  ('operation -> FLOAT','operation',1,'p_expression_operation','Mparser.py',103),
  ('operation -> INT','operation',1,'p_expression_operation','Mparser.py',104),
  ('operation -> matrix','operation',1,'p_expression_operation','Mparser.py',105),
  ('ifelse -> IF LPAREN bool RPAREN pexpression','ifelse',5,'p_expression_ifelse','Mparser.py',109),
  ('ifelse -> IF LPAREN bool RPAREN pexpression ELSE pexpression','ifelse',7,'p_expression_ifelse','Mparser.py',110),
  ('while -> WHILE LPAREN bool RPAREN pexpression','while',5,'p_expression_while','Mparser.py',114),
  ('matrix -> LSQUAR row RSQUAR','matrix',3,'p_expression_matrix','Mparser.py',118),
  ('row -> row COMMA vector','row',3,'p_expression_row','Mparser.py',122),
  ('row -> vector','row',1,'p_expression_row','Mparser.py',123),
  ('vector -> LSQUAR elem RSQUAR','vector',3,'p_expression_vector','Mparser.py',127),
  ('elem -> elem COMMA num','elem',3,'p_expression_elem','Mparser.py',131),
  ('elem -> num','elem',1,'p_expression_elem','Mparser.py',132),
  ('num -> INT','num',1,'p_expression_num','Mparser.py',136),
  ('num -> FLOAT','num',1,'p_expression_num','Mparser.py',137),
]
