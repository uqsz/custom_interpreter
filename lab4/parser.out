Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression instruction
Rule 2     expression -> instruction
Rule 3     instruction -> LCURLY expression RCURLY
Rule 4     instruction -> line SEMICOLON
Rule 5     instruction -> for_state
Rule 6     instruction -> ifelse_state
Rule 7     instruction -> while_state
Rule 8     line -> assign
Rule 9     line -> PRINT print_state
Rule 10    line -> BREAK
Rule 11    line -> CONTINUE
Rule 12    line -> RETURN print_state
Rule 13    line -> RETURN
Rule 14    print_state -> printable COMMA print_state
Rule 15    print_state -> printable
Rule 16    printable -> operation
Rule 17    printable -> STRING
Rule 18    assign -> object ASSIGN operation
Rule 19    assign -> object ADDASSIGN operation
Rule 20    assign -> object SUBASSIGN operation
Rule 21    assign -> object MULASSIGN operation
Rule 22    assign -> object DIVASSIGN operation
Rule 23    operation -> operation PLUS operation
Rule 24    operation -> operation MINUS operation
Rule 25    operation -> operation TIMES operation
Rule 26    operation -> operation DIVIDE operation
Rule 27    operation -> operation DOTADD operation
Rule 28    operation -> operation DOTSUB operation
Rule 29    operation -> operation DOTMUL operation
Rule 30    operation -> operation DOTDIV operation
Rule 31    operation -> MINUS operation
Rule 32    operation -> operation TRANSPOSE
Rule 33    operation -> EYE LPAREN operation RPAREN
Rule 34    operation -> ZEROS LPAREN operation RPAREN
Rule 35    operation -> ONES LPAREN operation RPAREN
Rule 36    operation -> object
Rule 37    operation -> number
Rule 38    operation -> matrix
Rule 39    bool -> LPAREN bool RPAREN
Rule 40    bool -> operation MORE operation
Rule 41    bool -> operation LESS operation
Rule 42    bool -> operation MOREOREQ operation
Rule 43    bool -> operation LESSOREQ operation
Rule 44    bool -> operation EQUALS operation
Rule 45    bool -> operation NOTEQUALS operation
Rule 46    object -> ID vector
Rule 47    object -> ID
Rule 48    ifelse_state -> IF LPAREN bool RPAREN instruction
Rule 49    ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction
Rule 50    while_state -> WHILE LPAREN bool RPAREN instruction
Rule 51    for_state -> FOR ID ASSIGN forable COLON forable instruction
Rule 52    forable -> object
Rule 53    forable -> INT
Rule 54    matrix -> LSQUAR row RSQUAR
Rule 55    row -> row COMMA vector
Rule 56    row -> vector
Rule 57    vector -> LSQUAR elem RSQUAR
Rule 58    elem -> elem COMMA number
Rule 59    elem -> number
Rule 60    number -> INT
Rule 61    number -> FLOAT

Terminals, with rules where they appear

ADDASSIGN            : 19
ASSIGN               : 18 51
BREAK                : 10
COLON                : 51
COMMA                : 14 55 58
CONTINUE             : 11
DIVASSIGN            : 22
DIVIDE               : 26
DOTADD               : 27
DOTDIV               : 30
DOTMUL               : 29
DOTSUB               : 28
ELSE                 : 49
EQUALS               : 44
EYE                  : 33
FLOAT                : 61
FOR                  : 51
ID                   : 46 47 51
IF                   : 48 49
INT                  : 53 60
LCURLY               : 3
LESS                 : 41
LESSOREQ             : 43
LPAREN               : 33 34 35 39 48 49 50
LSQUAR               : 54 57
MINUS                : 24 31
MORE                 : 40
MOREOREQ             : 42
MULASSIGN            : 21
NOTEQUALS            : 45
ONES                 : 35
PLUS                 : 23
PRINT                : 9
RCURLY               : 3
RETURN               : 12 13
RPAREN               : 33 34 35 39 48 49 50
RSQUAR               : 54 57
SEMICOLON            : 4
STRING               : 17
SUBASSIGN            : 20
TIMES                : 25
TRANSPOSE            : 32
WHILE                : 50
ZEROS                : 34
error                : 

Nonterminals, with rules where they appear

assign               : 8
bool                 : 39 48 49 50
elem                 : 57 58
expression           : 1 3 0
for_state            : 5
forable              : 51 51
ifelse_state         : 6
instruction          : 1 2 48 49 49 50 51
line                 : 4
matrix               : 38
number               : 37 58 59
object               : 18 19 20 21 22 36 52
operation            : 16 18 19 20 21 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 32 33 34 35 40 40 41 41 42 42 43 43 44 44 45 45
print_state          : 9 12 14
printable            : 14 15
row                  : 54 55
vector               : 46 55 56
while_state          : 7

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression instruction
    (2) expression -> . instruction
    (3) instruction -> . LCURLY expression RCURLY
    (4) instruction -> . line SEMICOLON
    (5) instruction -> . for_state
    (6) instruction -> . ifelse_state
    (7) instruction -> . while_state
    (8) line -> . assign
    (9) line -> . PRINT print_state
    (10) line -> . BREAK
    (11) line -> . CONTINUE
    (12) line -> . RETURN print_state
    (13) line -> . RETURN
    (51) for_state -> . FOR ID ASSIGN forable COLON forable instruction
    (48) ifelse_state -> . IF LPAREN bool RPAREN instruction
    (49) ifelse_state -> . IF LPAREN bool RPAREN instruction ELSE instruction
    (50) while_state -> . WHILE LPAREN bool RPAREN instruction
    (18) assign -> . object ASSIGN operation
    (19) assign -> . object ADDASSIGN operation
    (20) assign -> . object SUBASSIGN operation
    (21) assign -> . object MULASSIGN operation
    (22) assign -> . object DIVASSIGN operation
    (46) object -> . ID vector
    (47) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    expression                     shift and go to state 1
    instruction                    shift and go to state 2
    line                           shift and go to state 4
    for_state                      shift and go to state 5
    ifelse_state                   shift and go to state 6
    while_state                    shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 1

    (0) S' -> expression .
    (1) expression -> expression . instruction
    (3) instruction -> . LCURLY expression RCURLY
    (4) instruction -> . line SEMICOLON
    (5) instruction -> . for_state
    (6) instruction -> . ifelse_state
    (7) instruction -> . while_state
    (8) line -> . assign
    (9) line -> . PRINT print_state
    (10) line -> . BREAK
    (11) line -> . CONTINUE
    (12) line -> . RETURN print_state
    (13) line -> . RETURN
    (51) for_state -> . FOR ID ASSIGN forable COLON forable instruction
    (48) ifelse_state -> . IF LPAREN bool RPAREN instruction
    (49) ifelse_state -> . IF LPAREN bool RPAREN instruction ELSE instruction
    (50) while_state -> . WHILE LPAREN bool RPAREN instruction
    (18) assign -> . object ASSIGN operation
    (19) assign -> . object ADDASSIGN operation
    (20) assign -> . object SUBASSIGN operation
    (21) assign -> . object MULASSIGN operation
    (22) assign -> . object DIVASSIGN operation
    (46) object -> . ID vector
    (47) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    instruction                    shift and go to state 18
    line                           shift and go to state 4
    for_state                      shift and go to state 5
    ifelse_state                   shift and go to state 6
    while_state                    shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 2

    (2) expression -> instruction .

    LCURLY          reduce using rule 2 (expression -> instruction .)
    PRINT           reduce using rule 2 (expression -> instruction .)
    BREAK           reduce using rule 2 (expression -> instruction .)
    CONTINUE        reduce using rule 2 (expression -> instruction .)
    RETURN          reduce using rule 2 (expression -> instruction .)
    FOR             reduce using rule 2 (expression -> instruction .)
    IF              reduce using rule 2 (expression -> instruction .)
    WHILE           reduce using rule 2 (expression -> instruction .)
    ID              reduce using rule 2 (expression -> instruction .)
    $end            reduce using rule 2 (expression -> instruction .)
    RCURLY          reduce using rule 2 (expression -> instruction .)


state 3

    (3) instruction -> LCURLY . expression RCURLY
    (1) expression -> . expression instruction
    (2) expression -> . instruction
    (3) instruction -> . LCURLY expression RCURLY
    (4) instruction -> . line SEMICOLON
    (5) instruction -> . for_state
    (6) instruction -> . ifelse_state
    (7) instruction -> . while_state
    (8) line -> . assign
    (9) line -> . PRINT print_state
    (10) line -> . BREAK
    (11) line -> . CONTINUE
    (12) line -> . RETURN print_state
    (13) line -> . RETURN
    (51) for_state -> . FOR ID ASSIGN forable COLON forable instruction
    (48) ifelse_state -> . IF LPAREN bool RPAREN instruction
    (49) ifelse_state -> . IF LPAREN bool RPAREN instruction ELSE instruction
    (50) while_state -> . WHILE LPAREN bool RPAREN instruction
    (18) assign -> . object ASSIGN operation
    (19) assign -> . object ADDASSIGN operation
    (20) assign -> . object SUBASSIGN operation
    (21) assign -> . object MULASSIGN operation
    (22) assign -> . object DIVASSIGN operation
    (46) object -> . ID vector
    (47) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    expression                     shift and go to state 19
    instruction                    shift and go to state 2
    line                           shift and go to state 4
    for_state                      shift and go to state 5
    ifelse_state                   shift and go to state 6
    while_state                    shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 4

    (4) instruction -> line . SEMICOLON

    SEMICOLON       shift and go to state 20


state 5

    (5) instruction -> for_state .

    LCURLY          reduce using rule 5 (instruction -> for_state .)
    PRINT           reduce using rule 5 (instruction -> for_state .)
    BREAK           reduce using rule 5 (instruction -> for_state .)
    CONTINUE        reduce using rule 5 (instruction -> for_state .)
    RETURN          reduce using rule 5 (instruction -> for_state .)
    FOR             reduce using rule 5 (instruction -> for_state .)
    IF              reduce using rule 5 (instruction -> for_state .)
    WHILE           reduce using rule 5 (instruction -> for_state .)
    ID              reduce using rule 5 (instruction -> for_state .)
    $end            reduce using rule 5 (instruction -> for_state .)
    RCURLY          reduce using rule 5 (instruction -> for_state .)
    ELSE            reduce using rule 5 (instruction -> for_state .)


state 6

    (6) instruction -> ifelse_state .

    LCURLY          reduce using rule 6 (instruction -> ifelse_state .)
    PRINT           reduce using rule 6 (instruction -> ifelse_state .)
    BREAK           reduce using rule 6 (instruction -> ifelse_state .)
    CONTINUE        reduce using rule 6 (instruction -> ifelse_state .)
    RETURN          reduce using rule 6 (instruction -> ifelse_state .)
    FOR             reduce using rule 6 (instruction -> ifelse_state .)
    IF              reduce using rule 6 (instruction -> ifelse_state .)
    WHILE           reduce using rule 6 (instruction -> ifelse_state .)
    ID              reduce using rule 6 (instruction -> ifelse_state .)
    $end            reduce using rule 6 (instruction -> ifelse_state .)
    RCURLY          reduce using rule 6 (instruction -> ifelse_state .)
    ELSE            reduce using rule 6 (instruction -> ifelse_state .)


state 7

    (7) instruction -> while_state .

    LCURLY          reduce using rule 7 (instruction -> while_state .)
    PRINT           reduce using rule 7 (instruction -> while_state .)
    BREAK           reduce using rule 7 (instruction -> while_state .)
    CONTINUE        reduce using rule 7 (instruction -> while_state .)
    RETURN          reduce using rule 7 (instruction -> while_state .)
    FOR             reduce using rule 7 (instruction -> while_state .)
    IF              reduce using rule 7 (instruction -> while_state .)
    WHILE           reduce using rule 7 (instruction -> while_state .)
    ID              reduce using rule 7 (instruction -> while_state .)
    $end            reduce using rule 7 (instruction -> while_state .)
    RCURLY          reduce using rule 7 (instruction -> while_state .)
    ELSE            reduce using rule 7 (instruction -> while_state .)


state 8

    (8) line -> assign .

    SEMICOLON       reduce using rule 8 (line -> assign .)


state 9

    (9) line -> PRINT . print_state
    (14) print_state -> . printable COMMA print_state
    (15) print_state -> . printable
    (16) printable -> . operation
    (17) printable -> . STRING
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    STRING          shift and go to state 24
    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    print_state                    shift and go to state 21
    printable                      shift and go to state 22
    operation                      shift and go to state 23
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 10

    (10) line -> BREAK .

    SEMICOLON       reduce using rule 10 (line -> BREAK .)


state 11

    (11) line -> CONTINUE .

    SEMICOLON       reduce using rule 11 (line -> CONTINUE .)


state 12

    (12) line -> RETURN . print_state
    (13) line -> RETURN .
    (14) print_state -> . printable COMMA print_state
    (15) print_state -> . printable
    (16) printable -> . operation
    (17) printable -> . STRING
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    SEMICOLON       reduce using rule 13 (line -> RETURN .)
    STRING          shift and go to state 24
    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    print_state                    shift and go to state 35
    printable                      shift and go to state 22
    operation                      shift and go to state 23
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 13

    (51) for_state -> FOR . ID ASSIGN forable COLON forable instruction

    ID              shift and go to state 36


state 14

    (46) object -> ID . vector
    (47) object -> ID .
    (57) vector -> . LSQUAR elem RSQUAR

    ASSIGN          reduce using rule 47 (object -> ID .)
    ADDASSIGN       reduce using rule 47 (object -> ID .)
    SUBASSIGN       reduce using rule 47 (object -> ID .)
    MULASSIGN       reduce using rule 47 (object -> ID .)
    DIVASSIGN       reduce using rule 47 (object -> ID .)
    PLUS            reduce using rule 47 (object -> ID .)
    MINUS           reduce using rule 47 (object -> ID .)
    TIMES           reduce using rule 47 (object -> ID .)
    DIVIDE          reduce using rule 47 (object -> ID .)
    DOTADD          reduce using rule 47 (object -> ID .)
    DOTSUB          reduce using rule 47 (object -> ID .)
    DOTMUL          reduce using rule 47 (object -> ID .)
    DOTDIV          reduce using rule 47 (object -> ID .)
    TRANSPOSE       reduce using rule 47 (object -> ID .)
    COMMA           reduce using rule 47 (object -> ID .)
    SEMICOLON       reduce using rule 47 (object -> ID .)
    MORE            reduce using rule 47 (object -> ID .)
    LESS            reduce using rule 47 (object -> ID .)
    MOREOREQ        reduce using rule 47 (object -> ID .)
    LESSOREQ        reduce using rule 47 (object -> ID .)
    EQUALS          reduce using rule 47 (object -> ID .)
    NOTEQUALS       reduce using rule 47 (object -> ID .)
    RPAREN          reduce using rule 47 (object -> ID .)
    COLON           reduce using rule 47 (object -> ID .)
    LCURLY          reduce using rule 47 (object -> ID .)
    PRINT           reduce using rule 47 (object -> ID .)
    BREAK           reduce using rule 47 (object -> ID .)
    CONTINUE        reduce using rule 47 (object -> ID .)
    RETURN          reduce using rule 47 (object -> ID .)
    FOR             reduce using rule 47 (object -> ID .)
    IF              reduce using rule 47 (object -> ID .)
    WHILE           reduce using rule 47 (object -> ID .)
    ID              reduce using rule 47 (object -> ID .)
    LSQUAR          shift and go to state 38

    vector                         shift and go to state 37

state 15

    (48) ifelse_state -> IF . LPAREN bool RPAREN instruction
    (49) ifelse_state -> IF . LPAREN bool RPAREN instruction ELSE instruction

    LPAREN          shift and go to state 39


state 16

    (50) while_state -> WHILE . LPAREN bool RPAREN instruction

    LPAREN          shift and go to state 40


state 17

    (18) assign -> object . ASSIGN operation
    (19) assign -> object . ADDASSIGN operation
    (20) assign -> object . SUBASSIGN operation
    (21) assign -> object . MULASSIGN operation
    (22) assign -> object . DIVASSIGN operation

    ASSIGN          shift and go to state 41
    ADDASSIGN       shift and go to state 42
    SUBASSIGN       shift and go to state 43
    MULASSIGN       shift and go to state 44
    DIVASSIGN       shift and go to state 45


state 18

    (1) expression -> expression instruction .

    LCURLY          reduce using rule 1 (expression -> expression instruction .)
    PRINT           reduce using rule 1 (expression -> expression instruction .)
    BREAK           reduce using rule 1 (expression -> expression instruction .)
    CONTINUE        reduce using rule 1 (expression -> expression instruction .)
    RETURN          reduce using rule 1 (expression -> expression instruction .)
    FOR             reduce using rule 1 (expression -> expression instruction .)
    IF              reduce using rule 1 (expression -> expression instruction .)
    WHILE           reduce using rule 1 (expression -> expression instruction .)
    ID              reduce using rule 1 (expression -> expression instruction .)
    $end            reduce using rule 1 (expression -> expression instruction .)
    RCURLY          reduce using rule 1 (expression -> expression instruction .)


state 19

    (3) instruction -> LCURLY expression . RCURLY
    (1) expression -> expression . instruction
    (3) instruction -> . LCURLY expression RCURLY
    (4) instruction -> . line SEMICOLON
    (5) instruction -> . for_state
    (6) instruction -> . ifelse_state
    (7) instruction -> . while_state
    (8) line -> . assign
    (9) line -> . PRINT print_state
    (10) line -> . BREAK
    (11) line -> . CONTINUE
    (12) line -> . RETURN print_state
    (13) line -> . RETURN
    (51) for_state -> . FOR ID ASSIGN forable COLON forable instruction
    (48) ifelse_state -> . IF LPAREN bool RPAREN instruction
    (49) ifelse_state -> . IF LPAREN bool RPAREN instruction ELSE instruction
    (50) while_state -> . WHILE LPAREN bool RPAREN instruction
    (18) assign -> . object ASSIGN operation
    (19) assign -> . object ADDASSIGN operation
    (20) assign -> . object SUBASSIGN operation
    (21) assign -> . object MULASSIGN operation
    (22) assign -> . object DIVASSIGN operation
    (46) object -> . ID vector
    (47) object -> . ID

    RCURLY          shift and go to state 46
    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    instruction                    shift and go to state 18
    line                           shift and go to state 4
    for_state                      shift and go to state 5
    ifelse_state                   shift and go to state 6
    while_state                    shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 20

    (4) instruction -> line SEMICOLON .

    LCURLY          reduce using rule 4 (instruction -> line SEMICOLON .)
    PRINT           reduce using rule 4 (instruction -> line SEMICOLON .)
    BREAK           reduce using rule 4 (instruction -> line SEMICOLON .)
    CONTINUE        reduce using rule 4 (instruction -> line SEMICOLON .)
    RETURN          reduce using rule 4 (instruction -> line SEMICOLON .)
    FOR             reduce using rule 4 (instruction -> line SEMICOLON .)
    IF              reduce using rule 4 (instruction -> line SEMICOLON .)
    WHILE           reduce using rule 4 (instruction -> line SEMICOLON .)
    ID              reduce using rule 4 (instruction -> line SEMICOLON .)
    $end            reduce using rule 4 (instruction -> line SEMICOLON .)
    RCURLY          reduce using rule 4 (instruction -> line SEMICOLON .)
    ELSE            reduce using rule 4 (instruction -> line SEMICOLON .)


state 21

    (9) line -> PRINT print_state .

    SEMICOLON       reduce using rule 9 (line -> PRINT print_state .)


state 22

    (14) print_state -> printable . COMMA print_state
    (15) print_state -> printable .

    COMMA           shift and go to state 47
    SEMICOLON       reduce using rule 15 (print_state -> printable .)


state 23

    (16) printable -> operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    COMMA           reduce using rule 16 (printable -> operation .)
    SEMICOLON       reduce using rule 16 (printable -> operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 24

    (17) printable -> STRING .

    COMMA           reduce using rule 17 (printable -> STRING .)
    SEMICOLON       reduce using rule 17 (printable -> STRING .)


state 25

    (31) operation -> MINUS . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 57
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 26

    (33) operation -> EYE . LPAREN operation RPAREN

    LPAREN          shift and go to state 58


state 27

    (34) operation -> ZEROS . LPAREN operation RPAREN

    LPAREN          shift and go to state 59


state 28

    (35) operation -> ONES . LPAREN operation RPAREN

    LPAREN          shift and go to state 60


state 29

    (36) operation -> object .

    PLUS            reduce using rule 36 (operation -> object .)
    MINUS           reduce using rule 36 (operation -> object .)
    TIMES           reduce using rule 36 (operation -> object .)
    DIVIDE          reduce using rule 36 (operation -> object .)
    DOTADD          reduce using rule 36 (operation -> object .)
    DOTSUB          reduce using rule 36 (operation -> object .)
    DOTMUL          reduce using rule 36 (operation -> object .)
    DOTDIV          reduce using rule 36 (operation -> object .)
    TRANSPOSE       reduce using rule 36 (operation -> object .)
    COMMA           reduce using rule 36 (operation -> object .)
    SEMICOLON       reduce using rule 36 (operation -> object .)
    MORE            reduce using rule 36 (operation -> object .)
    LESS            reduce using rule 36 (operation -> object .)
    MOREOREQ        reduce using rule 36 (operation -> object .)
    LESSOREQ        reduce using rule 36 (operation -> object .)
    EQUALS          reduce using rule 36 (operation -> object .)
    NOTEQUALS       reduce using rule 36 (operation -> object .)
    RPAREN          reduce using rule 36 (operation -> object .)


state 30

    (37) operation -> number .

    PLUS            reduce using rule 37 (operation -> number .)
    MINUS           reduce using rule 37 (operation -> number .)
    TIMES           reduce using rule 37 (operation -> number .)
    DIVIDE          reduce using rule 37 (operation -> number .)
    DOTADD          reduce using rule 37 (operation -> number .)
    DOTSUB          reduce using rule 37 (operation -> number .)
    DOTMUL          reduce using rule 37 (operation -> number .)
    DOTDIV          reduce using rule 37 (operation -> number .)
    TRANSPOSE       reduce using rule 37 (operation -> number .)
    COMMA           reduce using rule 37 (operation -> number .)
    SEMICOLON       reduce using rule 37 (operation -> number .)
    MORE            reduce using rule 37 (operation -> number .)
    LESS            reduce using rule 37 (operation -> number .)
    MOREOREQ        reduce using rule 37 (operation -> number .)
    LESSOREQ        reduce using rule 37 (operation -> number .)
    EQUALS          reduce using rule 37 (operation -> number .)
    NOTEQUALS       reduce using rule 37 (operation -> number .)
    RPAREN          reduce using rule 37 (operation -> number .)


state 31

    (38) operation -> matrix .

    PLUS            reduce using rule 38 (operation -> matrix .)
    MINUS           reduce using rule 38 (operation -> matrix .)
    TIMES           reduce using rule 38 (operation -> matrix .)
    DIVIDE          reduce using rule 38 (operation -> matrix .)
    DOTADD          reduce using rule 38 (operation -> matrix .)
    DOTSUB          reduce using rule 38 (operation -> matrix .)
    DOTMUL          reduce using rule 38 (operation -> matrix .)
    DOTDIV          reduce using rule 38 (operation -> matrix .)
    TRANSPOSE       reduce using rule 38 (operation -> matrix .)
    COMMA           reduce using rule 38 (operation -> matrix .)
    SEMICOLON       reduce using rule 38 (operation -> matrix .)
    MORE            reduce using rule 38 (operation -> matrix .)
    LESS            reduce using rule 38 (operation -> matrix .)
    MOREOREQ        reduce using rule 38 (operation -> matrix .)
    LESSOREQ        reduce using rule 38 (operation -> matrix .)
    EQUALS          reduce using rule 38 (operation -> matrix .)
    NOTEQUALS       reduce using rule 38 (operation -> matrix .)
    RPAREN          reduce using rule 38 (operation -> matrix .)


state 32

    (60) number -> INT .

    PLUS            reduce using rule 60 (number -> INT .)
    MINUS           reduce using rule 60 (number -> INT .)
    TIMES           reduce using rule 60 (number -> INT .)
    DIVIDE          reduce using rule 60 (number -> INT .)
    DOTADD          reduce using rule 60 (number -> INT .)
    DOTSUB          reduce using rule 60 (number -> INT .)
    DOTMUL          reduce using rule 60 (number -> INT .)
    DOTDIV          reduce using rule 60 (number -> INT .)
    TRANSPOSE       reduce using rule 60 (number -> INT .)
    COMMA           reduce using rule 60 (number -> INT .)
    SEMICOLON       reduce using rule 60 (number -> INT .)
    MORE            reduce using rule 60 (number -> INT .)
    LESS            reduce using rule 60 (number -> INT .)
    MOREOREQ        reduce using rule 60 (number -> INT .)
    LESSOREQ        reduce using rule 60 (number -> INT .)
    EQUALS          reduce using rule 60 (number -> INT .)
    NOTEQUALS       reduce using rule 60 (number -> INT .)
    RPAREN          reduce using rule 60 (number -> INT .)
    RSQUAR          reduce using rule 60 (number -> INT .)


state 33

    (61) number -> FLOAT .

    PLUS            reduce using rule 61 (number -> FLOAT .)
    MINUS           reduce using rule 61 (number -> FLOAT .)
    TIMES           reduce using rule 61 (number -> FLOAT .)
    DIVIDE          reduce using rule 61 (number -> FLOAT .)
    DOTADD          reduce using rule 61 (number -> FLOAT .)
    DOTSUB          reduce using rule 61 (number -> FLOAT .)
    DOTMUL          reduce using rule 61 (number -> FLOAT .)
    DOTDIV          reduce using rule 61 (number -> FLOAT .)
    TRANSPOSE       reduce using rule 61 (number -> FLOAT .)
    COMMA           reduce using rule 61 (number -> FLOAT .)
    SEMICOLON       reduce using rule 61 (number -> FLOAT .)
    MORE            reduce using rule 61 (number -> FLOAT .)
    LESS            reduce using rule 61 (number -> FLOAT .)
    MOREOREQ        reduce using rule 61 (number -> FLOAT .)
    LESSOREQ        reduce using rule 61 (number -> FLOAT .)
    EQUALS          reduce using rule 61 (number -> FLOAT .)
    NOTEQUALS       reduce using rule 61 (number -> FLOAT .)
    RPAREN          reduce using rule 61 (number -> FLOAT .)
    RSQUAR          reduce using rule 61 (number -> FLOAT .)


state 34

    (54) matrix -> LSQUAR . row RSQUAR
    (55) row -> . row COMMA vector
    (56) row -> . vector
    (57) vector -> . LSQUAR elem RSQUAR

    LSQUAR          shift and go to state 38

    row                            shift and go to state 61
    vector                         shift and go to state 62

state 35

    (12) line -> RETURN print_state .

    SEMICOLON       reduce using rule 12 (line -> RETURN print_state .)


state 36

    (51) for_state -> FOR ID . ASSIGN forable COLON forable instruction

    ASSIGN          shift and go to state 63


state 37

    (46) object -> ID vector .

    ASSIGN          reduce using rule 46 (object -> ID vector .)
    ADDASSIGN       reduce using rule 46 (object -> ID vector .)
    SUBASSIGN       reduce using rule 46 (object -> ID vector .)
    MULASSIGN       reduce using rule 46 (object -> ID vector .)
    DIVASSIGN       reduce using rule 46 (object -> ID vector .)
    PLUS            reduce using rule 46 (object -> ID vector .)
    MINUS           reduce using rule 46 (object -> ID vector .)
    TIMES           reduce using rule 46 (object -> ID vector .)
    DIVIDE          reduce using rule 46 (object -> ID vector .)
    DOTADD          reduce using rule 46 (object -> ID vector .)
    DOTSUB          reduce using rule 46 (object -> ID vector .)
    DOTMUL          reduce using rule 46 (object -> ID vector .)
    DOTDIV          reduce using rule 46 (object -> ID vector .)
    TRANSPOSE       reduce using rule 46 (object -> ID vector .)
    COMMA           reduce using rule 46 (object -> ID vector .)
    SEMICOLON       reduce using rule 46 (object -> ID vector .)
    MORE            reduce using rule 46 (object -> ID vector .)
    LESS            reduce using rule 46 (object -> ID vector .)
    MOREOREQ        reduce using rule 46 (object -> ID vector .)
    LESSOREQ        reduce using rule 46 (object -> ID vector .)
    EQUALS          reduce using rule 46 (object -> ID vector .)
    NOTEQUALS       reduce using rule 46 (object -> ID vector .)
    RPAREN          reduce using rule 46 (object -> ID vector .)
    COLON           reduce using rule 46 (object -> ID vector .)
    LCURLY          reduce using rule 46 (object -> ID vector .)
    PRINT           reduce using rule 46 (object -> ID vector .)
    BREAK           reduce using rule 46 (object -> ID vector .)
    CONTINUE        reduce using rule 46 (object -> ID vector .)
    RETURN          reduce using rule 46 (object -> ID vector .)
    FOR             reduce using rule 46 (object -> ID vector .)
    IF              reduce using rule 46 (object -> ID vector .)
    WHILE           reduce using rule 46 (object -> ID vector .)
    ID              reduce using rule 46 (object -> ID vector .)


state 38

    (57) vector -> LSQUAR . elem RSQUAR
    (58) elem -> . elem COMMA number
    (59) elem -> . number
    (60) number -> . INT
    (61) number -> . FLOAT

    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    elem                           shift and go to state 64
    number                         shift and go to state 65

state 39

    (48) ifelse_state -> IF LPAREN . bool RPAREN instruction
    (49) ifelse_state -> IF LPAREN . bool RPAREN instruction ELSE instruction
    (39) bool -> . LPAREN bool RPAREN
    (40) bool -> . operation MORE operation
    (41) bool -> . operation LESS operation
    (42) bool -> . operation MOREOREQ operation
    (43) bool -> . operation LESSOREQ operation
    (44) bool -> . operation EQUALS operation
    (45) bool -> . operation NOTEQUALS operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 66
    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    bool                           shift and go to state 67
    operation                      shift and go to state 68
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 40

    (50) while_state -> WHILE LPAREN . bool RPAREN instruction
    (39) bool -> . LPAREN bool RPAREN
    (40) bool -> . operation MORE operation
    (41) bool -> . operation LESS operation
    (42) bool -> . operation MOREOREQ operation
    (43) bool -> . operation LESSOREQ operation
    (44) bool -> . operation EQUALS operation
    (45) bool -> . operation NOTEQUALS operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 66
    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    bool                           shift and go to state 69
    operation                      shift and go to state 68
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 41

    (18) assign -> object ASSIGN . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    object                         shift and go to state 29
    operation                      shift and go to state 70
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 42

    (19) assign -> object ADDASSIGN . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    object                         shift and go to state 29
    operation                      shift and go to state 71
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 43

    (20) assign -> object SUBASSIGN . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    object                         shift and go to state 29
    operation                      shift and go to state 72
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 44

    (21) assign -> object MULASSIGN . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    object                         shift and go to state 29
    operation                      shift and go to state 73
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 45

    (22) assign -> object DIVASSIGN . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    object                         shift and go to state 29
    operation                      shift and go to state 74
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 46

    (3) instruction -> LCURLY expression RCURLY .

    LCURLY          reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    PRINT           reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    BREAK           reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    CONTINUE        reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    RETURN          reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    FOR             reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    IF              reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    WHILE           reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    ID              reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    $end            reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    RCURLY          reduce using rule 3 (instruction -> LCURLY expression RCURLY .)
    ELSE            reduce using rule 3 (instruction -> LCURLY expression RCURLY .)


state 47

    (14) print_state -> printable COMMA . print_state
    (14) print_state -> . printable COMMA print_state
    (15) print_state -> . printable
    (16) printable -> . operation
    (17) printable -> . STRING
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    STRING          shift and go to state 24
    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    printable                      shift and go to state 22
    print_state                    shift and go to state 75
    operation                      shift and go to state 23
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 48

    (23) operation -> operation PLUS . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 76
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 49

    (24) operation -> operation MINUS . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 77
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 50

    (25) operation -> operation TIMES . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 78
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 51

    (26) operation -> operation DIVIDE . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 79
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 52

    (27) operation -> operation DOTADD . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 80
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 53

    (28) operation -> operation DOTSUB . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 81
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 54

    (29) operation -> operation DOTMUL . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 82
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 55

    (30) operation -> operation DOTDIV . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 83
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 56

    (32) operation -> operation TRANSPOSE .

    PLUS            reduce using rule 32 (operation -> operation TRANSPOSE .)
    MINUS           reduce using rule 32 (operation -> operation TRANSPOSE .)
    TIMES           reduce using rule 32 (operation -> operation TRANSPOSE .)
    DIVIDE          reduce using rule 32 (operation -> operation TRANSPOSE .)
    DOTADD          reduce using rule 32 (operation -> operation TRANSPOSE .)
    DOTSUB          reduce using rule 32 (operation -> operation TRANSPOSE .)
    DOTMUL          reduce using rule 32 (operation -> operation TRANSPOSE .)
    DOTDIV          reduce using rule 32 (operation -> operation TRANSPOSE .)
    TRANSPOSE       reduce using rule 32 (operation -> operation TRANSPOSE .)
    COMMA           reduce using rule 32 (operation -> operation TRANSPOSE .)
    SEMICOLON       reduce using rule 32 (operation -> operation TRANSPOSE .)
    MORE            reduce using rule 32 (operation -> operation TRANSPOSE .)
    LESS            reduce using rule 32 (operation -> operation TRANSPOSE .)
    MOREOREQ        reduce using rule 32 (operation -> operation TRANSPOSE .)
    LESSOREQ        reduce using rule 32 (operation -> operation TRANSPOSE .)
    EQUALS          reduce using rule 32 (operation -> operation TRANSPOSE .)
    NOTEQUALS       reduce using rule 32 (operation -> operation TRANSPOSE .)
    RPAREN          reduce using rule 32 (operation -> operation TRANSPOSE .)


state 57

    (31) operation -> MINUS operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 31 (operation -> MINUS operation .)
    MINUS           reduce using rule 31 (operation -> MINUS operation .)
    TIMES           reduce using rule 31 (operation -> MINUS operation .)
    DIVIDE          reduce using rule 31 (operation -> MINUS operation .)
    DOTADD          reduce using rule 31 (operation -> MINUS operation .)
    DOTSUB          reduce using rule 31 (operation -> MINUS operation .)
    DOTMUL          reduce using rule 31 (operation -> MINUS operation .)
    DOTDIV          reduce using rule 31 (operation -> MINUS operation .)
    COMMA           reduce using rule 31 (operation -> MINUS operation .)
    SEMICOLON       reduce using rule 31 (operation -> MINUS operation .)
    MORE            reduce using rule 31 (operation -> MINUS operation .)
    LESS            reduce using rule 31 (operation -> MINUS operation .)
    MOREOREQ        reduce using rule 31 (operation -> MINUS operation .)
    LESSOREQ        reduce using rule 31 (operation -> MINUS operation .)
    EQUALS          reduce using rule 31 (operation -> MINUS operation .)
    NOTEQUALS       reduce using rule 31 (operation -> MINUS operation .)
    RPAREN          reduce using rule 31 (operation -> MINUS operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 31 (operation -> MINUS operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 58

    (33) operation -> EYE LPAREN . operation RPAREN
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 84
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 59

    (34) operation -> ZEROS LPAREN . operation RPAREN
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 85
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 60

    (35) operation -> ONES LPAREN . operation RPAREN
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 86
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 61

    (54) matrix -> LSQUAR row . RSQUAR
    (55) row -> row . COMMA vector

    RSQUAR          shift and go to state 87
    COMMA           shift and go to state 88


state 62

    (56) row -> vector .

    RSQUAR          reduce using rule 56 (row -> vector .)
    COMMA           reduce using rule 56 (row -> vector .)


state 63

    (51) for_state -> FOR ID ASSIGN . forable COLON forable instruction
    (52) forable -> . object
    (53) forable -> . INT
    (46) object -> . ID vector
    (47) object -> . ID

    INT             shift and go to state 91
    ID              shift and go to state 14

    forable                        shift and go to state 89
    object                         shift and go to state 90

state 64

    (57) vector -> LSQUAR elem . RSQUAR
    (58) elem -> elem . COMMA number

    RSQUAR          shift and go to state 92
    COMMA           shift and go to state 93


state 65

    (59) elem -> number .

    RSQUAR          reduce using rule 59 (elem -> number .)
    COMMA           reduce using rule 59 (elem -> number .)


state 66

    (39) bool -> LPAREN . bool RPAREN
    (39) bool -> . LPAREN bool RPAREN
    (40) bool -> . operation MORE operation
    (41) bool -> . operation LESS operation
    (42) bool -> . operation MOREOREQ operation
    (43) bool -> . operation LESSOREQ operation
    (44) bool -> . operation EQUALS operation
    (45) bool -> . operation NOTEQUALS operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    LPAREN          shift and go to state 66
    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    bool                           shift and go to state 94
    operation                      shift and go to state 68
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 67

    (48) ifelse_state -> IF LPAREN bool . RPAREN instruction
    (49) ifelse_state -> IF LPAREN bool . RPAREN instruction ELSE instruction

    RPAREN          shift and go to state 95


state 68

    (40) bool -> operation . MORE operation
    (41) bool -> operation . LESS operation
    (42) bool -> operation . MOREOREQ operation
    (43) bool -> operation . LESSOREQ operation
    (44) bool -> operation . EQUALS operation
    (45) bool -> operation . NOTEQUALS operation
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    MORE            shift and go to state 96
    LESS            shift and go to state 97
    MOREOREQ        shift and go to state 98
    LESSOREQ        shift and go to state 99
    EQUALS          shift and go to state 100
    NOTEQUALS       shift and go to state 101
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 69

    (50) while_state -> WHILE LPAREN bool . RPAREN instruction

    RPAREN          shift and go to state 102


state 70

    (18) assign -> object ASSIGN operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 18 (assign -> object ASSIGN operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 71

    (19) assign -> object ADDASSIGN operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 19 (assign -> object ADDASSIGN operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 72

    (20) assign -> object SUBASSIGN operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 20 (assign -> object SUBASSIGN operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 73

    (21) assign -> object MULASSIGN operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 21 (assign -> object MULASSIGN operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 74

    (22) assign -> object DIVASSIGN operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    SEMICOLON       reduce using rule 22 (assign -> object DIVASSIGN operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 75

    (14) print_state -> printable COMMA print_state .

    SEMICOLON       reduce using rule 14 (print_state -> printable COMMA print_state .)


state 76

    (23) operation -> operation PLUS operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 23 (operation -> operation PLUS operation .)
    MINUS           reduce using rule 23 (operation -> operation PLUS operation .)
    TIMES           reduce using rule 23 (operation -> operation PLUS operation .)
    DIVIDE          reduce using rule 23 (operation -> operation PLUS operation .)
    DOTADD          reduce using rule 23 (operation -> operation PLUS operation .)
    DOTSUB          reduce using rule 23 (operation -> operation PLUS operation .)
    DOTMUL          reduce using rule 23 (operation -> operation PLUS operation .)
    DOTDIV          reduce using rule 23 (operation -> operation PLUS operation .)
    COMMA           reduce using rule 23 (operation -> operation PLUS operation .)
    SEMICOLON       reduce using rule 23 (operation -> operation PLUS operation .)
    MORE            reduce using rule 23 (operation -> operation PLUS operation .)
    LESS            reduce using rule 23 (operation -> operation PLUS operation .)
    MOREOREQ        reduce using rule 23 (operation -> operation PLUS operation .)
    LESSOREQ        reduce using rule 23 (operation -> operation PLUS operation .)
    EQUALS          reduce using rule 23 (operation -> operation PLUS operation .)
    NOTEQUALS       reduce using rule 23 (operation -> operation PLUS operation .)
    RPAREN          reduce using rule 23 (operation -> operation PLUS operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 23 (operation -> operation PLUS operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 77

    (24) operation -> operation MINUS operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 24 (operation -> operation MINUS operation .)
    MINUS           reduce using rule 24 (operation -> operation MINUS operation .)
    TIMES           reduce using rule 24 (operation -> operation MINUS operation .)
    DIVIDE          reduce using rule 24 (operation -> operation MINUS operation .)
    DOTADD          reduce using rule 24 (operation -> operation MINUS operation .)
    DOTSUB          reduce using rule 24 (operation -> operation MINUS operation .)
    DOTMUL          reduce using rule 24 (operation -> operation MINUS operation .)
    DOTDIV          reduce using rule 24 (operation -> operation MINUS operation .)
    COMMA           reduce using rule 24 (operation -> operation MINUS operation .)
    SEMICOLON       reduce using rule 24 (operation -> operation MINUS operation .)
    MORE            reduce using rule 24 (operation -> operation MINUS operation .)
    LESS            reduce using rule 24 (operation -> operation MINUS operation .)
    MOREOREQ        reduce using rule 24 (operation -> operation MINUS operation .)
    LESSOREQ        reduce using rule 24 (operation -> operation MINUS operation .)
    EQUALS          reduce using rule 24 (operation -> operation MINUS operation .)
    NOTEQUALS       reduce using rule 24 (operation -> operation MINUS operation .)
    RPAREN          reduce using rule 24 (operation -> operation MINUS operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 24 (operation -> operation MINUS operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 78

    (25) operation -> operation TIMES operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 25 (operation -> operation TIMES operation .)
    MINUS           reduce using rule 25 (operation -> operation TIMES operation .)
    TIMES           reduce using rule 25 (operation -> operation TIMES operation .)
    DIVIDE          reduce using rule 25 (operation -> operation TIMES operation .)
    DOTADD          reduce using rule 25 (operation -> operation TIMES operation .)
    DOTSUB          reduce using rule 25 (operation -> operation TIMES operation .)
    DOTMUL          reduce using rule 25 (operation -> operation TIMES operation .)
    DOTDIV          reduce using rule 25 (operation -> operation TIMES operation .)
    COMMA           reduce using rule 25 (operation -> operation TIMES operation .)
    SEMICOLON       reduce using rule 25 (operation -> operation TIMES operation .)
    MORE            reduce using rule 25 (operation -> operation TIMES operation .)
    LESS            reduce using rule 25 (operation -> operation TIMES operation .)
    MOREOREQ        reduce using rule 25 (operation -> operation TIMES operation .)
    LESSOREQ        reduce using rule 25 (operation -> operation TIMES operation .)
    EQUALS          reduce using rule 25 (operation -> operation TIMES operation .)
    NOTEQUALS       reduce using rule 25 (operation -> operation TIMES operation .)
    RPAREN          reduce using rule 25 (operation -> operation TIMES operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 25 (operation -> operation TIMES operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 79

    (26) operation -> operation DIVIDE operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 26 (operation -> operation DIVIDE operation .)
    MINUS           reduce using rule 26 (operation -> operation DIVIDE operation .)
    TIMES           reduce using rule 26 (operation -> operation DIVIDE operation .)
    DIVIDE          reduce using rule 26 (operation -> operation DIVIDE operation .)
    DOTADD          reduce using rule 26 (operation -> operation DIVIDE operation .)
    DOTSUB          reduce using rule 26 (operation -> operation DIVIDE operation .)
    DOTMUL          reduce using rule 26 (operation -> operation DIVIDE operation .)
    DOTDIV          reduce using rule 26 (operation -> operation DIVIDE operation .)
    COMMA           reduce using rule 26 (operation -> operation DIVIDE operation .)
    SEMICOLON       reduce using rule 26 (operation -> operation DIVIDE operation .)
    MORE            reduce using rule 26 (operation -> operation DIVIDE operation .)
    LESS            reduce using rule 26 (operation -> operation DIVIDE operation .)
    MOREOREQ        reduce using rule 26 (operation -> operation DIVIDE operation .)
    LESSOREQ        reduce using rule 26 (operation -> operation DIVIDE operation .)
    EQUALS          reduce using rule 26 (operation -> operation DIVIDE operation .)
    NOTEQUALS       reduce using rule 26 (operation -> operation DIVIDE operation .)
    RPAREN          reduce using rule 26 (operation -> operation DIVIDE operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 26 (operation -> operation DIVIDE operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 80

    (27) operation -> operation DOTADD operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 27 (operation -> operation DOTADD operation .)
    MINUS           reduce using rule 27 (operation -> operation DOTADD operation .)
    TIMES           reduce using rule 27 (operation -> operation DOTADD operation .)
    DIVIDE          reduce using rule 27 (operation -> operation DOTADD operation .)
    DOTADD          reduce using rule 27 (operation -> operation DOTADD operation .)
    DOTSUB          reduce using rule 27 (operation -> operation DOTADD operation .)
    DOTMUL          reduce using rule 27 (operation -> operation DOTADD operation .)
    DOTDIV          reduce using rule 27 (operation -> operation DOTADD operation .)
    COMMA           reduce using rule 27 (operation -> operation DOTADD operation .)
    SEMICOLON       reduce using rule 27 (operation -> operation DOTADD operation .)
    MORE            reduce using rule 27 (operation -> operation DOTADD operation .)
    LESS            reduce using rule 27 (operation -> operation DOTADD operation .)
    MOREOREQ        reduce using rule 27 (operation -> operation DOTADD operation .)
    LESSOREQ        reduce using rule 27 (operation -> operation DOTADD operation .)
    EQUALS          reduce using rule 27 (operation -> operation DOTADD operation .)
    NOTEQUALS       reduce using rule 27 (operation -> operation DOTADD operation .)
    RPAREN          reduce using rule 27 (operation -> operation DOTADD operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 27 (operation -> operation DOTADD operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 81

    (28) operation -> operation DOTSUB operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 28 (operation -> operation DOTSUB operation .)
    MINUS           reduce using rule 28 (operation -> operation DOTSUB operation .)
    TIMES           reduce using rule 28 (operation -> operation DOTSUB operation .)
    DIVIDE          reduce using rule 28 (operation -> operation DOTSUB operation .)
    DOTADD          reduce using rule 28 (operation -> operation DOTSUB operation .)
    DOTSUB          reduce using rule 28 (operation -> operation DOTSUB operation .)
    DOTMUL          reduce using rule 28 (operation -> operation DOTSUB operation .)
    DOTDIV          reduce using rule 28 (operation -> operation DOTSUB operation .)
    COMMA           reduce using rule 28 (operation -> operation DOTSUB operation .)
    SEMICOLON       reduce using rule 28 (operation -> operation DOTSUB operation .)
    MORE            reduce using rule 28 (operation -> operation DOTSUB operation .)
    LESS            reduce using rule 28 (operation -> operation DOTSUB operation .)
    MOREOREQ        reduce using rule 28 (operation -> operation DOTSUB operation .)
    LESSOREQ        reduce using rule 28 (operation -> operation DOTSUB operation .)
    EQUALS          reduce using rule 28 (operation -> operation DOTSUB operation .)
    NOTEQUALS       reduce using rule 28 (operation -> operation DOTSUB operation .)
    RPAREN          reduce using rule 28 (operation -> operation DOTSUB operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 28 (operation -> operation DOTSUB operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 82

    (29) operation -> operation DOTMUL operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 29 (operation -> operation DOTMUL operation .)
    MINUS           reduce using rule 29 (operation -> operation DOTMUL operation .)
    TIMES           reduce using rule 29 (operation -> operation DOTMUL operation .)
    DIVIDE          reduce using rule 29 (operation -> operation DOTMUL operation .)
    DOTADD          reduce using rule 29 (operation -> operation DOTMUL operation .)
    DOTSUB          reduce using rule 29 (operation -> operation DOTMUL operation .)
    DOTMUL          reduce using rule 29 (operation -> operation DOTMUL operation .)
    DOTDIV          reduce using rule 29 (operation -> operation DOTMUL operation .)
    COMMA           reduce using rule 29 (operation -> operation DOTMUL operation .)
    SEMICOLON       reduce using rule 29 (operation -> operation DOTMUL operation .)
    MORE            reduce using rule 29 (operation -> operation DOTMUL operation .)
    LESS            reduce using rule 29 (operation -> operation DOTMUL operation .)
    MOREOREQ        reduce using rule 29 (operation -> operation DOTMUL operation .)
    LESSOREQ        reduce using rule 29 (operation -> operation DOTMUL operation .)
    EQUALS          reduce using rule 29 (operation -> operation DOTMUL operation .)
    NOTEQUALS       reduce using rule 29 (operation -> operation DOTMUL operation .)
    RPAREN          reduce using rule 29 (operation -> operation DOTMUL operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 29 (operation -> operation DOTMUL operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 83

    (30) operation -> operation DOTDIV operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    PLUS            reduce using rule 30 (operation -> operation DOTDIV operation .)
    MINUS           reduce using rule 30 (operation -> operation DOTDIV operation .)
    TIMES           reduce using rule 30 (operation -> operation DOTDIV operation .)
    DIVIDE          reduce using rule 30 (operation -> operation DOTDIV operation .)
    DOTADD          reduce using rule 30 (operation -> operation DOTDIV operation .)
    DOTSUB          reduce using rule 30 (operation -> operation DOTDIV operation .)
    DOTMUL          reduce using rule 30 (operation -> operation DOTDIV operation .)
    DOTDIV          reduce using rule 30 (operation -> operation DOTDIV operation .)
    COMMA           reduce using rule 30 (operation -> operation DOTDIV operation .)
    SEMICOLON       reduce using rule 30 (operation -> operation DOTDIV operation .)
    MORE            reduce using rule 30 (operation -> operation DOTDIV operation .)
    LESS            reduce using rule 30 (operation -> operation DOTDIV operation .)
    MOREOREQ        reduce using rule 30 (operation -> operation DOTDIV operation .)
    LESSOREQ        reduce using rule 30 (operation -> operation DOTDIV operation .)
    EQUALS          reduce using rule 30 (operation -> operation DOTDIV operation .)
    NOTEQUALS       reduce using rule 30 (operation -> operation DOTDIV operation .)
    RPAREN          reduce using rule 30 (operation -> operation DOTDIV operation .)
    TRANSPOSE       shift and go to state 56

  ! TRANSPOSE       [ reduce using rule 30 (operation -> operation DOTDIV operation .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! DOTADD          [ shift and go to state 52 ]
  ! DOTSUB          [ shift and go to state 53 ]
  ! DOTMUL          [ shift and go to state 54 ]
  ! DOTDIV          [ shift and go to state 55 ]


state 84

    (33) operation -> EYE LPAREN operation . RPAREN
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    RPAREN          shift and go to state 103
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 85

    (34) operation -> ZEROS LPAREN operation . RPAREN
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    RPAREN          shift and go to state 104
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 86

    (35) operation -> ONES LPAREN operation . RPAREN
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    RPAREN          shift and go to state 105
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 87

    (54) matrix -> LSQUAR row RSQUAR .

    PLUS            reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)
    MINUS           reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)
    TIMES           reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)
    DIVIDE          reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)
    DOTADD          reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)
    DOTSUB          reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)
    DOTMUL          reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)
    DOTDIV          reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)
    TRANSPOSE       reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)
    COMMA           reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)
    SEMICOLON       reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)
    MORE            reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)
    LESS            reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)
    MOREOREQ        reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)
    LESSOREQ        reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)
    EQUALS          reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)
    NOTEQUALS       reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)
    RPAREN          reduce using rule 54 (matrix -> LSQUAR row RSQUAR .)


state 88

    (55) row -> row COMMA . vector
    (57) vector -> . LSQUAR elem RSQUAR

    LSQUAR          shift and go to state 38

    vector                         shift and go to state 106

state 89

    (51) for_state -> FOR ID ASSIGN forable . COLON forable instruction

    COLON           shift and go to state 107


state 90

    (52) forable -> object .

    COLON           reduce using rule 52 (forable -> object .)
    LCURLY          reduce using rule 52 (forable -> object .)
    PRINT           reduce using rule 52 (forable -> object .)
    BREAK           reduce using rule 52 (forable -> object .)
    CONTINUE        reduce using rule 52 (forable -> object .)
    RETURN          reduce using rule 52 (forable -> object .)
    FOR             reduce using rule 52 (forable -> object .)
    IF              reduce using rule 52 (forable -> object .)
    WHILE           reduce using rule 52 (forable -> object .)
    ID              reduce using rule 52 (forable -> object .)


state 91

    (53) forable -> INT .

    COLON           reduce using rule 53 (forable -> INT .)
    LCURLY          reduce using rule 53 (forable -> INT .)
    PRINT           reduce using rule 53 (forable -> INT .)
    BREAK           reduce using rule 53 (forable -> INT .)
    CONTINUE        reduce using rule 53 (forable -> INT .)
    RETURN          reduce using rule 53 (forable -> INT .)
    FOR             reduce using rule 53 (forable -> INT .)
    IF              reduce using rule 53 (forable -> INT .)
    WHILE           reduce using rule 53 (forable -> INT .)
    ID              reduce using rule 53 (forable -> INT .)


state 92

    (57) vector -> LSQUAR elem RSQUAR .

    ASSIGN          reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    ADDASSIGN       reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    SUBASSIGN       reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    MULASSIGN       reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    DIVASSIGN       reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    PLUS            reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    MINUS           reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    TIMES           reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    DIVIDE          reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    DOTADD          reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    DOTSUB          reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    DOTMUL          reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    DOTDIV          reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    TRANSPOSE       reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    COMMA           reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    SEMICOLON       reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    MORE            reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    LESS            reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    MOREOREQ        reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    LESSOREQ        reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    EQUALS          reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    NOTEQUALS       reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    RPAREN          reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    COLON           reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    LCURLY          reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    PRINT           reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    BREAK           reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    CONTINUE        reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    RETURN          reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    FOR             reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    IF              reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    WHILE           reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    ID              reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)
    RSQUAR          reduce using rule 57 (vector -> LSQUAR elem RSQUAR .)


state 93

    (58) elem -> elem COMMA . number
    (60) number -> . INT
    (61) number -> . FLOAT

    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    number                         shift and go to state 108

state 94

    (39) bool -> LPAREN bool . RPAREN

    RPAREN          shift and go to state 109


state 95

    (48) ifelse_state -> IF LPAREN bool RPAREN . instruction
    (49) ifelse_state -> IF LPAREN bool RPAREN . instruction ELSE instruction
    (3) instruction -> . LCURLY expression RCURLY
    (4) instruction -> . line SEMICOLON
    (5) instruction -> . for_state
    (6) instruction -> . ifelse_state
    (7) instruction -> . while_state
    (8) line -> . assign
    (9) line -> . PRINT print_state
    (10) line -> . BREAK
    (11) line -> . CONTINUE
    (12) line -> . RETURN print_state
    (13) line -> . RETURN
    (51) for_state -> . FOR ID ASSIGN forable COLON forable instruction
    (48) ifelse_state -> . IF LPAREN bool RPAREN instruction
    (49) ifelse_state -> . IF LPAREN bool RPAREN instruction ELSE instruction
    (50) while_state -> . WHILE LPAREN bool RPAREN instruction
    (18) assign -> . object ASSIGN operation
    (19) assign -> . object ADDASSIGN operation
    (20) assign -> . object SUBASSIGN operation
    (21) assign -> . object MULASSIGN operation
    (22) assign -> . object DIVASSIGN operation
    (46) object -> . ID vector
    (47) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    instruction                    shift and go to state 110
    line                           shift and go to state 4
    for_state                      shift and go to state 5
    ifelse_state                   shift and go to state 6
    while_state                    shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 96

    (40) bool -> operation MORE . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 111
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 97

    (41) bool -> operation LESS . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 112
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 98

    (42) bool -> operation MOREOREQ . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 113
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 99

    (43) bool -> operation LESSOREQ . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 114
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 100

    (44) bool -> operation EQUALS . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 115
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 101

    (45) bool -> operation NOTEQUALS . operation
    (23) operation -> . operation PLUS operation
    (24) operation -> . operation MINUS operation
    (25) operation -> . operation TIMES operation
    (26) operation -> . operation DIVIDE operation
    (27) operation -> . operation DOTADD operation
    (28) operation -> . operation DOTSUB operation
    (29) operation -> . operation DOTMUL operation
    (30) operation -> . operation DOTDIV operation
    (31) operation -> . MINUS operation
    (32) operation -> . operation TRANSPOSE
    (33) operation -> . EYE LPAREN operation RPAREN
    (34) operation -> . ZEROS LPAREN operation RPAREN
    (35) operation -> . ONES LPAREN operation RPAREN
    (36) operation -> . object
    (37) operation -> . number
    (38) operation -> . matrix
    (46) object -> . ID vector
    (47) object -> . ID
    (60) number -> . INT
    (61) number -> . FLOAT
    (54) matrix -> . LSQUAR row RSQUAR

    MINUS           shift and go to state 25
    EYE             shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 28
    ID              shift and go to state 14
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    LSQUAR          shift and go to state 34

    operation                      shift and go to state 116
    object                         shift and go to state 29
    number                         shift and go to state 30
    matrix                         shift and go to state 31

state 102

    (50) while_state -> WHILE LPAREN bool RPAREN . instruction
    (3) instruction -> . LCURLY expression RCURLY
    (4) instruction -> . line SEMICOLON
    (5) instruction -> . for_state
    (6) instruction -> . ifelse_state
    (7) instruction -> . while_state
    (8) line -> . assign
    (9) line -> . PRINT print_state
    (10) line -> . BREAK
    (11) line -> . CONTINUE
    (12) line -> . RETURN print_state
    (13) line -> . RETURN
    (51) for_state -> . FOR ID ASSIGN forable COLON forable instruction
    (48) ifelse_state -> . IF LPAREN bool RPAREN instruction
    (49) ifelse_state -> . IF LPAREN bool RPAREN instruction ELSE instruction
    (50) while_state -> . WHILE LPAREN bool RPAREN instruction
    (18) assign -> . object ASSIGN operation
    (19) assign -> . object ADDASSIGN operation
    (20) assign -> . object SUBASSIGN operation
    (21) assign -> . object MULASSIGN operation
    (22) assign -> . object DIVASSIGN operation
    (46) object -> . ID vector
    (47) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    instruction                    shift and go to state 117
    line                           shift and go to state 4
    for_state                      shift and go to state 5
    ifelse_state                   shift and go to state 6
    while_state                    shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 103

    (33) operation -> EYE LPAREN operation RPAREN .

    PLUS            reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)
    MINUS           reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)
    TIMES           reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)
    DIVIDE          reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)
    DOTADD          reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)
    DOTSUB          reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)
    DOTMUL          reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)
    DOTDIV          reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)
    TRANSPOSE       reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)
    COMMA           reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)
    SEMICOLON       reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)
    MORE            reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)
    LESS            reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)
    MOREOREQ        reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)
    LESSOREQ        reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)
    EQUALS          reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)
    NOTEQUALS       reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)
    RPAREN          reduce using rule 33 (operation -> EYE LPAREN operation RPAREN .)


state 104

    (34) operation -> ZEROS LPAREN operation RPAREN .

    PLUS            reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)
    MINUS           reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)
    TIMES           reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)
    DIVIDE          reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)
    DOTADD          reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)
    DOTSUB          reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)
    DOTMUL          reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)
    DOTDIV          reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)
    TRANSPOSE       reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)
    COMMA           reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)
    SEMICOLON       reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)
    MORE            reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)
    LESS            reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)
    MOREOREQ        reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)
    LESSOREQ        reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)
    EQUALS          reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)
    NOTEQUALS       reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)
    RPAREN          reduce using rule 34 (operation -> ZEROS LPAREN operation RPAREN .)


state 105

    (35) operation -> ONES LPAREN operation RPAREN .

    PLUS            reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)
    MINUS           reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)
    TIMES           reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)
    DIVIDE          reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)
    DOTADD          reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)
    DOTSUB          reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)
    DOTMUL          reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)
    DOTDIV          reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)
    TRANSPOSE       reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)
    COMMA           reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)
    SEMICOLON       reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)
    MORE            reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)
    LESS            reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)
    MOREOREQ        reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)
    LESSOREQ        reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)
    EQUALS          reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)
    NOTEQUALS       reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)
    RPAREN          reduce using rule 35 (operation -> ONES LPAREN operation RPAREN .)


state 106

    (55) row -> row COMMA vector .

    RSQUAR          reduce using rule 55 (row -> row COMMA vector .)
    COMMA           reduce using rule 55 (row -> row COMMA vector .)


state 107

    (51) for_state -> FOR ID ASSIGN forable COLON . forable instruction
    (52) forable -> . object
    (53) forable -> . INT
    (46) object -> . ID vector
    (47) object -> . ID

    INT             shift and go to state 91
    ID              shift and go to state 14

    forable                        shift and go to state 118
    object                         shift and go to state 90

state 108

    (58) elem -> elem COMMA number .

    RSQUAR          reduce using rule 58 (elem -> elem COMMA number .)
    COMMA           reduce using rule 58 (elem -> elem COMMA number .)


state 109

    (39) bool -> LPAREN bool RPAREN .

    RPAREN          reduce using rule 39 (bool -> LPAREN bool RPAREN .)


state 110

    (48) ifelse_state -> IF LPAREN bool RPAREN instruction .
    (49) ifelse_state -> IF LPAREN bool RPAREN instruction . ELSE instruction

  ! shift/reduce conflict for ELSE resolved as shift
    LCURLY          reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    PRINT           reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    BREAK           reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    CONTINUE        reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    RETURN          reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    FOR             reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    IF              reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    WHILE           reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    ID              reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    $end            reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    RCURLY          reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction .)
    ELSE            shift and go to state 119

  ! ELSE            [ reduce using rule 48 (ifelse_state -> IF LPAREN bool RPAREN instruction .) ]


state 111

    (40) bool -> operation MORE operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 40 (bool -> operation MORE operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 112

    (41) bool -> operation LESS operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 41 (bool -> operation LESS operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 113

    (42) bool -> operation MOREOREQ operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 42 (bool -> operation MOREOREQ operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 114

    (43) bool -> operation LESSOREQ operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 43 (bool -> operation LESSOREQ operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 115

    (44) bool -> operation EQUALS operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 44 (bool -> operation EQUALS operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 116

    (45) bool -> operation NOTEQUALS operation .
    (23) operation -> operation . PLUS operation
    (24) operation -> operation . MINUS operation
    (25) operation -> operation . TIMES operation
    (26) operation -> operation . DIVIDE operation
    (27) operation -> operation . DOTADD operation
    (28) operation -> operation . DOTSUB operation
    (29) operation -> operation . DOTMUL operation
    (30) operation -> operation . DOTDIV operation
    (32) operation -> operation . TRANSPOSE

    RPAREN          reduce using rule 45 (bool -> operation NOTEQUALS operation .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    DOTADD          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTMUL          shift and go to state 54
    DOTDIV          shift and go to state 55
    TRANSPOSE       shift and go to state 56


state 117

    (50) while_state -> WHILE LPAREN bool RPAREN instruction .

    LCURLY          reduce using rule 50 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    PRINT           reduce using rule 50 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    BREAK           reduce using rule 50 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    CONTINUE        reduce using rule 50 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    RETURN          reduce using rule 50 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    FOR             reduce using rule 50 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    IF              reduce using rule 50 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    WHILE           reduce using rule 50 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    ID              reduce using rule 50 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    $end            reduce using rule 50 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    RCURLY          reduce using rule 50 (while_state -> WHILE LPAREN bool RPAREN instruction .)
    ELSE            reduce using rule 50 (while_state -> WHILE LPAREN bool RPAREN instruction .)


state 118

    (51) for_state -> FOR ID ASSIGN forable COLON forable . instruction
    (3) instruction -> . LCURLY expression RCURLY
    (4) instruction -> . line SEMICOLON
    (5) instruction -> . for_state
    (6) instruction -> . ifelse_state
    (7) instruction -> . while_state
    (8) line -> . assign
    (9) line -> . PRINT print_state
    (10) line -> . BREAK
    (11) line -> . CONTINUE
    (12) line -> . RETURN print_state
    (13) line -> . RETURN
    (51) for_state -> . FOR ID ASSIGN forable COLON forable instruction
    (48) ifelse_state -> . IF LPAREN bool RPAREN instruction
    (49) ifelse_state -> . IF LPAREN bool RPAREN instruction ELSE instruction
    (50) while_state -> . WHILE LPAREN bool RPAREN instruction
    (18) assign -> . object ASSIGN operation
    (19) assign -> . object ADDASSIGN operation
    (20) assign -> . object SUBASSIGN operation
    (21) assign -> . object MULASSIGN operation
    (22) assign -> . object DIVASSIGN operation
    (46) object -> . ID vector
    (47) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    instruction                    shift and go to state 120
    line                           shift and go to state 4
    for_state                      shift and go to state 5
    ifelse_state                   shift and go to state 6
    while_state                    shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 119

    (49) ifelse_state -> IF LPAREN bool RPAREN instruction ELSE . instruction
    (3) instruction -> . LCURLY expression RCURLY
    (4) instruction -> . line SEMICOLON
    (5) instruction -> . for_state
    (6) instruction -> . ifelse_state
    (7) instruction -> . while_state
    (8) line -> . assign
    (9) line -> . PRINT print_state
    (10) line -> . BREAK
    (11) line -> . CONTINUE
    (12) line -> . RETURN print_state
    (13) line -> . RETURN
    (51) for_state -> . FOR ID ASSIGN forable COLON forable instruction
    (48) ifelse_state -> . IF LPAREN bool RPAREN instruction
    (49) ifelse_state -> . IF LPAREN bool RPAREN instruction ELSE instruction
    (50) while_state -> . WHILE LPAREN bool RPAREN instruction
    (18) assign -> . object ASSIGN operation
    (19) assign -> . object ADDASSIGN operation
    (20) assign -> . object SUBASSIGN operation
    (21) assign -> . object MULASSIGN operation
    (22) assign -> . object DIVASSIGN operation
    (46) object -> . ID vector
    (47) object -> . ID

    LCURLY          shift and go to state 3
    PRINT           shift and go to state 9
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    ID              shift and go to state 14

    instruction                    shift and go to state 121
    line                           shift and go to state 4
    for_state                      shift and go to state 5
    ifelse_state                   shift and go to state 6
    while_state                    shift and go to state 7
    assign                         shift and go to state 8
    object                         shift and go to state 17

state 120

    (51) for_state -> FOR ID ASSIGN forable COLON forable instruction .

    LCURLY          reduce using rule 51 (for_state -> FOR ID ASSIGN forable COLON forable instruction .)
    PRINT           reduce using rule 51 (for_state -> FOR ID ASSIGN forable COLON forable instruction .)
    BREAK           reduce using rule 51 (for_state -> FOR ID ASSIGN forable COLON forable instruction .)
    CONTINUE        reduce using rule 51 (for_state -> FOR ID ASSIGN forable COLON forable instruction .)
    RETURN          reduce using rule 51 (for_state -> FOR ID ASSIGN forable COLON forable instruction .)
    FOR             reduce using rule 51 (for_state -> FOR ID ASSIGN forable COLON forable instruction .)
    IF              reduce using rule 51 (for_state -> FOR ID ASSIGN forable COLON forable instruction .)
    WHILE           reduce using rule 51 (for_state -> FOR ID ASSIGN forable COLON forable instruction .)
    ID              reduce using rule 51 (for_state -> FOR ID ASSIGN forable COLON forable instruction .)
    $end            reduce using rule 51 (for_state -> FOR ID ASSIGN forable COLON forable instruction .)
    RCURLY          reduce using rule 51 (for_state -> FOR ID ASSIGN forable COLON forable instruction .)
    ELSE            reduce using rule 51 (for_state -> FOR ID ASSIGN forable COLON forable instruction .)


state 121

    (49) ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .

    LCURLY          reduce using rule 49 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    PRINT           reduce using rule 49 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    BREAK           reduce using rule 49 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    CONTINUE        reduce using rule 49 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    RETURN          reduce using rule 49 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    FOR             reduce using rule 49 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    IF              reduce using rule 49 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    WHILE           reduce using rule 49 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    ID              reduce using rule 49 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    $end            reduce using rule 49 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    RCURLY          reduce using rule 49 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)
    ELSE            reduce using rule 49 (ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 110 resolved as shift
