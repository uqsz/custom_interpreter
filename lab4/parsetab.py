
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftASSIGNADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNleftMORELESSMOREOREQLESSOREQEQUALSNOTEQUALSleftPLUSMINUSTIMESDIVIDEDOTADDDOTSUBDOTMULDOTDIVleftTRANSPOSEADDASSIGN ASSIGN BREAK COLON COMMA CONTINUE DIVASSIGN DIVIDE DOTADD DOTDIV DOTMUL DOTSUB ELSE EQUALS EYE FLOAT FOR ID IF INT LCURLY LESS LESSOREQ LPAREN LSQUAR MINUS MORE MOREOREQ MULASSIGN NOTEQUALS ONES PLUS PRINT RCURLY RETURN RPAREN RSQUAR SEMICOLON STRING SUBASSIGN TIMES TRANSPOSE WHILE ZEROSexpression : expression instruction\n                  | instructioninstruction : LCURLY expression RCURLY\n                  | line SEMICOLON\n                  | for_state \n                  | ifelse_state \n                  | while_state  line : assign\n            | PRINT print_state\n            | BREAK\n            | CONTINUE\n            | RETURN print_state\n            | RETURN  print_state : printable COMMA print_state \n                    | printable  printable : operation\n                | STRING  assign : object ASSIGN operation \n            | object ADDASSIGN operation \n            | object SUBASSIGN operation \n            | object MULASSIGN operation \n            | object DIVASSIGN operation  operation : operation PLUS operation\n                | operation MINUS operation \n                | operation TIMES operation \n                | operation DIVIDE operation \n                | operation DOTADD operation \n                | operation DOTSUB operation \n                | operation DOTMUL operation \n                | operation DOTDIV operation\n                | MINUS operation \n                | operation TRANSPOSE\n                | EYE LPAREN operation RPAREN\n                | ZEROS LPAREN operation RPAREN\n                | ONES LPAREN operation RPAREN\n                | object\n                | number\n                | matrix bool : LPAREN bool RPAREN \n            | operation MORE operation \n            | operation LESS operation \n            | operation MOREOREQ operation \n            | operation LESSOREQ operation \n            | operation EQUALS operation\n            | operation NOTEQUALS operation  object : ID vector\n            | ID  ifelse_state : IF LPAREN bool RPAREN instruction\n                    | IF LPAREN bool RPAREN instruction ELSE instruction while_state : WHILE LPAREN bool RPAREN instruction for_state : FOR ID ASSIGN forable COLON forable instruction  forable : object \n                | INT  matrix : LSQUAR row RSQUAR row : row COMMA vector \n                | vector  vector : LSQUAR elem RSQUAR  elem : elem COMMA number \n                | number number : INT \n            | FLOAT'
    
_lr_action_items = {'LCURLY':([0,1,2,3,5,6,7,14,18,19,20,37,46,90,91,92,95,102,110,117,118,119,120,121,],[3,3,-2,3,-5,-6,-7,-47,-1,3,-4,-46,-3,-52,-53,-57,3,3,-48,-50,3,3,-51,-49,]),'PRINT':([0,1,2,3,5,6,7,14,18,19,20,37,46,90,91,92,95,102,110,117,118,119,120,121,],[9,9,-2,9,-5,-6,-7,-47,-1,9,-4,-46,-3,-52,-53,-57,9,9,-48,-50,9,9,-51,-49,]),'BREAK':([0,1,2,3,5,6,7,14,18,19,20,37,46,90,91,92,95,102,110,117,118,119,120,121,],[10,10,-2,10,-5,-6,-7,-47,-1,10,-4,-46,-3,-52,-53,-57,10,10,-48,-50,10,10,-51,-49,]),'CONTINUE':([0,1,2,3,5,6,7,14,18,19,20,37,46,90,91,92,95,102,110,117,118,119,120,121,],[11,11,-2,11,-5,-6,-7,-47,-1,11,-4,-46,-3,-52,-53,-57,11,11,-48,-50,11,11,-51,-49,]),'RETURN':([0,1,2,3,5,6,7,14,18,19,20,37,46,90,91,92,95,102,110,117,118,119,120,121,],[12,12,-2,12,-5,-6,-7,-47,-1,12,-4,-46,-3,-52,-53,-57,12,12,-48,-50,12,12,-51,-49,]),'FOR':([0,1,2,3,5,6,7,14,18,19,20,37,46,90,91,92,95,102,110,117,118,119,120,121,],[13,13,-2,13,-5,-6,-7,-47,-1,13,-4,-46,-3,-52,-53,-57,13,13,-48,-50,13,13,-51,-49,]),'IF':([0,1,2,3,5,6,7,14,18,19,20,37,46,90,91,92,95,102,110,117,118,119,120,121,],[15,15,-2,15,-5,-6,-7,-47,-1,15,-4,-46,-3,-52,-53,-57,15,15,-48,-50,15,15,-51,-49,]),'WHILE':([0,1,2,3,5,6,7,14,18,19,20,37,46,90,91,92,95,102,110,117,118,119,120,121,],[16,16,-2,16,-5,-6,-7,-47,-1,16,-4,-46,-3,-52,-53,-57,16,16,-48,-50,16,16,-51,-49,]),'ID':([0,1,2,3,5,6,7,9,12,13,14,18,19,20,25,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,60,63,66,90,91,92,95,96,97,98,99,100,101,102,107,110,117,118,119,120,121,],[14,14,-2,14,-5,-6,-7,14,14,36,-47,-1,14,-4,14,-46,14,14,14,14,14,14,14,-3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-52,-53,-57,14,14,14,14,14,14,14,14,14,-48,-50,14,14,-51,-49,]),'$end':([1,2,5,6,7,18,20,46,110,117,120,121,],[0,-2,-5,-6,-7,-1,-4,-3,-48,-50,-51,-49,]),'RCURLY':([2,5,6,7,18,19,20,46,110,117,120,121,],[-2,-5,-6,-7,-1,46,-4,-3,-48,-50,-51,-49,]),'SEMICOLON':([4,8,10,11,12,14,21,22,23,24,29,30,31,32,33,35,37,56,57,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,92,103,104,105,],[20,-8,-10,-11,-13,-47,-9,-15,-16,-17,-36,-37,-38,-60,-61,-12,-46,-32,-31,-18,-19,-20,-21,-22,-14,-23,-24,-25,-26,-27,-28,-29,-30,-54,-57,-33,-34,-35,]),'ELSE':([5,6,7,20,46,110,117,120,121,],[-5,-6,-7,-4,-3,119,-50,-51,-49,]),'STRING':([9,12,47,],[24,24,24,]),'MINUS':([9,12,14,23,25,29,30,31,32,33,37,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,68,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,92,96,97,98,99,100,101,103,104,105,111,112,113,114,115,116,],[25,25,-47,49,25,-36,-37,-38,-60,-61,-46,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-32,-31,25,25,25,25,49,49,49,49,49,49,-23,-24,-25,-26,-27,-28,-29,-30,49,49,49,-54,-57,25,25,25,25,25,25,-33,-34,-35,49,49,49,49,49,49,]),'EYE':([9,12,25,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,58,59,60,66,96,97,98,99,100,101,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'ZEROS':([9,12,25,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,58,59,60,66,96,97,98,99,100,101,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'ONES':([9,12,25,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,58,59,60,66,96,97,98,99,100,101,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'INT':([9,12,25,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,58,59,60,63,66,93,96,97,98,99,100,101,107,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,32,32,32,32,32,32,32,32,91,]),'FLOAT':([9,12,25,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,58,59,60,66,93,96,97,98,99,100,101,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'LSQUAR':([9,12,14,25,34,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,58,59,60,66,88,96,97,98,99,100,101,],[34,34,38,34,38,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,38,34,34,34,34,34,34,]),'ASSIGN':([14,17,36,37,92,],[-47,41,63,-46,-57,]),'ADDASSIGN':([14,17,37,92,],[-47,42,-46,-57,]),'SUBASSIGN':([14,17,37,92,],[-47,43,-46,-57,]),'MULASSIGN':([14,17,37,92,],[-47,44,-46,-57,]),'DIVASSIGN':([14,17,37,92,],[-47,45,-46,-57,]),'PLUS':([14,23,29,30,31,32,33,37,56,57,68,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,92,103,104,105,111,112,113,114,115,116,],[-47,48,-36,-37,-38,-60,-61,-46,-32,-31,48,48,48,48,48,48,-23,-24,-25,-26,-27,-28,-29,-30,48,48,48,-54,-57,-33,-34,-35,48,48,48,48,48,48,]),'TIMES':([14,23,29,30,31,32,33,37,56,57,68,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,92,103,104,105,111,112,113,114,115,116,],[-47,50,-36,-37,-38,-60,-61,-46,-32,-31,50,50,50,50,50,50,-23,-24,-25,-26,-27,-28,-29,-30,50,50,50,-54,-57,-33,-34,-35,50,50,50,50,50,50,]),'DIVIDE':([14,23,29,30,31,32,33,37,56,57,68,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,92,103,104,105,111,112,113,114,115,116,],[-47,51,-36,-37,-38,-60,-61,-46,-32,-31,51,51,51,51,51,51,-23,-24,-25,-26,-27,-28,-29,-30,51,51,51,-54,-57,-33,-34,-35,51,51,51,51,51,51,]),'DOTADD':([14,23,29,30,31,32,33,37,56,57,68,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,92,103,104,105,111,112,113,114,115,116,],[-47,52,-36,-37,-38,-60,-61,-46,-32,-31,52,52,52,52,52,52,-23,-24,-25,-26,-27,-28,-29,-30,52,52,52,-54,-57,-33,-34,-35,52,52,52,52,52,52,]),'DOTSUB':([14,23,29,30,31,32,33,37,56,57,68,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,92,103,104,105,111,112,113,114,115,116,],[-47,53,-36,-37,-38,-60,-61,-46,-32,-31,53,53,53,53,53,53,-23,-24,-25,-26,-27,-28,-29,-30,53,53,53,-54,-57,-33,-34,-35,53,53,53,53,53,53,]),'DOTMUL':([14,23,29,30,31,32,33,37,56,57,68,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,92,103,104,105,111,112,113,114,115,116,],[-47,54,-36,-37,-38,-60,-61,-46,-32,-31,54,54,54,54,54,54,-23,-24,-25,-26,-27,-28,-29,-30,54,54,54,-54,-57,-33,-34,-35,54,54,54,54,54,54,]),'DOTDIV':([14,23,29,30,31,32,33,37,56,57,68,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,92,103,104,105,111,112,113,114,115,116,],[-47,55,-36,-37,-38,-60,-61,-46,-32,-31,55,55,55,55,55,55,-23,-24,-25,-26,-27,-28,-29,-30,55,55,55,-54,-57,-33,-34,-35,55,55,55,55,55,55,]),'TRANSPOSE':([14,23,29,30,31,32,33,37,56,57,68,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,92,103,104,105,111,112,113,114,115,116,],[-47,56,-36,-37,-38,-60,-61,-46,-32,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-54,-57,-33,-34,-35,56,56,56,56,56,56,]),'COMMA':([14,22,23,24,29,30,31,32,33,37,56,57,61,62,64,65,76,77,78,79,80,81,82,83,87,92,103,104,105,106,108,],[-47,47,-16,-17,-36,-37,-38,-60,-61,-46,-32,-31,88,-56,93,-59,-23,-24,-25,-26,-27,-28,-29,-30,-54,-57,-33,-34,-35,-55,-58,]),'MORE':([14,29,30,31,32,33,37,56,57,68,76,77,78,79,80,81,82,83,87,92,103,104,105,],[-47,-36,-37,-38,-60,-61,-46,-32,-31,96,-23,-24,-25,-26,-27,-28,-29,-30,-54,-57,-33,-34,-35,]),'LESS':([14,29,30,31,32,33,37,56,57,68,76,77,78,79,80,81,82,83,87,92,103,104,105,],[-47,-36,-37,-38,-60,-61,-46,-32,-31,97,-23,-24,-25,-26,-27,-28,-29,-30,-54,-57,-33,-34,-35,]),'MOREOREQ':([14,29,30,31,32,33,37,56,57,68,76,77,78,79,80,81,82,83,87,92,103,104,105,],[-47,-36,-37,-38,-60,-61,-46,-32,-31,98,-23,-24,-25,-26,-27,-28,-29,-30,-54,-57,-33,-34,-35,]),'LESSOREQ':([14,29,30,31,32,33,37,56,57,68,76,77,78,79,80,81,82,83,87,92,103,104,105,],[-47,-36,-37,-38,-60,-61,-46,-32,-31,99,-23,-24,-25,-26,-27,-28,-29,-30,-54,-57,-33,-34,-35,]),'EQUALS':([14,29,30,31,32,33,37,56,57,68,76,77,78,79,80,81,82,83,87,92,103,104,105,],[-47,-36,-37,-38,-60,-61,-46,-32,-31,100,-23,-24,-25,-26,-27,-28,-29,-30,-54,-57,-33,-34,-35,]),'NOTEQUALS':([14,29,30,31,32,33,37,56,57,68,76,77,78,79,80,81,82,83,87,92,103,104,105,],[-47,-36,-37,-38,-60,-61,-46,-32,-31,101,-23,-24,-25,-26,-27,-28,-29,-30,-54,-57,-33,-34,-35,]),'RPAREN':([14,29,30,31,32,33,37,56,57,67,69,76,77,78,79,80,81,82,83,84,85,86,87,92,94,103,104,105,109,111,112,113,114,115,116,],[-47,-36,-37,-38,-60,-61,-46,-32,-31,95,102,-23,-24,-25,-26,-27,-28,-29,-30,103,104,105,-54,-57,109,-33,-34,-35,-39,-40,-41,-42,-43,-44,-45,]),'COLON':([14,37,89,90,91,92,],[-47,-46,107,-52,-53,-57,]),'LPAREN':([15,16,26,27,28,39,40,66,],[39,40,58,59,60,66,66,66,]),'RSQUAR':([32,33,61,62,64,65,92,106,108,],[-60,-61,87,-56,92,-59,-57,-55,-58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,3,],[1,19,]),'instruction':([0,1,3,19,95,102,118,119,],[2,18,2,18,110,117,120,121,]),'line':([0,1,3,19,95,102,118,119,],[4,4,4,4,4,4,4,4,]),'for_state':([0,1,3,19,95,102,118,119,],[5,5,5,5,5,5,5,5,]),'ifelse_state':([0,1,3,19,95,102,118,119,],[6,6,6,6,6,6,6,6,]),'while_state':([0,1,3,19,95,102,118,119,],[7,7,7,7,7,7,7,7,]),'assign':([0,1,3,19,95,102,118,119,],[8,8,8,8,8,8,8,8,]),'object':([0,1,3,9,12,19,25,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,58,59,60,63,66,95,96,97,98,99,100,101,102,107,118,119,],[17,17,17,29,29,17,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,90,29,17,29,29,29,29,29,29,17,90,17,17,]),'print_state':([9,12,47,],[21,35,75,]),'printable':([9,12,47,],[22,22,22,]),'operation':([9,12,25,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,58,59,60,66,96,97,98,99,100,101,],[23,23,57,68,68,70,71,72,73,74,23,76,77,78,79,80,81,82,83,84,85,86,68,111,112,113,114,115,116,]),'number':([9,12,25,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,58,59,60,66,93,96,97,98,99,100,101,],[30,30,30,65,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,108,30,30,30,30,30,30,]),'matrix':([9,12,25,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,58,59,60,66,96,97,98,99,100,101,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'vector':([14,34,88,],[37,62,106,]),'row':([34,],[61,]),'elem':([38,],[64,]),'bool':([39,40,66,],[67,69,94,]),'forable':([63,107,],[89,118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression instruction','expression',2,'p_expression','Mparser.py',25),
  ('expression -> instruction','expression',1,'p_expression','Mparser.py',26),
  ('instruction -> LCURLY expression RCURLY','instruction',3,'p_instruction','Mparser.py',34),
  ('instruction -> line SEMICOLON','instruction',2,'p_instruction','Mparser.py',35),
  ('instruction -> for_state','instruction',1,'p_instruction','Mparser.py',36),
  ('instruction -> ifelse_state','instruction',1,'p_instruction','Mparser.py',37),
  ('instruction -> while_state','instruction',1,'p_instruction','Mparser.py',38),
  ('line -> assign','line',1,'p_line','Mparser.py',46),
  ('line -> PRINT print_state','line',2,'p_line','Mparser.py',47),
  ('line -> BREAK','line',1,'p_line','Mparser.py',48),
  ('line -> CONTINUE','line',1,'p_line','Mparser.py',49),
  ('line -> RETURN print_state','line',2,'p_line','Mparser.py',50),
  ('line -> RETURN','line',1,'p_line','Mparser.py',51),
  ('print_state -> printable COMMA print_state','print_state',3,'p_print_state','Mparser.py',63),
  ('print_state -> printable','print_state',1,'p_print_state','Mparser.py',64),
  ('printable -> operation','printable',1,'p_printable','Mparser.py',72),
  ('printable -> STRING','printable',1,'p_printable','Mparser.py',73),
  ('assign -> object ASSIGN operation','assign',3,'p_assign','Mparser.py',81),
  ('assign -> object ADDASSIGN operation','assign',3,'p_assign','Mparser.py',82),
  ('assign -> object SUBASSIGN operation','assign',3,'p_assign','Mparser.py',83),
  ('assign -> object MULASSIGN operation','assign',3,'p_assign','Mparser.py',84),
  ('assign -> object DIVASSIGN operation','assign',3,'p_assign','Mparser.py',85),
  ('operation -> operation PLUS operation','operation',3,'p_operation','Mparser.py',91),
  ('operation -> operation MINUS operation','operation',3,'p_operation','Mparser.py',92),
  ('operation -> operation TIMES operation','operation',3,'p_operation','Mparser.py',93),
  ('operation -> operation DIVIDE operation','operation',3,'p_operation','Mparser.py',94),
  ('operation -> operation DOTADD operation','operation',3,'p_operation','Mparser.py',95),
  ('operation -> operation DOTSUB operation','operation',3,'p_operation','Mparser.py',96),
  ('operation -> operation DOTMUL operation','operation',3,'p_operation','Mparser.py',97),
  ('operation -> operation DOTDIV operation','operation',3,'p_operation','Mparser.py',98),
  ('operation -> MINUS operation','operation',2,'p_operation','Mparser.py',99),
  ('operation -> operation TRANSPOSE','operation',2,'p_operation','Mparser.py',100),
  ('operation -> EYE LPAREN operation RPAREN','operation',4,'p_operation','Mparser.py',101),
  ('operation -> ZEROS LPAREN operation RPAREN','operation',4,'p_operation','Mparser.py',102),
  ('operation -> ONES LPAREN operation RPAREN','operation',4,'p_operation','Mparser.py',103),
  ('operation -> object','operation',1,'p_operation','Mparser.py',104),
  ('operation -> number','operation',1,'p_operation','Mparser.py',105),
  ('operation -> matrix','operation',1,'p_operation','Mparser.py',106),
  ('bool -> LPAREN bool RPAREN','bool',3,'p_bool','Mparser.py',126),
  ('bool -> operation MORE operation','bool',3,'p_bool','Mparser.py',127),
  ('bool -> operation LESS operation','bool',3,'p_bool','Mparser.py',128),
  ('bool -> operation MOREOREQ operation','bool',3,'p_bool','Mparser.py',129),
  ('bool -> operation LESSOREQ operation','bool',3,'p_bool','Mparser.py',130),
  ('bool -> operation EQUALS operation','bool',3,'p_bool','Mparser.py',131),
  ('bool -> operation NOTEQUALS operation','bool',3,'p_bool','Mparser.py',132),
  ('object -> ID vector','object',2,'p_object','Mparser.py',141),
  ('object -> ID','object',1,'p_object','Mparser.py',142),
  ('ifelse_state -> IF LPAREN bool RPAREN instruction','ifelse_state',5,'p_ifelse_state','Mparser.py',151),
  ('ifelse_state -> IF LPAREN bool RPAREN instruction ELSE instruction','ifelse_state',7,'p_ifelse_state','Mparser.py',152),
  ('while_state -> WHILE LPAREN bool RPAREN instruction','while_state',5,'p_while_state','Mparser.py',160),
  ('for_state -> FOR ID ASSIGN forable COLON forable instruction','for_state',7,'p_for_state','Mparser.py',165),
  ('forable -> object','forable',1,'p_forable','Mparser.py',170),
  ('forable -> INT','forable',1,'p_forable','Mparser.py',171),
  ('matrix -> LSQUAR row RSQUAR','matrix',3,'p_matrix','Mparser.py',179),
  ('row -> row COMMA vector','row',3,'p_row','Mparser.py',184),
  ('row -> vector','row',1,'p_row','Mparser.py',185),
  ('vector -> LSQUAR elem RSQUAR','vector',3,'p_vector','Mparser.py',193),
  ('elem -> elem COMMA number','elem',3,'p_elem','Mparser.py',198),
  ('elem -> number','elem',1,'p_elem','Mparser.py',199),
  ('number -> INT','number',1,'p_number','Mparser.py',207),
  ('number -> FLOAT','number',1,'p_number','Mparser.py',208),
]
